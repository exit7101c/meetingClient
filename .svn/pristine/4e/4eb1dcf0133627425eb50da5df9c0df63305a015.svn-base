{"version":3,"file":"js/5023-legacy.44912653.js","mappings":"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","sources":["webpack://navy/./src/components/PageLoadingCheck.vue","webpack://navy/./src/components/PageLoadingCheck.vue?d711","webpack://navy/./src/views/page/OpenChatMap.vue","webpack://navy/./src/components/OpenChat/OpenChatMapUserInfo.vue","webpack://navy/./src/components/OpenChat/OpenChatMapUserInfo.vue?57d1","webpack://navy/./src/views/page/OpenChatMap.vue?2cfc"],"sourcesContent":["<template>\n  <ion-spinner name=\"lines\"></ion-spinner>\n</template>\n<script>\nexport default {\n  name: \"PageLoadingCheck\"\n};\n</script>\n<style lang=\"scss\"></style>\n","import { render } from \"./PageLoadingCheck.vue?vue&type=template&id=ecd16aee\"\nimport script from \"./PageLoadingCheck.vue?vue&type=script&lang=js\"\nexport * from \"./PageLoadingCheck.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <ion-page>\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-buttons slot=\"start\">\r\n          <BackButton @event=\"goRouter\" :custom=\"true\" />\r\n        </ion-buttons>\r\n        <ion-title>지도로 보기</ion-title>\r\n      </ion-toolbar>\r\n      <ion-toolbar class=\"category-filter\">\r\n        <ion-segment\r\n          v-model=\"partitionCd\"\r\n          mode=\"ios\"\r\n          :scrollable=\"true\"\r\n          class=\"segment-chip\"\r\n        >\r\n          <ion-segment-button\r\n            value=\"\"\r\n            @click=\"partitionBtn()\"\r\n            class=\"shape-round\"\r\n          >전체\r\n          </ion-segment-button>\r\n          <ion-segment-button\r\n            :disabled=\"false\"\r\n            v-for=\"item in partitionList\"\r\n            :key=\"item.id\"\r\n            :value=\"item.partitionCd\"\r\n            @click=\"partitionBtn(item)\"\r\n            class=\"shape-round\"\r\n          >\r\n            {{ item.partitionNm }}\r\n          </ion-segment-button>\r\n        </ion-segment>\r\n      </ion-toolbar>\r\n      <ion-toolbar class=\"category-filter\">\r\n        <ion-segment\r\n          v-model=\"subPartitionCd\"\r\n          mode=\"ios\"\r\n          :scrollable=\"true\"\r\n          value=\"\"\r\n          class=\"segment-chip\"\r\n        >\r\n          <ion-segment-button\r\n            value=\"\"\r\n            @click=\"partitionSubBtn\"\r\n            class=\"border-secondary\"\r\n            >전체\r\n          </ion-segment-button>\r\n          <template v-if=\"partitionCd != ''\">\r\n            <ion-segment-button\r\n              :disabled=\"false\"\r\n              v-for=\"item in partitionSubList\"\r\n              :key=\"item.id\"\r\n              :value=\"item.subPartitionCd\"\r\n              class=\"border-secondary\"\r\n              @click=\"partitionSubBtn(item)\"\r\n            >\r\n              {{ item.subPartitionNm }}\r\n            </ion-segment-button>\r\n          </template>\r\n          <!-- 스타일을 잡기위한 더미용 -->\r\n          <template v-if=\"!partitionSubList.length || partitionCd == ''\">\r\n            <ion-segment-button\r\n              v-for=\"(n, index) in 10\"\r\n              :key=\"index\"\r\n              class=\"is-blind\"\r\n            >\r\n            </ion-segment-button>\r\n          </template>\r\n        </ion-segment>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n    <ion-content :fullscreen=\"true\">\r\n      <PageLoadingCheck\r\n        v-if=\"lodingCheck == false\"\r\n        style=\"\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          margin: 0 auto;\r\n          height: 100%;\r\n        \"\r\n      />\r\n      <div id=\"openchatMap\" style=\"width: 100%; height: 100%\"></div>\r\n      <ion-modal\r\n        :is-open=\"mapInfoModal\"\r\n        handle-behavior=\"cycle\"\r\n        @ionModalDidDismiss=\"mapInfoModal = false\"\r\n        :initial-breakpoint=\"0.95\"\r\n        :breakpoints=\"[0, 0.15, 0.5, 0.95]\"\r\n        class=\"custom-modal bottom-modal\"\r\n      >\r\n        <ion-content>\r\n          <CustomModalLayout>\r\n            <template #header>\r\n              <OpenChatMapUserInfo\r\n                :item=\"modalItem\"\r\n                :thumbnail=\"cdnThumbNmProfile\"\r\n                @click=\"modalBtn('openProfile', modalItem)\"\r\n              />\r\n            </template>\r\n            <template #content>\r\n              <div class=\"row-box\">\r\n                <div class=\"content\">\r\n                  <h5 class=\"text-xl text-bold\">{{ modalItem.title }}</h5>\r\n                  <p class=\"text-md text-bold\">\r\n                    {{ modalItem.content }}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </template>\r\n            <template #footer>\r\n              <div class=\"row-box\">\r\n                <ion-text color=\"light\" class=\"text-sm\">\r\n                  <ion-icon :icon=\"locationOutline\"></ion-icon>\r\n                  <ion-label>\r\n                    <span>{{ modalItem.location }}</span>\r\n                  </ion-label>\r\n                </ion-text>\r\n              </div>\r\n              <div class=\"row-box\">\r\n                <ion-button\r\n                  @click=\"modalBtn('openView', modalItem)\"\r\n                  color=\"primary\"\r\n                  shape=\"round\"\r\n                  expand=\"block\"\r\n                  size=\"large\"\r\n                >\r\n                  게시글 이동\r\n                </ion-button>\r\n              </div>\r\n            </template>\r\n          </CustomModalLayout>\r\n        </ion-content>\r\n      </ion-modal>\r\n    </ion-content>\r\n  </ion-page>\r\n</template>\r\n\r\n<script>\r\nimport { locationOutline, search } from 'ionicons/icons';\r\nimport { loadingController } from '@ionic/vue';\r\nimport {\r\n  getData,\r\n  openChatViewMapFn,\r\n  dailyCardInfoMapFn,\r\n  getRecentDate\r\n} from '@/assets/js/common';\r\nimport OpenChatMapUserInfo from '@/components/OpenChat/OpenChatMapUserInfo.vue';\r\nimport PageLoadingCheck from '@/components/PageLoadingCheck.vue';\r\nimport { MarkerClustering } from '@/assets/js/MarkerClustering';\r\n\r\nexport default {\r\n  name: 'OpenChatMap',\r\n  components: {\r\n    OpenChatMapUserInfo,\r\n    PageLoadingCheck\r\n  },\r\n  data() {\r\n    return {\r\n      locationOutline,\r\n      search,\r\n      itemList: [],\r\n      map: null,\r\n\r\n      addrItem: '',\r\n      currLat: '',\r\n      currLon: '',\r\n      mapInfoModal: false,\r\n      modalItem: '',\r\n      loading: null,\r\n\r\n      partitionCd: '',\r\n      partitionList: [],\r\n      subPartitionCd: '',\r\n      partitionSubList: [\r\n        { id: 1, subPartitionCd: 'allTime', subPartitionNm: '상시 모집' },\r\n        { id: 2, subPartitionCd: 'today', subPartitionNm: '오늘' },\r\n        { id: 3, subPartitionCd: 'tomorrow', subPartitionNm: '내일' },\r\n        { id: 4, subPartitionCd: 'week', subPartitionNm: '이번주' },\r\n        { id: 5, subPartitionCd: 'month', subPartitionNm: '이번달' }\r\n      ],\r\n\r\n      mainFileId: '',\r\n      regUserKey: '',\r\n      userPhotoId: '',\r\n      isEndScroll: false,\r\n\r\n      ssUserYn: '',\r\n      attendYn: '',\r\n      attendChk: '',\r\n      inviteYn: '',\r\n      attendRegTime: '',\r\n      modalHeight: '500px',\r\n      intervalId: null,\r\n\r\n      selectedLat: null, // 클릭한 위치의 위도\r\n      selectedLng: null, // 클릭한 위치의 경도\r\n\r\n      cdnThumbNmProfile: '',\r\n      lodingCheck: false,\r\n\r\n      markers: [],\r\n      htmlMarker1: {\r\n        content:\r\n          \"<div class='marker' style='display: flex; align-items: center; justify-content: center; background-color: #191A37; color: #fff; font-size: 20px; font-weight: 700; box-shadow: 6px 6px 10px rgba(color: #000000, alpha: 0.16);'></div>\",\r\n        size: window.naver.maps.Size(40, 40),\r\n        anchor: window.naver.maps.Point(20, 20)\r\n      },\r\n      htmlMarker2: {\r\n        content:\r\n          \"<div class='marker' style='display: flex; align-items: center; justify-content: center; background-color: #191A37; color: #fff; font-size: 20px; font-weight: 700; box-shadow: 6px 6px 10px rgba(color: #000000, alpha: 0.16);'></div>\",\r\n        size: window.naver.maps.Size(40, 40),\r\n        anchor: window.naver.maps.Point(20, 20)\r\n      },\r\n      htmlMarker3: {\r\n        content:\r\n          \"<div class='marker' style='display: flex; align-items: center; justify-content: center; background-color: #191A37; color: #fff; font-size: 20px; font-weight: 700; box-shadow: 6px 6px 10px rgba(color: #000000, alpha: 0.16);'></div>\",\r\n        size: window.naver.maps.Size(40, 40),\r\n        anchor: window.naver.maps.Point(20, 20)\r\n      },\r\n      htmlMarker4: {\r\n        content:\r\n          \"<div class='marker' style='display: flex; align-items: center; justify-content: center; background-color: #191A37; color: #fff; font-size: 20px; font-weight: 700; box-shadow: 6px 6px 10px rgba(color: #000000, alpha: 0.16);'></div>\",\r\n        size: window.naver.maps.Size(40, 40),\r\n        anchor: window.naver.maps.Point(20, 20)\r\n      },\r\n      htmlMarker5: {\r\n        content:\r\n          \"<div class='marker' style='display: flex; align-items: center; justify-content: center; background-color: #191A37; color: #fff; font-size: 20px; font-weight: 700; box-shadow: 6px 6px 10px rgba(color: #000000, alpha: 0.16);'></div>\",\r\n        size: window.naver.maps.Size(40, 40),\r\n        anchor: window.naver.maps.Point(20, 20)\r\n      }\r\n    };\r\n  },\r\n  ionViewWillEnter() {\r\n    // 진입할 때 호출\r\n    this.lodingCheck = false;\r\n    this.addrItem = '';\r\n    this.currLat = '';\r\n    this.currLon = '';\r\n    this.getLoginUser();\r\n    this.getPartitionList();\r\n  },\r\n  ionViewDidLeave() {\r\n    // 떠날 때 호출\r\n    window.naver.maps.Event.clearInstanceListeners(this.map);\r\n    this.map = null;\r\n    this.markers = [];\r\n\r\n    this.partitionCd = '';\r\n    this.partitionList = [];\r\n    this.subPartitionCd = '';\r\n\r\n    document.getElementById('openchatMap').replaceChildren();\r\n  },\r\n  methods: {\r\n    /** 오픈챗 최근 활동 멘트 format 함수 **/\r\n    getRecentDate(args) {\r\n      const today = new Date();\r\n      const timeValue = new Date(args);\r\n\r\n      const betweenTime = Math.floor(\r\n        (today.getTime() - timeValue.getTime()) / 1000 / 60\r\n      );\r\n      if (betweenTime < 1) return '방금 전';\r\n      if (betweenTime < 60) {\r\n        return `${betweenTime}분 전`;\r\n      }\r\n\r\n      const betweenTimeHour = Math.floor(betweenTime / 60);\r\n      if (betweenTimeHour < 24) {\r\n        return `${betweenTimeHour}시간 전`;\r\n      }\r\n\r\n      const betweenTimeDay = Math.floor(betweenTime / 60 / 24);\r\n      if (betweenTimeDay < 365) {\r\n        return `${betweenTimeDay}일 전`;\r\n      }\r\n\r\n      return `${Math.floor(betweenTimeDay / 365)}년 전`;\r\n    },\r\n\r\n    partitionBtn(item) {\r\n      this.itemList = [];\r\n      this.partitionCd = '';\r\n      this.subPartitionCd = '';\r\n      if (item) {\r\n        this.partitionCd = item['partitionCd'];\r\n      } else {\r\n        this.partitionCd = '';\r\n      }\r\n\r\n      this.$nextTick(() => {\r\n        if (this.subPartitionCd != '') {\r\n          this.subPartitionCd = '';\r\n        }\r\n        this.getOpenChatLatLon(this.currLat, this.currLon);\r\n      });\r\n\r\n      // this.$nextTick(() => {\r\n      //   this.getPartitionList();\r\n      // });\r\n    },\r\n\r\n    partitionSubBtn(item) {\r\n      this.itemList = [];\r\n      if (item) {\r\n        this.subPartitionCd = item['subPartitionCd'];\r\n      } else {\r\n        this.subPartitionCd = '';\r\n      }\r\n\r\n      this.$nextTick(() => {\r\n        this.getOpenChatLatLon(this.currLat, this.currLon);\r\n      });\r\n    },\r\n\r\n    getPartitionList() {\r\n      getData({\r\n        url: '/getPartitionList',\r\n        param: {},\r\n        then: (data) => {\r\n          this.partitionList = data;\r\n\r\n          //if (this.partitionCd == '') this.partitionCd = data[0]['partitionCd'];\r\n\r\n          this.$nextTick(() => {\r\n            this.getOpenChatLatLon(this.currLat, this.currLon);\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    goRouter() {\r\n      this.$router.push('/openChat');\r\n    },\r\n\r\n    getLoginUser() {\r\n      getData({\r\n        url: '/getOpenChatUserAddr',\r\n        param: {},\r\n        then: (data) => {\r\n          this.addrItem = data[0];\r\n\r\n          /** 위치업데이트값 null 인경우 기본주소로 **/\r\n          if (this.addrItem.currLat != null || this.addrItem.currLon != null) {\r\n            this.currLat = this.addrItem.currLat;\r\n            this.currLon = this.addrItem.currLon;\r\n          } else {\r\n            this.currLat = this.addrItem.lat;\r\n            this.currLon = this.addrItem.lon;\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    getOpenChatLatLon(currLat, currLon, zoomSize) {\r\n      getData({\r\n        url: '/getOpenChatLatLon',\r\n        param: {\r\n          partitionCd: this.partitionCd,\r\n          subPartitionCd: this.subPartitionCd,\r\n          mapLat: currLat,\r\n          mapLon: currLon,\r\n          zoomSize: zoomSize ? zoomSize : ''\r\n        },\r\n        then: (data) => {\r\n          this.itemList = data;\r\n\r\n          this.lodingCheck = true;\r\n\r\n          this.$nextTick(() => {\r\n            this.naverMap(this.currLat, this.currLon);\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    modalBtn(type, item) {\r\n      if (type == 'openView') {\r\n        openChatViewMapFn({\r\n          openChatKey: item.openChatKey,\r\n          type: 'openChatMap',\r\n          modal: 'open',\r\n          mpaInfo: item\r\n        });\r\n        this.$router.push('/openChatView');\r\n        this.mapInfoModal = false;\r\n      } else if (type == 'openProfile') {\r\n        dailyCardInfoMapFn({\r\n          userKey: item.regUserKey,\r\n          type: 'openChatMap'\r\n        });\r\n        this.$router.push('/dailyCardInfo');\r\n        this.mapInfoModal = false;\r\n      }\r\n    },\r\n\r\n    modalInfo(item) {\r\n      this.modalItem = item;\r\n      this.modalItem.ssUserYn = item.ssUserKey == item.regUserKey ? 'Y' : 'N';\r\n      this.modalItem.inviteYn = item.attenderCancelYn == 'N' ? 'Y' : 'N';\r\n      this.regUserKey = this.modalItem.regUserKey;\r\n      this.mainFileId = this.modalItem.fileId;\r\n      this.mapInfoModal = true;\r\n\r\n      this.$nextTick(() => {\r\n        this.getUserInfo();\r\n      });\r\n    },\r\n\r\n    getUserInfo() {\r\n      getData({\r\n        url: '/getUserInfo',\r\n        param: {\r\n          regUserKey: this.regUserKey\r\n        },\r\n        then: (data) => {\r\n          this.userPhotoId = data.userPhotoId;\r\n          this.cdnThumbNmProfile = data.cdnThumbNm;\r\n        }\r\n      });\r\n    },\r\n\r\n    /** naver map **/\r\n    naverMap(lat, lng) {\r\n      let self = this;\r\n      const navermaps = window.naver.maps;\r\n\r\n      let mapOptions = {\r\n        center: new navermaps.LatLng(lat, lng),\r\n        zoom: this.map != null ? this.map.getZoom() : 15,\r\n        /** 줌 컨트롤러 **/\r\n        zoomControl: true,\r\n        zoomControlOptions: {\r\n          style: navermaps.ZoomControlStyle.LARGE,\r\n          position: navermaps.Position.TOP_RIGHT\r\n        }\r\n      };\r\n\r\n      /** 맵 생성 **/\r\n      document.getElementById('openchatMap').replaceChildren();\r\n      this.map = new navermaps.Map('openchatMap', mapOptions);\r\n\r\n      /** 마커 클릭시 생성 (start) **/\r\n      /** 마커 객체를 생성대기 **/\r\n      // const markerIcon = new navermaps.Marker({\r\n      //   // selectedLat, selectedLng가 있으면 지도에 추가\r\n      //   map: this.map,\r\n      //   // selectedLat, selectedLng가 있으면 해당 위치로\r\n      //   position: new navermaps.LatLng( lat, lng ),\r\n      //   icon: {\r\n      //     url: 'https://navermaps.github.io/maps.js.ncp/docs/img/example/pin_default.png', // 마커의 이미지 URL\r\n      //     size: new navermaps.Size(30, 47), // 이미지의 원래 크기\r\n      //     scaledSize: new navermaps.Size(30, 47), // 화면에 표시될 이미지 크기\r\n      //     origin: new navermaps.Point(0, 0),  // 이미지의 시작점\r\n      //     anchor: new navermaps.Point(12, 37) // 마커를 지도에 고정시킬 위치\r\n      //   }\r\n      // });\r\n      /** 마커 객체를 생성 **/\r\n      // navermaps.Event.addListener(this.map, 'click', (e) => {\r\n      //   /** 마커 위치변경 **/\r\n      //   markerIcon.setMap(null);\r\n      //   markerIcon.setPosition(e.coord);\r\n      //   markerIcon.setMap(this.map);\r\n      //\r\n      //   // 클릭한 위치의 좌표 저장\r\n      //   this.selectedLat = e.coord.lat();\r\n      //   this.selectedLng = e.coord.lng();\r\n      //   console.log(\"this.selectedLat : : :\",this.selectedLat)\r\n      //   console.log(\"this.selectedLng : : :\",this.selectedLng)\r\n      //\r\n      // });\r\n      /** 마커 클릭시 생성 (end) **/\r\n\r\n      // 지도 초기화 후 커스텀 컨트롤 생성\r\n      navermaps.Event.once(this.map, 'init', () => {\r\n        /** 현재위치로 이동 버튼 **/\r\n        let locationBtnHtml = `<a style=\"\r\n                z-index: 100;\r\n                overflow: hidden;\r\n                display: inline-block;\r\n                position: absolute;\r\n                top: 7px;\r\n                left: 5px;\r\n                width: 34px;\r\n                height: 34px;\r\n                border: 1px solid rgba(58,70,88,.45);\r\n                border-radius: 2px;\r\n                background: #fcfcfd;\r\n                  background-clip: border-box;\r\n                text-align: center;\r\n                -webkit-background-clip: padding;\r\n                background-clip: padding-box;\r\n              \"\r\n            >\r\n            <span style=\"\r\n                overflow: hidden;\r\n                display: inline-block;\r\n                color: transparent !important;\r\n                vertical-align: top;\r\n                background: url(https://ssl.pstatic.net/static/maps/m/spr_trff_v6.png) 0 0;\r\n                background-position-x: 0px;\r\n                background-position-y: 0px;\r\n                background-size: auto;\r\n                background-size: 200px 200px;\r\n                -webkit-background-size: 200px 200px;\r\n                width: 20px;\r\n                height: 20px;\r\n                margin: 7px 0 0 0;\r\n                background-position: -153px -31px;\r\n              \">중심위치</span>\r\n           </a>`;\r\n        let customControl = new navermaps.CustomControl(locationBtnHtml, {\r\n          position: navermaps.Position.TOP_LEFT // 버튼의 위치 설정\r\n        });\r\n\r\n        customControl.setMap(self.map); // 버튼을 지도에 추가\r\n        /** 현재위치로 이동 버튼 **/\r\n\r\n        navermaps.Event.addDOMListener(\r\n          customControl.getElement(),\r\n          'click',\r\n          () => {\r\n            self.map.setCenter(new navermaps.LatLng(lat, lng)); // 버튼 클릭 시 지도 중심 변경\r\n          }\r\n        );\r\n      });\r\n\r\n      // 마커 초기화\r\n      this.clearMarker();\r\n      this.markers = [];\r\n      /** 마커 생성 **/\r\n      this.itemList.forEach((markerInfo) => {\r\n        if (Object.keys(markerInfo.recentTime).length > 0) {\r\n          markerInfo.recentTime = this.getRecentDate(markerInfo.recentTime);\r\n        }\r\n\r\n        const markerLatLng = new navermaps.LatLng(\r\n          markerInfo.lat,\r\n          markerInfo.lon\r\n        );\r\n\r\n        const marker = new navermaps.Marker({\r\n          position: markerLatLng,\r\n          map: self.map,\r\n          icon: {\r\n            // TODO: class marker 추가 => 추후 cluster 작업시 아래와 같은 구조로 작업해주시면 됩니다\r\n            content: `<div class=\"marker\"><img src=\"https://${markerInfo.cdnThumbNm}\" /></div>`,\r\n            // url: 'https://' + markerInfo.cdnThumbNm, // 마커의 이미지 URL\r\n            size: new navermaps.Size(60, 60), // 이미지의 원래 크기\r\n            scaledSize: new navermaps.Size(60, 60), // 화면에 표시될 이미지 크기\r\n            origin: new navermaps.Point(0, 0), // 이미지의 시작점\r\n            anchor: new navermaps.Point(12, 37) // 마커를 지도에 고정시킬 위치\r\n          },\r\n          title: markerInfo.title\r\n        });\r\n\r\n        /** 마커 이벤트 **/\r\n        navermaps.Event.addListener(marker, \"click\", () => {\r\n          this.modalInfo(markerInfo);\r\n        });\r\n\r\n        this.markers.push(marker);\r\n      });\r\n\r\n      navermaps.Event.addListener(self.map, 'zoom_changed', function () {\r\n        self.updateMarkers();\r\n      });\r\n\r\n      navermaps.Event.addListener(self.map, \"dragend\", function() {\r\n        self.updateMarkers();\r\n      });\r\n\r\n      let markerClustering = new MarkerClustering({\r\n        minClusterSize: 2,\r\n        maxZoom: 16,\r\n        map: self.map,\r\n        markers: self.markers,\r\n        disableClickZoom: false,\r\n        gridSize: 50,\r\n        icons: [self.htmlMarker1, self.htmlMarker2, self.htmlMarker3, self.htmlMarker4, self.htmlMarker5],\r\n        stylingFunction: function (clusterMarker, count) {\r\n          const el = clusterMarker.getElement().children[0];\r\n          el.innerHTML = count;\r\n        }\r\n      });\r\n    },\r\n    /** 로딩 **/\r\n    async showLoading() {\r\n      this.loading = await loadingController.create({\r\n        message: 'Loading...',\r\n        duration: 0\r\n      });\r\n\r\n      await this.loading.present();\r\n    },\r\n\r\n    updateMarkers() {\r\n      // let mapBounds = this.map.getBounds();\r\n      // let marker, position;\r\n      //\r\n      // for (let i = 0; i < this.markers.length; i++) {\r\n      //   marker = this.markers[i];\r\n      //   position = marker.getPosition();\r\n      //\r\n      //   if (mapBounds.hasLatLng(position)) {\r\n      //     this.showMarker(marker);\r\n      //   } else {\r\n      //     this.hideMarker(marker);\r\n      //   }\r\n      // }\r\n\r\n      this.currLat = this.map.getCenter().y;\r\n      this.currLon = this.map.getCenter().x;\r\n\r\n      this.getOpenChatLatLon(this.currLat, this.currLon, this.map.zoom);\r\n    },\r\n\r\n    showMarker(marker) {\r\n      if (marker.setMap()) return;\r\n      marker.setMap(this.map);\r\n    },\r\n\r\n    hideMarker(marker) {\r\n      if (!marker.setMap()) return;\r\n      marker.setMap(null);\r\n    },\r\n\r\n    clearMarker() {\r\n      for (let i = 0; i < this.markers.length; i++) {\r\n        this.markers[i].setMap(null);\r\n      }\r\n    }\r\n  },\r\n  mounted() {}\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\nion-modal {\r\n  --height: 310px;\r\n}\r\n\r\n.category-filter {\r\n  padding: 5px 5px !important;\r\n  --min-height: 40px;\r\n\r\n  + .category-filter {\r\n    margin-top: -10px;\r\n  }\r\n\r\n  * {\r\n    padding: 0px 14px;\r\n  }\r\n\r\n  .toolbar-container {\r\n    display: flex;\r\n    justify-content: flex-start !important;\r\n    align-items: center;\r\n\r\n    height: 45px !important;\r\n  }\r\n\r\n  .segment-chip {\r\n    border-radius: 0px !important;\r\n  }\r\n}\r\n</style>\r\n","<template>\n  <ion-item lines=\"none\">\n    <ion-avatar slot=\"start\">\n      <img\n        :src=\"'https://' + thumbnail\"\n        @ionError=\"\n          $event.srcElement.src = require('../../assets/img/Loading_icon.gif')\n        \"\n      />\n    </ion-avatar>\n    <ion-label style=\"display: flex; justify-content: space-between;\">\n      <ion-text color=\"light\">\n        {{ item.nick }}\n      </ion-text>\n      <ion-text color=\"light\">\n        <span v-if=\"item.recentTime != '방금 전'\" style=\"font-size: 12px;\"> 방장이 {{ item.recentTime }} 마지막으로 활동했습니다. </span>\n        <span v-else style=\"font-size: 12px; color: #f1f157;\"> 방장이 현재 활동 중 입니다 </span>\n      </ion-text>\n    </ion-label>\n    <!--    <ion-buttons slot=\"end\">-->\n    <!--      <ion-button @click=\"modalBtn('openView', modalItem)\">-->\n    <!--        <ion-icon-->\n    <!--            slot=\"icon-only\"-->\n    <!--            :icon=\"search\"-->\n    <!--            style=\"color: black\"-->\n    <!--        />-->\n    <!--      </ion-button>-->\n    <!--    </ion-buttons>-->\n  </ion-item>\n</template>\n<script>\nimport { search } from \"ionicons/icons\";\n\nexport default {\n  name: \"OpenChatMapUserInfo\",\n  props: {\n    item: {\n      type: String\n    },\n    thumbnail: {\n      type: String\n    }\n  },\n  methods: {}\n};\n</script>\n<style lang=\"scss\" scoped>\nion-item {\n  --padding-start: 0;\n}\n</style>\n","import { render } from \"./OpenChatMapUserInfo.vue?vue&type=template&id=a4c010ac&scoped=true\"\nimport script from \"./OpenChatMapUserInfo.vue?vue&type=script&lang=js\"\nexport * from \"./OpenChatMapUserInfo.vue?vue&type=script&lang=js\"\n\nimport \"./OpenChatMapUserInfo.vue?vue&type=style&index=0&id=a4c010ac&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a4c010ac\"]])\n\nexport default __exports__","import { render } from \"./OpenChatMap.vue?vue&type=template&id=de034bae&scoped=true\"\nimport script from \"./OpenChatMap.vue?vue&type=script&lang=js\"\nexport * from \"./OpenChatMap.vue?vue&type=script&lang=js\"\n\nimport \"./OpenChatMap.vue?vue&type=style&index=0&id=de034bae&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-de034bae\"]])\n\nexport default __exports__"],"names":["_createBlock","_component_ion_spinner","name","__exports__","render","_createElementVNode","id","style","class","_component_ion_page","_createVNode","_component_ion_header","_component_ion_toolbar","_component_ion_buttons","slot","_component_BackButton","onEvent","$options","goRouter","custom","_component_ion_title","_component_ion_segment","$data","partitionCd","$event","mode","scrollable","_component_ion_segment_button","value","onClick","_cache","partitionBtn","_createElementBlock","_Fragment","_renderList","partitionList","item","disabled","key","partitionNm","subPartitionCd","partitionSubBtn","partitionSubList","subPartitionNm","length","n","index","_component_ion_content","fullscreen","lodingCheck","_component_PageLoadingCheck","_hoisted_1","_component_ion_modal","mapInfoModal","onIonModalDidDismiss","breakpoints","_component_CustomModalLayout","header","_withCtx","_component_OpenChatMapUserInfo","modalItem","thumbnail","cdnThumbNmProfile","modalBtn","content","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","title","_hoisted_5","footer","_hoisted_6","_component_ion_text","color","_component_ion_icon","icon","locationOutline","_component_ion_label","location","_hoisted_7","_component_ion_button","shape","expand","size","_component_ion_item","lines","_component_ion_avatar","src","$props","srcElement","require","nick","recentTime","props","type","String","methods","components","OpenChatMapUserInfo","PageLoadingCheck","data","search","itemList","map","addrItem","currLat","currLon","loading","mainFileId","regUserKey","userPhotoId","isEndScroll","ssUserYn","attendYn","attendChk","inviteYn","attendRegTime","modalHeight","intervalId","selectedLat","selectedLng","markers","htmlMarker1","window","naver","maps","Size","anchor","Point","htmlMarker2","htmlMarker3","htmlMarker4","htmlMarker5","ionViewWillEnter","this","getLoginUser","getPartitionList","ionViewDidLeave","Event","clearInstanceListeners","document","getElementById","replaceChildren","getRecentDate","args","today","Date","timeValue","betweenTime","Math","floor","getTime","betweenTimeHour","betweenTimeDay","$nextTick","getOpenChatLatLon","getData","url","param","then","$router","push","lat","lon","zoomSize","mapLat","mapLon","naverMap","openChatViewMapFn","openChatKey","modal","mpaInfo","dailyCardInfoMapFn","userKey","modalInfo","ssUserKey","attenderCancelYn","fileId","getUserInfo","cdnThumbNm","lng","self","navermaps","mapOptions","center","LatLng","zoom","getZoom","zoomControl","zoomControlOptions","ZoomControlStyle","LARGE","position","Position","TOP_RIGHT","Map","once","locationBtnHtml","customControl","CustomControl","TOP_LEFT","setMap","addDOMListener","getElement","setCenter","clearMarker","forEach","markerInfo","Object","keys","markerLatLng","marker","Marker","scaledSize","origin","addListener","updateMarkers","MarkerClustering","minClusterSize","maxZoom","disableClickZoom","gridSize","icons","stylingFunction","clusterMarker","count","el","children","innerHTML","async","loadingController","message","duration","present","getCenter","y","x","showMarker","hideMarker","i","mounted"],"sourceRoot":""}