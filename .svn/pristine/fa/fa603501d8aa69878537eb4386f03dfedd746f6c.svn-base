{"version":3,"file":"js/6269-legacy.02ecc304.js","mappings":"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","sources":["webpack://navy/./src/components/PageLoadingCheck.vue","webpack://navy/./src/components/PageLoadingCheck.vue?d711","webpack://navy/./src/views/page/OpenChatMap.vue","webpack://navy/./src/components/OpenChat/OpenChatMapUserInfo.vue","webpack://navy/./src/components/OpenChat/OpenChatMapUserInfo.vue?57d1","webpack://navy/./src/views/page/OpenChatMap.vue?2cfc"],"sourcesContent":["<template>\n  <ion-spinner name=\"lines\"></ion-spinner>\n</template>\n<script>\nexport default {\n  name: \"PageLoadingCheck\"\n};\n</script>\n<style lang=\"scss\"></style>\n","import { render } from \"./PageLoadingCheck.vue?vue&type=template&id=ecd16aee\"\nimport script from \"./PageLoadingCheck.vue?vue&type=script&lang=js\"\nexport * from \"./PageLoadingCheck.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <ion-page>\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-buttons slot=\"start\">\r\n          <BackButton @event=\"goRouter\" :custom=\"true\" />\r\n        </ion-buttons>\r\n        <ion-title>지도로 보기</ion-title>\r\n      </ion-toolbar>\r\n      <ion-toolbar class=\"category-filter\">\r\n        <ion-segment\r\n          v-model=\"partitionCd\"\r\n          mode=\"ios\"\r\n          :scrollable=\"true\"\r\n          class=\"segment-chip\"\r\n        >\r\n          <ion-segment-button\r\n            :disabled=\"false\"\r\n            v-for=\"item in partitionList\"\r\n            :key=\"item.id\"\r\n            :value=\"item.partitionCd\"\r\n            @click=\"partitionBtn(item)\"\r\n            class=\"shape-round\"\r\n          >\r\n            {{ item.partitionNm }}\r\n          </ion-segment-button>\r\n        </ion-segment>\r\n      </ion-toolbar>\r\n      <ion-toolbar class=\"category-filter\">\r\n        <ion-segment\r\n          v-model=\"subPartitionCd\"\r\n          mode=\"ios\"\r\n          :scrollable=\"true\"\r\n          value=\"\"\r\n          class=\"segment-chip\"\r\n        >\r\n          <ion-segment-button\r\n            value=\"\"\r\n            @click=\"partitionSubBtn\"\r\n            class=\"border-secondary\"\r\n          >전체\r\n          </ion-segment-button>\r\n          <template v-if=\"partitionCd != ''\">\r\n            <ion-segment-button\r\n              :disabled=\"false\"\r\n              v-for=\"item in partitionSubList\"\r\n              :key=\"item.id\"\r\n              :value=\"item.subPartitionCd\"\r\n              class=\"border-secondary\"\r\n              @click=\"partitionSubBtn(item)\"\r\n            >\r\n              {{ item.subPartitionNm }}\r\n            </ion-segment-button>\r\n          </template>\r\n          <!-- 스타일을 잡기위한 더미용 -->\r\n          <template v-if=\"!partitionSubList.length || partitionCd == ''\">\r\n            <ion-segment-button\r\n              v-for=\"(n, index) in 10\"\r\n              :key=\"index\"\r\n              class=\"is-blind\"\r\n            >\r\n            </ion-segment-button>\r\n          </template>\r\n        </ion-segment>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n    <ion-content :fullscreen=\"true\">\r\n      <PageLoadingCheck\r\n        v-if=\"lodingCheck == false\"\r\n        style=\"\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          margin: 0 auto;\r\n          height: 100%;\r\n        \"\r\n      />\r\n      <div id=\"map\" style=\"width: 100%; height: 100%\"></div>\r\n      <ion-modal\r\n        :is-open=\"mapInfoModal\"\r\n        handle-behavior=\"cycle\"\r\n        @ionModalDidDismiss=\"mapInfoModal = false\"\r\n        :initial-breakpoint=\"0.95\"\r\n        :breakpoints=\"[0, 0.15, 0.5, 0.95]\"\r\n        class=\"custom-modal bottom-modal\"\r\n      >\r\n        <ion-content>\r\n          <CustomModalLayout>\r\n            <template #header>\r\n              <OpenChatMapUserInfo\r\n                :item=\"modalItem\"\r\n                :thumbnail=\"cdnThumbNmProfile\"\r\n                @click=\"modalBtn('openProfile', modalItem)\"\r\n              />\r\n            </template>\r\n            <template #content>\r\n              <div class=\"row-box\">\r\n                <div class=\"content\">\r\n                  <h5 class=\"text-xl text-bold\">{{ modalItem.title }}</h5>\r\n                  <p class=\"text-md text-bold\">\r\n                    {{ modalItem.content }}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </template>\r\n            <template #footer>\r\n              <div class=\"row-box\">\r\n                <ion-text color=\"light\" class=\"text-sm\">\r\n                  <ion-icon :icon=\"locationOutline\"></ion-icon>\r\n                  <ion-label>\r\n                    <span>{{ modalItem.location }}</span>\r\n                  </ion-label>\r\n                </ion-text>\r\n              </div>\r\n              <div class=\"row-box\">\r\n                <ion-button\r\n                  @click=\"modalBtn('openView', modalItem)\"\r\n                  color=\"primary\"\r\n                  shape=\"round\"\r\n                  expand=\"block\"\r\n                  size=\"large\"\r\n                >\r\n                  게시글 이동\r\n                </ion-button>\r\n              </div>\r\n            </template>\r\n          </CustomModalLayout>\r\n        </ion-content>\r\n      </ion-modal>\r\n    </ion-content>\r\n  </ion-page>\r\n</template>\r\n\r\n<script>\r\nimport { locationOutline, search } from \"ionicons/icons\";\r\nimport { loadingController } from \"@ionic/vue\";\r\nimport {\r\n  getData,\r\n  openChatViewMapFn,\r\n  dailyCardInfoMapFn,\r\n  getRecentDate\r\n} from \"@/assets/js/common\";\r\nimport OpenChatMapUserInfo from \"@/components/OpenChat/OpenChatMapUserInfo.vue\";\r\nimport PageLoadingCheck from \"@/components/PageLoadingCheck.vue\";\r\nimport { MarkerClustering } from \"@/assets/js/MarkerClustering\";\r\n\r\nexport default {\r\n  name: \"OpenChatMap\",\r\n  components: {\r\n    OpenChatMapUserInfo,\r\n    PageLoadingCheck,\r\n  },\r\n  data() {\r\n    return {\r\n      locationOutline,\r\n      search,\r\n      itemList: [],\r\n      map: null,\r\n\r\n      addrItem: \"\",\r\n      currLat: \"\",\r\n      currLon: \"\",\r\n      mapInfoModal: false,\r\n      modalItem: \"\",\r\n      loading: null,\r\n\r\n      partitionCd: '',\r\n      partitionList: [],\r\n      subPartitionCd: '',\r\n      partitionSubList: [\r\n        {id: 1, subPartitionCd: 'allTime',subPartitionNm: '상시 모집'},\r\n        {id: 2, subPartitionCd: 'today',subPartitionNm: '오늘'},\r\n        {id: 3, subPartitionCd: 'tomorrow',subPartitionNm: '내일'},\r\n        {id: 4, subPartitionCd: 'week',subPartitionNm: '이번주'},\r\n        {id: 5, subPartitionCd: 'month',subPartitionNm: '이번달'}\r\n      ],\r\n\r\n      mainFileId: \"\",\r\n      regUserKey: \"\",\r\n      userPhotoId: \"\",\r\n      isEndScroll: false,\r\n\r\n      ssUserYn: \"\",\r\n      attendYn: \"\",\r\n      attendChk: \"\",\r\n      inviteYn: \"\",\r\n      attendRegTime: \"\",\r\n      modalHeight: \"500px\",\r\n      intervalId: null,\r\n\r\n      selectedLat: null, // 클릭한 위치의 위도\r\n      selectedLng: null, // 클릭한 위치의 경도\r\n\r\n      cdnThumbNmProfile: \"\",\r\n      lodingCheck: false,\r\n\r\n      markers: [],\r\n      htmlMarker1: {\r\n        content: \"<div class='marker' style='display: flex; align-items: center; justify-content: center; background-color: #191A37; color: #fff; font-size: 20px; font-weight: 700; box-shadow: 6px 6px 10px rgba(color: #000000, alpha: 0.16);'></div>\",\r\n        size: window.naver.maps.Size(40, 40),\r\n        anchor: window.naver.maps.Point(20, 20)\r\n      },\r\n      htmlMarker2: {\r\n        content: \"<div class='marker' style='display: flex; align-items: center; justify-content: center; background-color: #191A37; color: #fff; font-size: 20px; font-weight: 700; box-shadow: 6px 6px 10px rgba(color: #000000, alpha: 0.16);'></div>\",\r\n        size: window.naver.maps.Size(40, 40),\r\n        anchor: window.naver.maps.Point(20, 20)\r\n      },\r\n      htmlMarker3: {\r\n        content: \"<div class='marker' style='display: flex; align-items: center; justify-content: center; background-color: #191A37; color: #fff; font-size: 20px; font-weight: 700; box-shadow: 6px 6px 10px rgba(color: #000000, alpha: 0.16);'></div>\",\r\n        size: window.naver.maps.Size(40, 40),\r\n        anchor: window.naver.maps.Point(20, 20)\r\n      },\r\n      htmlMarker4: {\r\n        content: \"<div class='marker' style='display: flex; align-items: center; justify-content: center; background-color: #191A37; color: #fff; font-size: 20px; font-weight: 700; box-shadow: 6px 6px 10px rgba(color: #000000, alpha: 0.16);'></div>\",\r\n        size: window.naver.maps.Size(40, 40),\r\n        anchor: window.naver.maps.Point(20, 20)\r\n      },\r\n      htmlMarker5: {\r\n        content: \"<div class='marker' style='display: flex; align-items: center; justify-content: center; background-color: #191A37; color: #fff; font-size: 20px; font-weight: 700; box-shadow: 6px 6px 10px rgba(color: #000000, alpha: 0.16);'></div>\",\r\n        size: window.naver.maps.Size(40, 40),\r\n        anchor: window.naver.maps.Point(20, 20)\r\n      }\r\n    };\r\n  },\r\n  ionViewWillEnter() {\r\n    // 진입할 때 호출\r\n    this.lodingCheck = false;\r\n    this.addrItem = \"\";\r\n    this.currLat = \"\";\r\n    this.currLon = \"\";\r\n    this.getLoginUser();\r\n    this.getPartitionList();\r\n  },\r\n  ionViewDidLeave() {\r\n    // 떠날 때 호출\r\n    window.naver.maps.Event.clearInstanceListeners(this.map);\r\n    this.markers = [];\r\n\r\n    this.partitionCd = '';\r\n    this.partitionList = [];\r\n    this.subPartitionCd = '';\r\n  },\r\n  methods: {\r\n    /** 오픈챗 최근 활동 멘트 format 함수 **/\r\n    getRecentDate(args) {\r\n      const today = new Date();\r\n      const timeValue = new Date(args);\r\n\r\n      const betweenTime = Math.floor((today.getTime() - timeValue.getTime()) / 1000 / 60);\r\n      if (betweenTime < 1) return '방금 전';\r\n      if (betweenTime < 60) {\r\n        return `${betweenTime}분 전`;\r\n      }\r\n\r\n      const betweenTimeHour = Math.floor(betweenTime / 60);\r\n      if (betweenTimeHour < 24) {\r\n        return `${betweenTimeHour}시간 전`;\r\n      }\r\n\r\n      const betweenTimeDay = Math.floor(betweenTime / 60 / 24);\r\n      if (betweenTimeDay < 365) {\r\n        return `${betweenTimeDay}일 전`;\r\n      }\r\n\r\n      return `${Math.floor(betweenTimeDay / 365)}년 전`;\r\n    },\r\n\r\n    partitionBtn(item) {\r\n      this.itemList = [];\r\n      this.partitionCd = \"\";\r\n      this.subPartitionCd = \"\";\r\n      if (item) {\r\n        this.partitionCd = item[\"partitionCd\"];\r\n      } else {\r\n        this.partitionCd = \"\";\r\n      }\r\n\r\n      this.$nextTick(() => {\r\n        this.getPartitionList();\r\n      });\r\n    },\r\n\r\n    partitionSubBtn(item) {\r\n      this.itemList = [];\r\n      if (item) {\r\n        this.subPartitionCd = item[\"subPartitionCd\"];\r\n      } else {\r\n        this.subPartitionCd = \"\";\r\n      }\r\n\r\n      this.$nextTick(() => {\r\n        this.getOpenChatLatLon();\r\n      });\r\n    },\r\n\r\n    getPartitionList() {\r\n      getData({\r\n        url: \"/getPartitionList\",\r\n        param: {},\r\n        then: (data) => {\r\n          this.partitionList = data;\r\n\r\n          if (this.partitionCd == \"\") this.partitionCd = data[0][\"partitionCd\"];\r\n\r\n          this.$nextTick(() => {\r\n            this.getOpenChatLatLon();\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    goRouter() {\r\n      this.$router.push(\"/openChat\");\r\n    },\r\n\r\n    getLoginUser() {\r\n      getData({\r\n        url: \"/getOpenChatUserAddr\",\r\n        param: {},\r\n        then: (data) => {\r\n          this.addrItem = data[0];\r\n\r\n          /** 위치업데이트값 null 인경우 기본주소로 **/\r\n          if (\r\n            this.addrItem.currLat != null ||\r\n            this.addrItem.currLon != null\r\n          ) {\r\n            this.currLat = this.addrItem.currLat;\r\n            this.currLon = this.addrItem.currLon;\r\n          } else {\r\n            this.currLat = this.addrItem.lat;\r\n            this.currLon = this.addrItem.lon;\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    getOpenChatLatLon() {\r\n      getData({\r\n        url: \"/getOpenChatLatLon\",\r\n        param: {\r\n          partitionCd: this.partitionCd,\r\n          subPartitionCd: this.subPartitionCd\r\n        },\r\n        then: (data) => {\r\n          this.itemList = data;\r\n\r\n          this.lodingCheck = true;\r\n\r\n          this.$nextTick(() => {\r\n            this.naverMap(this.currLat, this.currLon);\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    modalBtn(type, item) {\r\n      if (type == \"openView\") {\r\n        openChatViewMapFn({\r\n          openChatKey: item.openChatKey,\r\n          type: \"openChatMap\",\r\n          modal: \"open\",\r\n          mpaInfo: item\r\n        });\r\n        this.$router.push(\"/openChatView\");\r\n        this.mapInfoModal = false;\r\n      } else if (type == \"openProfile\") {\r\n        dailyCardInfoMapFn({\r\n          userKey: item.regUserKey,\r\n          type: \"openChatMap\"\r\n        });\r\n        this.$router.push(\"/dailyCardInfo\");\r\n        this.mapInfoModal = false;\r\n      }\r\n    },\r\n\r\n    modalInfo(item) {\r\n      this.modalItem = item;\r\n      this.modalItem.ssUserYn = item.ssUserKey == item.regUserKey ? \"Y\" : \"N\";\r\n      this.modalItem.inviteYn = item.attenderCancelYn == \"N\" ? \"Y\" : \"N\";\r\n      this.regUserKey = this.modalItem.regUserKey;\r\n      this.mainFileId = this.modalItem.fileId;\r\n      this.mapInfoModal = true;\r\n\r\n      this.$nextTick(() => {\r\n        this.getUserInfo();\r\n      });\r\n    },\r\n\r\n    getUserInfo() {\r\n      getData({\r\n        url: \"/getUserInfo\",\r\n        param: {\r\n          regUserKey: this.regUserKey\r\n        },\r\n        then: (data) => {\r\n          this.userPhotoId = data.userPhotoId;\r\n          this.cdnThumbNmProfile = data.cdnThumbNm;\r\n        }\r\n      });\r\n    },\r\n\r\n    /** naver map **/\r\n    naverMap(lat, lng) {\r\n      let self = this;\r\n      const navermaps = window.naver.maps;\r\n\r\n      let mapOptions = {\r\n        center: new navermaps.LatLng(lat, lng),\r\n        zoom: 15,\r\n        /** 줌 컨트롤러 **/\r\n        zoomControl: true,\r\n        zoomControlOptions: {\r\n          style: navermaps.ZoomControlStyle.LARGE,\r\n          position: navermaps.Position.TOP_RIGHT\r\n        }\r\n      };\r\n\r\n      /** 맵 생성 **/\r\n      this.map = new navermaps.Map(\"map\", mapOptions);\r\n\r\n      /** 마커 클릭시 생성 (start) **/\r\n      /** 마커 객체를 생성대기 **/\r\n      // const markerIcon = new navermaps.Marker({\r\n      //   // selectedLat, selectedLng가 있으면 지도에 추가\r\n      //   map: this.map,\r\n      //   // selectedLat, selectedLng가 있으면 해당 위치로\r\n      //   position: new navermaps.LatLng( lat, lng ),\r\n      //   icon: {\r\n      //     url: 'https://navermaps.github.io/maps.js.ncp/docs/img/example/pin_default.png', // 마커의 이미지 URL\r\n      //     size: new navermaps.Size(30, 47), // 이미지의 원래 크기\r\n      //     scaledSize: new navermaps.Size(30, 47), // 화면에 표시될 이미지 크기\r\n      //     origin: new navermaps.Point(0, 0),  // 이미지의 시작점\r\n      //     anchor: new navermaps.Point(12, 37) // 마커를 지도에 고정시킬 위치\r\n      //   }\r\n      // });\r\n      /** 마커 객체를 생성 **/\r\n      // navermaps.Event.addListener(this.map, 'click', (e) => {\r\n      //   /** 마커 위치변경 **/\r\n      //   markerIcon.setMap(null);\r\n      //   markerIcon.setPosition(e.coord);\r\n      //   markerIcon.setMap(this.map);\r\n      //\r\n      //   // 클릭한 위치의 좌표 저장\r\n      //   this.selectedLat = e.coord.lat();\r\n      //   this.selectedLng = e.coord.lng();\r\n      //   console.log(\"this.selectedLat : : :\",this.selectedLat)\r\n      //   console.log(\"this.selectedLng : : :\",this.selectedLng)\r\n      //\r\n      // });\r\n      /** 마커 클릭시 생성 (end) **/\r\n\r\n      // 지도 초기화 후 커스텀 컨트롤 생성\r\n      navermaps.Event.once(this.map, \"init\", () => {\r\n        /** 현재위치로 이동 버튼 **/\r\n        let locationBtnHtml = `<a style=\"\r\n                z-index: 100;\r\n                overflow: hidden;\r\n                display: inline-block;\r\n                position: absolute;\r\n                top: 7px;\r\n                left: 5px;\r\n                width: 34px;\r\n                height: 34px;\r\n                border: 1px solid rgba(58,70,88,.45);\r\n                border-radius: 2px;\r\n                background: #fcfcfd;\r\n                  background-clip: border-box;\r\n                text-align: center;\r\n                -webkit-background-clip: padding;\r\n                background-clip: padding-box;\r\n              \"\r\n            >\r\n            <span style=\"\r\n                overflow: hidden;\r\n                display: inline-block;\r\n                color: transparent !important;\r\n                vertical-align: top;\r\n                background: url(https://ssl.pstatic.net/static/maps/m/spr_trff_v6.png) 0 0;\r\n                background-position-x: 0px;\r\n                background-position-y: 0px;\r\n                background-size: auto;\r\n                background-size: 200px 200px;\r\n                -webkit-background-size: 200px 200px;\r\n                width: 20px;\r\n                height: 20px;\r\n                margin: 7px 0 0 0;\r\n                background-position: -153px -31px;\r\n              \">중심위치</span>\r\n           </a>`;\r\n        let customControl = new navermaps.CustomControl(locationBtnHtml, {\r\n          position: window.naver.maps.Position.TOP_LEFT // 버튼의 위치 설정\r\n        });\r\n\r\n        customControl.setMap(this.map); // 버튼을 지도에 추가\r\n        /** 현재위치로 이동 버튼 **/\r\n\r\n        window.naver.maps.Event.addDOMListener(\r\n          customControl.getElement(),\r\n          \"click\",\r\n          () => {\r\n            this.map.setCenter(new navermaps.LatLng(lat, lng)); // 버튼 클릭 시 지도 중심 변경\r\n          }\r\n        );\r\n      });\r\n\r\n      // 마커 초기화\r\n      this.markers = [];\r\n      /** 마커 생성 **/\r\n      this.itemList.forEach((markerInfo) => {\r\n        if (Object.keys(markerInfo.recentTime).length > 0) {\r\n          markerInfo.recentTime = this.getRecentDate(markerInfo.recentTime);\r\n        }\r\n\r\n        const markerLatLng = new navermaps.LatLng(\r\n          markerInfo.lat,\r\n          markerInfo.lon\r\n        );\r\n\r\n        const marker = new navermaps.Marker({\r\n          position: markerLatLng,\r\n          map: this.map,\r\n          icon: {\r\n            // TODO: class marker 추가 => 추후 cluster 작업시 아래와 같은 구조로 작업해주시면 됩니다\r\n            content: `<div class=\"marker\"><img src=\"https://${markerInfo.cdnThumbNm}\" /></div>`,\r\n            // url: 'https://' + markerInfo.cdnThumbNm, // 마커의 이미지 URL\r\n            size: new navermaps.Size(60, 60), // 이미지의 원래 크기\r\n            scaledSize: new navermaps.Size(60, 60), // 화면에 표시될 이미지 크기\r\n            origin: new navermaps.Point(0, 0), // 이미지의 시작점\r\n            anchor: new navermaps.Point(12, 37) // 마커를 지도에 고정시킬 위치\r\n          },\r\n          title: markerInfo.title\r\n        });\r\n\r\n        /** 마커 이벤트 **/\r\n        window.naver.maps.Event.addListener(marker, \"click\", () => {\r\n          this.modalInfo(markerInfo);\r\n        });\r\n\r\n        this.markers.push(marker);\r\n      });\r\n\r\n      window.naver.maps.Event.addListener(\r\n        self.map,\r\n        \"zoom_changed\",\r\n        function() {\r\n          self.updateMarkers(self.markers);\r\n        }\r\n      );\r\n\r\n      window.naver.maps.Event.addListener(self.map, \"dragend\", function() {\r\n        self.updateMarkers(self.markers);\r\n      });\r\n\r\n      let markerClustering = new MarkerClustering({\r\n        minClusterSize: 2,\r\n        maxZoom: 16,\r\n        map: self.map,\r\n        markers: self.markers,\r\n        disableClickZoom: false,\r\n        gridSize: 50,\r\n        icons: [self.htmlMarker1, self.htmlMarker2, self.htmlMarker3, self.htmlMarker4, self.htmlMarker5],\r\n        stylingFunction: function(clusterMarker, count) {\r\n          const el = clusterMarker.getElement().children[0];\r\n          el.innerHTML = count;\r\n        }\r\n      });\r\n    },\r\n    /** 로딩 **/\r\n    async showLoading() {\r\n      this.loading = await loadingController.create({\r\n        message: \"Loading...\",\r\n        duration: 0\r\n      });\r\n\r\n      await this.loading.present();\r\n    },\r\n\r\n    updateMarkers() {\r\n      let mapBounds = this.map.getBounds();\r\n      let marker, position;\r\n\r\n      for (let i = 0; i < this.markers.length; i++) {\r\n        marker = this.markers[i];\r\n        position = marker.getPosition();\r\n\r\n        if (mapBounds.hasLatLng(position)) {\r\n          this.showMarker(marker);\r\n        } else {\r\n          this.hideMarker(marker);\r\n        }\r\n      }\r\n    },\r\n\r\n    showMarker(marker) {\r\n      if (marker.setMap()) return;\r\n      marker.setMap(this.map);\r\n    },\r\n\r\n    hideMarker(marker) {\r\n      if (!marker.setMap()) return;\r\n      marker.setMap(null);\r\n    },\r\n  },\r\n  mounted() {\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\nion-modal {\r\n  --height: 310px;\r\n}\r\n\r\n.category-filter {\r\n  padding: 0 5px !important;\r\n\r\n  * {\r\n    padding: 0px 14px;\r\n  }\r\n\r\n  .toolbar-container {\r\n    display: flex;\r\n    justify-content: flex-start !important;\r\n    align-items: center;\r\n\r\n    height: 45px !important;\r\n  }\r\n\r\n  .segment-chip {\r\n    border-radius: 0px !important;\r\n  }\r\n}\r\n\r\n\r\n\r\n</style>\r\n","<template>\n  <ion-item lines=\"none\">\n    <ion-avatar slot=\"start\">\n      <img\n        :src=\"'https://' + thumbnail\"\n        @ionError=\"\n          $event.srcElement.src = require('../../assets/img/Loading_icon.gif')\n        \"\n      />\n    </ion-avatar>\n    <ion-label style=\"display: flex; justify-content: space-between;\">\n      <ion-text color=\"light\">\n        {{ item.nick }}\n      </ion-text>\n      <ion-text color=\"light\">\n        <span v-if=\"item.recentTime != '방금 전'\" style=\"font-size: 12px;\"> 방장이 {{ item.recentTime }} 마지막으로 활동했습니다. </span>\n        <span v-else style=\"font-size: 12px; color: #f1f157;\"> 방장이 현재 활동 중 입니다 </span>\n      </ion-text>\n    </ion-label>\n    <!--    <ion-buttons slot=\"end\">-->\n    <!--      <ion-button @click=\"modalBtn('openView', modalItem)\">-->\n    <!--        <ion-icon-->\n    <!--            slot=\"icon-only\"-->\n    <!--            :icon=\"search\"-->\n    <!--            style=\"color: black\"-->\n    <!--        />-->\n    <!--      </ion-button>-->\n    <!--    </ion-buttons>-->\n  </ion-item>\n</template>\n<script>\nimport { search } from \"ionicons/icons\";\n\nexport default {\n  name: \"OpenChatMapUserInfo\",\n  props: {\n    item: {\n      type: String\n    },\n    thumbnail: {\n      type: String\n    }\n  },\n  methods: {}\n};\n</script>\n<style lang=\"scss\" scoped>\nion-item {\n  --padding-start: 0;\n}\n</style>\n","import { render } from \"./OpenChatMapUserInfo.vue?vue&type=template&id=a4c010ac&scoped=true\"\nimport script from \"./OpenChatMapUserInfo.vue?vue&type=script&lang=js\"\nexport * from \"./OpenChatMapUserInfo.vue?vue&type=script&lang=js\"\n\nimport \"./OpenChatMapUserInfo.vue?vue&type=style&index=0&id=a4c010ac&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a4c010ac\"]])\n\nexport default __exports__","import { render } from \"./OpenChatMap.vue?vue&type=template&id=6ce9ddac&scoped=true\"\nimport script from \"./OpenChatMap.vue?vue&type=script&lang=js\"\nexport * from \"./OpenChatMap.vue?vue&type=script&lang=js\"\n\nimport \"./OpenChatMap.vue?vue&type=style&index=0&id=6ce9ddac&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6ce9ddac\"]])\n\nexport default __exports__"],"names":["_createBlock","_component_ion_spinner","name","__exports__","render","_createElementVNode","id","style","class","_component_ion_page","_createVNode","_component_ion_header","_component_ion_toolbar","_component_ion_buttons","slot","_component_BackButton","onEvent","$options","goRouter","custom","_component_ion_title","_component_ion_segment","$data","partitionCd","$event","mode","scrollable","_createElementBlock","_Fragment","_renderList","partitionList","item","_component_ion_segment_button","disabled","key","value","onClick","partitionBtn","partitionNm","subPartitionCd","partitionSubBtn","partitionSubList","subPartitionNm","length","n","index","_component_ion_content","fullscreen","lodingCheck","_component_PageLoadingCheck","_hoisted_1","_component_ion_modal","mapInfoModal","onIonModalDidDismiss","_cache","breakpoints","_component_CustomModalLayout","header","_withCtx","_component_OpenChatMapUserInfo","modalItem","thumbnail","cdnThumbNmProfile","modalBtn","content","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","title","_hoisted_5","footer","_hoisted_6","_component_ion_text","color","_component_ion_icon","icon","locationOutline","_component_ion_label","location","_hoisted_7","_component_ion_button","shape","expand","size","_component_ion_item","lines","_component_ion_avatar","src","$props","srcElement","require","nick","recentTime","props","type","String","methods","components","OpenChatMapUserInfo","PageLoadingCheck","data","search","itemList","map","addrItem","currLat","currLon","loading","mainFileId","regUserKey","userPhotoId","isEndScroll","ssUserYn","attendYn","attendChk","inviteYn","attendRegTime","modalHeight","intervalId","selectedLat","selectedLng","markers","htmlMarker1","window","naver","maps","Size","anchor","Point","htmlMarker2","htmlMarker3","htmlMarker4","htmlMarker5","ionViewWillEnter","this","getLoginUser","getPartitionList","ionViewDidLeave","Event","clearInstanceListeners","getRecentDate","args","today","Date","timeValue","betweenTime","Math","floor","getTime","betweenTimeHour","betweenTimeDay","$nextTick","getOpenChatLatLon","getData","url","param","then","$router","push","lat","lon","naverMap","openChatViewMapFn","openChatKey","modal","mpaInfo","dailyCardInfoMapFn","userKey","modalInfo","ssUserKey","attenderCancelYn","fileId","getUserInfo","cdnThumbNm","lng","self","navermaps","mapOptions","center","LatLng","zoom","zoomControl","zoomControlOptions","ZoomControlStyle","LARGE","position","Position","TOP_RIGHT","Map","once","locationBtnHtml","customControl","CustomControl","TOP_LEFT","setMap","addDOMListener","getElement","setCenter","forEach","markerInfo","Object","keys","markerLatLng","marker","Marker","scaledSize","origin","addListener","updateMarkers","MarkerClustering","minClusterSize","maxZoom","disableClickZoom","gridSize","icons","stylingFunction","clusterMarker","count","el","children","innerHTML","async","loadingController","message","duration","present","mapBounds","getBounds","i","getPosition","hasLatLng","showMarker","hideMarker","mounted"],"sourceRoot":""}