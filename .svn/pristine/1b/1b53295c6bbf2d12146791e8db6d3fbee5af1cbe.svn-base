{"version":3,"file":"js/5306.5d109d67.js","mappings":"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","sources":["webpack://navy/./node_modules/@capacitor/camera/dist/esm/definitions.js","webpack://navy/./node_modules/@capacitor/camera/dist/esm/index.js","webpack://navy/./node_modules/core-js/internals/is-regexp.js","webpack://navy/./node_modules/core-js/internals/regexp-get-flags.js","webpack://navy/./node_modules/core-js/modules/es.array.includes.js","webpack://navy/./node_modules/core-js/modules/es.string.replace-all.js","webpack://navy/./node_modules/hammerjs/hammer.js","webpack://navy/./src/components/EmptyBox.vue","webpack://navy/./src/components/EmptyBox.vue?ce33"],"sourcesContent":["export var CameraSource;\n(function (CameraSource) {\n    /**\n     * Prompts the user to select either the photo album or take a photo.\n     */\n    CameraSource[\"Prompt\"] = \"PROMPT\";\n    /**\n     * Take a new photo using the camera.\n     */\n    CameraSource[\"Camera\"] = \"CAMERA\";\n    /**\n     * Pick an existing photo from the gallery or photo album.\n     */\n    CameraSource[\"Photos\"] = \"PHOTOS\";\n})(CameraSource || (CameraSource = {}));\nexport var CameraDirection;\n(function (CameraDirection) {\n    CameraDirection[\"Rear\"] = \"REAR\";\n    CameraDirection[\"Front\"] = \"FRONT\";\n})(CameraDirection || (CameraDirection = {}));\nexport var CameraResultType;\n(function (CameraResultType) {\n    CameraResultType[\"Uri\"] = \"uri\";\n    CameraResultType[\"Base64\"] = \"base64\";\n    CameraResultType[\"DataUrl\"] = \"dataUrl\";\n})(CameraResultType || (CameraResultType = {}));\n//# sourceMappingURL=definitions.js.map","import { registerPlugin } from '@capacitor/core';\nconst Camera = registerPlugin('Camera', {\n    web: () => import('./web').then(m => new m.CameraWeb()),\n});\nexport * from './definitions';\nexport { Camera };\n//# sourceMappingURL=index.js.map","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","var call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)\n    ? call(regExpFlags, R) : flags;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar fails = require('../internals/fails');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// FF99+ bug\nvar BROKEN_ON_SPARSE = fails(function () {\n  // eslint-disable-next-line es/no-array-prototype-includes -- detection\n  return !Array(1).includes();\n});\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar isCallable = require('../internals/is-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar getSubstitution = require('../internals/get-substitution');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar $TypeError = TypeError;\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar max = Math.max;\n\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return indexOf(string, searchValue, fromIndex);\n};\n\n// `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n$({ target: 'String', proto: true }, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n    if (!isNullOrUndefined(searchValue)) {\n      IS_REG_EXP = isRegExp(searchValue);\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible(getRegExpFlags(searchValue)));\n        if (!~indexOf(flags, 'g')) throw $TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n      replacer = getMethod(searchValue, REPLACE);\n      if (replacer) {\n        return call(replacer, searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return replace(toString(O), searchValue, replaceValue);\n      }\n    }\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n    while (position !== -1) {\n      replacement = functionalReplace\n        ? toString(replaceValue(searchString, position, string))\n        : getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      result += stringSlice(string, endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n    if (endOfLastMatch < string.length) {\n      result += stringSlice(string, endOfLastMatch);\n    }\n    return result;\n  }\n});\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","<template>\n  <div v-show=\"isOpen === true\"\n       style=\"height: 300px; z-index: -1\" />\n</template>\n<script>\n\nexport default {\n  name: \"EmptyBox\",\n  props: {\n    isOpen: {\n      type: Boolean\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped></style>\n","import { render } from \"./EmptyBox.vue?vue&type=template&id=43827f8b\"\nimport script from \"./EmptyBox.vue?vue&type=script&lang=js\"\nexport * from \"./EmptyBox.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["CameraSource","CameraDirection","CameraResultType","Camera","web","then","m","CameraWeb","isObject","classof","wellKnownSymbol","MATCH","module","exports","it","isRegExp","undefined","call","hasOwn","isPrototypeOf","regExpFlags","RegExpPrototype","RegExp","prototype","R","flags","$","$includes","fails","addToUnscopables","BROKEN_ON_SPARSE","Array","includes","target","proto","forced","el","this","arguments","length","uncurryThis","requireObjectCoercible","isCallable","isNullOrUndefined","toString","getMethod","getRegExpFlags","getSubstitution","IS_PURE","REPLACE","$TypeError","TypeError","indexOf","replace","stringSlice","slice","max","Math","stringIndexOf","string","searchValue","fromIndex","replaceAll","replaceValue","IS_REG_EXP","replacer","searchString","functionalReplace","searchLength","advanceBy","replacement","O","position","endOfLastMatch","result","window","document","exportName","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","TYPE_FUNCTION","round","abs","now","Date","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","isArray","each","obj","iterator","i","forEach","hasOwnProperty","deprecate","method","name","message","deprecationMessage","e","Error","stack","log","console","warn","apply","Object","output","index","source","nextKey","extend","dest","src","merge","keys","inherit","child","base","properties","childP","baseP","create","constructor","_super","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","trim","split","inArray","findByKey","toArray","uniqueArray","key","sort","results","values","push","a","b","prefixed","property","prefix","prop","camelProp","toUpperCase","_uniqueId","uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","MOBILE_REGEX","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","COMPUTE_INTERVAL","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","self","options","inputTarget","domHandler","ev","enable","init","createInputInstance","Type","inputClass","PointerEventInput","TouchInput","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","x","overallVelocityY","y","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","last","lastInterval","v","clientX","clientY","p1","p2","props","sqrt","atan2","PI","start","end","evEl","evTarget","evWin","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","DEDUP_TIMEOUT","DEDUP_DISTANCE","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","isSyntheticEvent","t","dx","dy","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","getTouchActionProps","TouchAction","value","set","cleanTouchActions","actions","hasPanX","hasPanY","touchMap","cssSupports","CSS","supports","compute","update","touchAction","recognizers","recognizer","getTouchAction","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","Recognizer","defaults","id","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","get","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","Manager","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","event","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","handlers","oldCssProps","toggleCssProps","item","add","triggerDomEvent","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","stop","force","stopped","curRecognizer","existing","remove","on","events","off","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","_createElementBlock","_hoisted_1","$props","isOpen","Boolean","__exports__","render"],"sourceRoot":""}