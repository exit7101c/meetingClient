<template>
  <ion-page>
    <ion-header>
      <ion-toolbar>
        <ion-buttons slot="start">
          <BackButton />
        </ion-buttons>
        <ion-title>소모임</ion-title>
      </ion-toolbar>
    </ion-header>
    <ion-content>
      <div class="sticky-top segment-round" style="padding: 0 14px;">
        <ion-segment
          v-model="mainValue"
          mode="md"
          :scrollable="true"
        >
          <ion-segment-button
            value="home"
            @click="goHome"
          >
            Home
          </ion-segment-button>
          <ion-segment-button
            value="board"
            @click="mainBtn('board')"
          >
            게시판
          </ion-segment-button>
          <ion-segment-button
            value="album"
            @click="mainBtn('album')"
          >
            사진첩
          </ion-segment-button>
        </ion-segment>
      </div>

      <div class="row-box" v-if="mainValue == 'home'">
        <OpenChatView />
      </div>

      <div class="row-box" v-if="mainValue == 'board'">
        <div class="sticky-top">
          <ion-segment
            v-model="categoryCd"
            mode="ios"
            :scrollable="true"
            class="segment-chip"
          >
            <ion-segment-button
              v-show="categoryList != null"
              v-for="item in categoryList"
              :value="item.categoryCd"
              :key="item.categoryCd"
              @click="categoryBtn(item)"
              class="shape-round"
            >
              {{ item.categoryNm }}
            </ion-segment-button>
          </ion-segment>
        </div>
        <ion-list lines="none" v-if="mainValue == 'board'">
          <!--          <ion-list-header>-->
          <!--            <ion-text color="light">{{ categoryNm }}</ion-text>-->
          <!--          </ion-list-header>-->
          <ion-list v-if="categoryCd == 'MEET_GROUP'">
<!--            <OpenChatMeetCardItem-->
<!--              v-if="meetList.length > 0"-->
<!--              v-for="item in meetList"-->
<!--              :key="item"-->
<!--              :item="item"-->
<!--              :btnDisabled="btnDisabled"-->
<!--              :pageType="'Meet'"-->
<!--              @addMeetUser="btnHandle(item, 'add')"-->
<!--              @deleteMeetUser="btnHandle(item, 'delete')"-->
<!--              @openMeetUserList="openMeetUserList(item)"-->
<!--              @editOpenChatMeet="goWriteOpenChatMeet('edit', item)"-->
<!--              style="width: 100%;"-->
<!--            />-->
            <ion-grid
              v-if="meetList.length > 0"
              v-for="item in meetList"
              :key="item"
              style="margin-left: 10px; margin-right: 10px;"
            >
              <div class="info" style="display: flex; height: 35px;">
                <div style="width: 40%;">
                  <ion-text>
                    <!--                  <strong class="sub-text04">{{ nick }}</strong>-->
                    {{item.title}}
                  </ion-text>
                  <p class="date">
                    <ion-icon :icon="calendarCheck" class="sub-text01" />
                    <ion-text class="sub-text01">{{ item.createdDt }}</ion-text>
                  </p>
                </div>
                <div style="width: 60%; text-align-last: end;">
                  <p class="something">
                    <ion-chip
                      v-if="item.attendYn === 'N'"
                      color="primary"
                      @click="btnHandle(item, 'add')"
                      style="font-size: 15px;"
                    >참여하기</ion-chip>
                    <ion-chip
                      v-else
                      color="danger"
                      @click="btnHandle(item, 'delete')"
                      :disabled="btnDisabled"
                      style="font-size: 15px;"
                    >참여취소</ion-chip>
                    <ion-chip
                      color="medium"
                      @click="openMeetUserList(item)"
                      style="font-size: 15px;"
                    >참여자보기</ion-chip>
                  </p>
                </div>
              </div>
              <div class="content">
<!--                <div class="message">-->
<!--                  <ion-text> “가나다라마바사" </ion-text>-->
<!--                </div>-->
                <p class="something" style="display: table-row;">
                  <ion-chip color="light">모임날짜</ion-chip>
                  <ion-text color="light" class="sub-text05"> {{ item.meetDate }} </ion-text>
                </p>
                <p class="something" style="display: table-row;">
                  <ion-chip color="light">장소</ion-chip>
                  <ion-text color="light" class="sub-text05"> {{ item.meetAddr }} {{ item.meetAddrDetail }} </ion-text>
                </p>
                <p class="something" style="display: table-row;">
                  <ion-chip color="light">회비</ion-chip>
                  <ion-text color="light" class="sub-text05"> {{ item.meetCost }}원 </ion-text>
                </p>
                <p class="something" style="display: table-row;" @click="openMeetUserList(item)">
                  <ion-chip color="light">참여인원</ion-chip>
                  <ion-text color="light" class="sub-text05"> {{ item.participateCnt }} / {{ item.meetRange }} </ion-text>
                </p>
              </div>
            </ion-grid>
            <ion-item v-else>
              <ion-text color="light">생성된 모임이 없습니다.</ion-text>
            </ion-item>
          </ion-list>
          <ion-list v-if="categoryCd == 'NOTICE'">
<!--            <ion-item v-if="noticeList.length > 0"-->
<!--                      v-for="(item, index) in noticeList" :key="index"-->
<!--                      style="width: 100%;"-->
<!--            >-->
<!--              <CardBox @click="goView(item)" shadow="primary"-->
<!--                       style="position: relative; margin-top: 20px; padding: 0px; padding: 10px 0px; width: 100%;">-->
<!--                <ion-card-content style="padding: 0px; width: 100%;">-->
<!--                  <ion-row lines="none" class="row-box"-->
<!--                           style="display: flex; flex-direction: column; align-items: center; width: 100%;">-->
<!--                    <ion-row style="position: relative; width: 100%;">-->
<!--                      <ion-item style="display: flex; justify-content: space-between; align-items: center; width: 50%;">-->
<!--                        <ion-avatar>-->
<!--                          <img-->
<!--                            :src="'https://' + item.cdnThumbNm"-->
<!--                            @ionError="$event.srcElement.src = require('../../assets/img/Loading_icon.gif')"-->
<!--                          />-->
<!--                        </ion-avatar>-->
<!--                        <span style="color: #fff; font-size: 14px;">{{ truncateString(item.nick, 7) }}-->
<!--                        </span>-->
<!--                      </ion-item>-->
<!--                      <span-->
<!--                        style="color: #fff; font-size: 15px; font-weight: 600; width: 50%;">-->
<!--                        {{ item.createdDt }}-->
<!--                      </span>-->
<!--                    </ion-row>-->
<!--                    <ion-row>-->
<!--                      <ion-text color="light" class="text-lg" style="font-weight: 800;">-->
<!--                        {{ truncateString(item.title, 20) }}-->
<!--                      </ion-text>-->
<!--                    </ion-row>-->
<!--                    <ion-row>-->
<!--                      <ion-text color="light" class="text-md">{{ truncateString(item.content, 50) }}-->
<!--                      </ion-text>-->
<!--                    </ion-row>-->
<!--                  </ion-row>-->
<!--                </ion-card-content>-->
<!--              </CardBox>-->
<!--            </ion-item>-->
            <ion-grid
              v-if="noticeList.length > 0"
              v-for="item in noticeList"
              :key="item"
              style="margin-left: 10px; margin-right: 10px;"
            >
              <div class="info" style="height: 35px;">
                <div>
                  <div style="display: flex; align-items: center;">
                    <ion-avatar style="margin-top: 0px;" @click="goDailyCardInfo(item.userKey)">
                      <img
                        v-if="item.cdnThumbNm != null"
                        :src="'https://' + item.cdnThumbNm"
                        @ionError="$event.srcElement.src = require('../../assets/img/Loading_icon.gif')"
                      />
                      <ion-img
                        v-else-if="item.cdnThumbNm == null"
                        :src="'https://cmdg.speedycdn.net/202308/20230807145058_a09c4c1d-0775-4559-bb58-e1926296b702.jpeg'"
                        @ionError="$event.srcElement.src = require('../../assets/img/Loading_icon.gif')"
                      />
                    </ion-avatar>
                    <span style="color: #fff; font-size: 14px;" @click="goDailyCardInfo(item.userKey)">{{item.nick}}</span>
                  </div>
                  <p class="date">
                    <ion-icon :icon="calendarCheck" class="sub-text01" />
                    <ion-text class="sub-text01">{{ item.createdDt }}</ion-text>
                  </p>
                </div>
              </div>
              <div class="content" style="margin-top: 20px;" @click="goView(item)">
                <p class="something" style="display: table-row;">
                  <ion-chip color="light">제목</ion-chip>
                  <ion-text color="light" class="sub-text05"> {{ truncateString(item.title, 20) }} </ion-text>
                </p>
                <p class="something" style="display: inline-flex; margin-top: 0px;">
                  <ion-chip color="light">내용</ion-chip>
                  <ion-text color="light" class="sub-text05"> {{ truncateString(item.content, 50) }} </ion-text>
                </p>
              </div>
            </ion-grid>
            <ion-item v-else>
              <ion-text color="light">생성된 공지가 없습니다.</ion-text>
            </ion-item>
          </ion-list>
          <ion-list v-if="categoryCd == 'JOIN_GREETING'">
<!--            <ion-item v-if="greetingList.length > 0"-->
<!--                      v-for="(item, index) in greetingList" :key="index"-->
<!--                      style="width: 100%;"-->
<!--            >-->
<!--              <CardBox @click="goView(item)" shadow="primary"-->
<!--                       style="position: relative; margin-top: 20px; padding: 0px; padding: 10px 0px; width: 100%;">-->
<!--                <ion-card-content style="padding: 0px; width: 100%;">-->
<!--                  <ion-row lines="none" class="row-box"-->
<!--                           style="display: flex; flex-direction: column; align-items: center; width: 100%;">-->
<!--                    <ion-row style="position: relative; width: 100%;">-->
<!--                      <ion-item style="display: flex; justify-content: space-between; align-items: center; width: 50%;">-->
<!--                        <ion-avatar>-->
<!--                          <img-->
<!--                            :src="'https://' + item.cdnThumbNm"-->
<!--                            @ionError="$event.srcElement.src = require('../../assets/img/Loading_icon.gif')"-->
<!--                          />-->
<!--                        </ion-avatar>-->
<!--                        <span style="color: #fff; font-size: 14px;">{{ truncateString(item.nick, 7) }}-->
<!--                        </span>-->
<!--                      </ion-item>-->
<!--                      <span-->
<!--                        style="color: #fff; font-size: 15px; font-weight: 600; width: 50%;">-->
<!--                        {{ item.createdDt }}-->
<!--                      </span>-->
<!--                    </ion-row>-->
<!--                    <ion-row>-->
<!--                      <ion-text color="light" class="text-lg" style="font-weight: 800;">-->
<!--                        {{ truncateString(item.title, 20) }}-->
<!--                      </ion-text>-->
<!--                    </ion-row>-->
<!--                    <ion-row>-->
<!--                      <ion-text color="light" class="text-md">{{ truncateString(item.content, 50) }}-->
<!--                      </ion-text>-->
<!--                    </ion-row>-->
<!--                  </ion-row>-->
<!--                </ion-card-content>-->
<!--              </CardBox>-->
<!--            </ion-item>-->
            <ion-grid
              v-if="greetingList.length > 0"
              v-for="item in greetingList"
              :key="item"
              style="margin-left: 10px; margin-right: 10px;"
            >
              <div class="info" style="height: 35px;">
                <div>
                  <div style="display: flex; align-items: center;">
                    <ion-avatar style="margin-top: 0px;" @click="goDailyCardInfo(item.userKey)">
                      <img
                        v-if="item.cdnThumbNm != null"
                        :src="'https://' + item.cdnThumbNm"
                        @ionError="$event.srcElement.src = require('../../assets/img/Loading_icon.gif')"
                      />
                      <ion-img
                        v-else-if="item.cdnThumbNm == null"
                        :src="'https://cmdg.speedycdn.net/202308/20230807145058_a09c4c1d-0775-4559-bb58-e1926296b702.jpeg'"
                        @ionError="$event.srcElement.src = require('../../assets/img/Loading_icon.gif')"
                      />
                    </ion-avatar>
                    <span style="color: #fff; font-size: 14px;" @click="goDailyCardInfo(item.userKey)">{{item.nick}}</span>
                  </div>
                  <p class="date">
                    <ion-icon :icon="calendarCheck" class="sub-text01" />
                    <ion-text class="sub-text01">{{ item.createdDt }}</ion-text>
                  </p>
                </div>
              </div>
              <div class="content" style="margin-top: 20px;" @click="goView(item)">
                <p class="something" style="display: table-row;">
                  <ion-chip color="light">제목</ion-chip>
                  <ion-text color="light" class="sub-text05"> {{ truncateString(item.title, 20) }} </ion-text>
                </p>
                <p class="something" style="display: inline-flex; margin-top: 0px;">
                  <ion-chip color="light">내용</ion-chip>
                  <ion-text color="light" class="sub-text05"> {{ truncateString(item.content, 50) }} </ion-text>
                </p>
              </div>
            </ion-grid>
            <ion-item v-else>
              <ion-text color="light">생성된 가입인사가 없습니다.</ion-text>
            </ion-item>
          </ion-list>
          <ion-list v-if="categoryCd == 'REVIEW'">
<!--            <ion-item v-if="reviewList.length > 0"-->
<!--                      v-for="(item, index) in reviewList" :key="index"-->
<!--                      style="width: 100%;"-->
<!--            >-->
<!--              <CardBox @click="goView(item)" shadow="primary"-->
<!--                       style="position: relative; margin-top: 20px; padding: 0px; padding: 10px 0px; width: 100%;">-->
<!--                <ion-card-content style="padding: 0px; width: 100%;">-->
<!--                  <ion-row lines="none" class="row-box"-->
<!--                           style="display: flex; flex-direction: column; align-items: center; width: 100%;">-->
<!--                    <ion-row style="position: relative; width: 100%;">-->
<!--                      <ion-item style="display: flex; justify-content: space-between; align-items: center; width: 50%;">-->
<!--                        <ion-avatar>-->
<!--                          <img-->
<!--                            :src="'https://' + item.cdnThumbNm"-->
<!--                            @ionError="$event.srcElement.src = require('../../assets/img/Loading_icon.gif')"-->
<!--                          />-->
<!--                        </ion-avatar>-->
<!--                        <span style="color: #fff; font-size: 14px; font-weight: 700;">{{ truncateString(item.nick, 7) }}-->
<!--                        </span>-->
<!--                      </ion-item>-->
<!--                      <span-->
<!--                        style="color: #fff; font-size: 15px; font-weight: 600; width: 50%;">-->
<!--                        {{ item.createdDt }}-->
<!--                      </span>-->
<!--                    </ion-row>-->
<!--                    <ion-row>-->
<!--                      <ion-text color="light" class="text-lg" style="font-weight: 800;">-->
<!--                        {{ truncateString(item.title, 20) }}-->
<!--                      </ion-text>-->
<!--                    </ion-row>-->
<!--                    <ion-row>-->
<!--                      <ion-text color="light" class="text-md">{{ truncateString(item.content, 50) }}-->
<!--                      </ion-text>-->
<!--                    </ion-row>-->
<!--                  </ion-row>-->
<!--                </ion-card-content>-->
<!--              </CardBox>-->
<!--            </ion-item>-->
            <ion-grid
              v-if="reviewList.length > 0"
              v-for="item in reviewList"
              :key="item"
              style="margin-left: 10px; margin-right: 10px;"
            >
              <div class="info" style="height: 35px;">
                <div>
                  <div style="display: flex; align-items: center;">
                    <ion-avatar style="margin-top: 0px;" @click="goDailyCardInfo(item.userKey)">
                      <img
                        v-if="item.cdnThumbNm != null"
                        :src="'https://' + item.cdnThumbNm"
                        @ionError="$event.srcElement.src = require('../../assets/img/Loading_icon.gif')"
                      />
                      <ion-img
                        v-else-if="item.cdnThumbNm == null"
                        :src="'https://cmdg.speedycdn.net/202308/20230807145058_a09c4c1d-0775-4559-bb58-e1926296b702.jpeg'"
                        @ionError="$event.srcElement.src = require('../../assets/img/Loading_icon.gif')"
                      />
                    </ion-avatar>
                    <span style="color: #fff; font-size: 14px;" @click="goDailyCardInfo(item.userKey)">{{item.nick}}</span>
                  </div>
                  <p class="date">
                    <ion-icon :icon="calendarCheck" class="sub-text01" />
                    <ion-text class="sub-text01">{{ item.createdDt }}</ion-text>
                  </p>
                </div>
              </div>
              <div class="content" style="margin-top: 20px;" @click="goView(item)">
                <p class="something" style="display: table-row;">
                  <ion-chip color="light">제목</ion-chip>
                  <ion-text color="light" class="sub-text05"> {{ truncateString(item.title, 20) }} </ion-text>
                </p>
                <p class="something" style="display: inline-flex; margin-top: 0px;">
                  <ion-chip color="light">내용</ion-chip>
                  <ion-text color="light" class="sub-text05"> {{ truncateString(item.content, 50) }} </ion-text>
                </p>
              </div>
            </ion-grid>
            <ion-item v-else>
              <ion-text color="light">생성된 후기가 없습니다.</ion-text>
            </ion-item>
          </ion-list>
          <ion-list v-if="categoryCd == 'CALCULATE'">
<!--            <ion-item v-if="calculateList.length > 0"-->
<!--                      v-for="(item, index) in calculateList" :key="index"-->
<!--                      style="width: 100%;"-->
<!--            >-->
<!--              <CardBox @click="goView(item)" shadow="primary"-->
<!--                       style="position: relative; margin-top: 20px; padding: 0px; padding: 10px 0px; width: 100%;">-->
<!--                <ion-card-content style="padding: 0px; width: 100%;">-->
<!--                  <ion-row lines="none" class="row-box"-->
<!--                           style="display: flex; flex-direction: column; align-items: center; width: 100%;">-->
<!--                    <ion-row style="position: relative; width: 100%;">-->
<!--                      <ion-item style="display: flex; justify-content: space-between; align-items: center; width: 50%;">-->
<!--                        <ion-avatar>-->
<!--                          <img-->
<!--                            :src="'https://' + item.cdnThumbNm"-->
<!--                            @ionError="$event.srcElement.src = require('../../assets/img/Loading_icon.gif')"-->
<!--                          />-->
<!--                        </ion-avatar>-->
<!--                        <span style="color: #fff; font-size: 14px;">{{ truncateString(item.nick, 7) }}-->
<!--                        </span>-->
<!--                      </ion-item>-->
<!--                      <span-->
<!--                        style="color: #fff; font-size: 15px; font-weight: 600; width: 50%;">-->
<!--                        {{ item.createdDt }}-->
<!--                      </span>-->
<!--                    </ion-row>-->
<!--                    <ion-row>-->
<!--                      <ion-text color="light" class="text-lg" style="font-weight: 800;">-->
<!--                        {{ truncateString(item.title, 20) }}-->
<!--                      </ion-text>-->
<!--                    </ion-row>-->
<!--                    <ion-row>-->
<!--                      <ion-text color="light" class="text-md">{{ truncateString(item.content, 50) }}-->
<!--                      </ion-text>-->
<!--                    </ion-row>-->
<!--                  </ion-row>-->
<!--                </ion-card-content>-->
<!--              </CardBox>-->
<!--            </ion-item>-->
            <ion-grid
              v-if="calculateList.length > 0"
              v-for="item in calculateList"
              :key="item"
              style="margin-left: 10px; margin-right: 10px;"
            >
              <div class="info" style="height: 35px;">
                <div>
                  <div style="display: flex; align-items: center;">
                    <ion-avatar style="margin-top: 0px;" @click="goDailyCardInfo(item.userKey)">
                      <img
                        v-if="item.cdnThumbNm != null"
                        :src="'https://' + item.cdnThumbNm"
                        @ionError="$event.srcElement.src = require('../../assets/img/Loading_icon.gif')"
                      />
                      <ion-img
                        v-else-if="item.cdnThumbNm == null"
                        :src="'https://cmdg.speedycdn.net/202308/20230807145058_a09c4c1d-0775-4559-bb58-e1926296b702.jpeg'"
                        @ionError="$event.srcElement.src = require('../../assets/img/Loading_icon.gif')"
                      />
                    </ion-avatar>
                    <span style="color: #fff; font-size: 14px;" @click="goDailyCardInfo(item.userKey)">{{item.nick}}</span>
                  </div>
                  <p class="date">
                    <ion-icon :icon="calendarCheck" class="sub-text01" />
                    <ion-text class="sub-text01">{{ item.createdDt }}</ion-text>
                  </p>
                </div>
              </div>
              <div class="content" style="margin-top: 20px;" @click="goView(item)">
                <p class="something" style="display: table-row;">
                  <ion-chip color="light">제목</ion-chip>
                  <ion-text color="light" class="sub-text05"> {{ truncateString(item.title, 20) }} </ion-text>
                </p>
                <p class="something" style="display: inline-flex; margin-top: 0px;">
                  <ion-chip color="light">내용</ion-chip>
                  <ion-text color="light" class="sub-text05"> {{ truncateString(item.content, 50) }} </ion-text>
                </p>
              </div>
            </ion-grid>
            <ion-item v-else>
              <ion-text color="light">생성된 정산내역이 없습니다.</ion-text>
            </ion-item>
          </ion-list>
        </ion-list>
      </div>

      <div class="row-box" v-if="mainValue == 'album'">
        <ion-list lines="none">
          <ion-refresher slot="fixed" @ionRefresh="doRefresh($event)">
            <ion-refresher-content
              refreshing-spinner="circles"
              :pulling-icon="chevronDownCircleOutline"
            ></ion-refresher-content>
          </ion-refresher>
          <ion-row>
            <ion-col
              size="4"
              v-for="item in albumList"
            >
              <OpenChatMeetAlbumList
                :item="item"
                @event="openZoomedImage(item.cdnNm)"
              />
            </ion-col>
          </ion-row>
          <ion-infinite-scroll
            :disabled="isEndScroll"
            threshold="100px"
            @ionInfinite="ionInfinite"
          >
            <ion-infinite-scroll-content></ion-infinite-scroll-content>
          </ion-infinite-scroll>
        </ion-list>
      </div>
      <ion-fab
        slot="fixed"
        vertical="bottom"
        horizontal="end"
        v-if="checkBtn"
      >
        <ion-fab-button
          fill="clear"
          @click="goWriteOpenChatMeet('new')"
          style="padding: 5px"
        >
          <ion-ripple-effect></ion-ripple-effect>
          <ion-icon :icon="pencilOutline"></ion-icon>
        </ion-fab-button>
      </ion-fab>
    </ion-content>
    <ion-modal
      ref="modal"
      :is-open="meetUserModal"
      @ionModalDidDismiss="meetUserModal = false"
      :initial-breakpoint="1.0"
      :breakpoints="[0, 0.5, 1.0]"
    >
      <ion-page>
        <ion-header>
          <ion-toolbar class="text-left">
            <ion-title>참여자 목록</ion-title>
          </ion-toolbar>
        </ion-header>
        <ion-content>
          <ion-list class="ion-padding" lines="none">
            <OpenChatMeetProfile
              v-for="(item, index) in meetUserList"
              :thumbnail="item.cdnNm"
              :key="index"
              @click="goDailyCardInfo(item.userKey)"
            >
              <template #content>
                <h3>
                  <ion-text color="light" class="text-bold text-lg">
                    <ion-label>{{ item.nick }}</ion-label>
                  </ion-text>
                </h3>
              </template>
            </OpenChatMeetProfile>
          </ion-list>
        </ion-content>
      </ion-page>
    </ion-modal>
  </ion-page>
</template>

<script>

import {
  openChatViewMapFn,
  openChatMeetMap,
  getData,
  openChatMeetViewMapFn,
  openChatMeetWriteMapFn, dailyCardInfoMapFn
} from "@/assets/js/common";
import { pencilOutline, chevronDownCircleOutline } from "ionicons/icons";
import OpenChatMeetAlbumList from "@/components/OpenChatMeet/OpenChatMeetAlbumItem.vue";
import OpenChatMeetProfile from "@/components/OpenChatMeet/OpenChatMeetProfile.vue";
import OpenChatMeetCardItem from "@/components/OpenChatMeet/OpenChatMeetCardItem.vue";
import OpenChatView from "@/views/page/OpenChatView.vue";
import Hammer from "hammerjs";
import IconCalCheck from '@/assets/img/icon/icon_cal_check.svg';

export default {
  name: "OpenChatMeet",
  components: {
    OpenChatMeetAlbumList,
    OpenChatMeetProfile,
    OpenChatMeetCardItem,
    OpenChatView
  },
  inject: ["alertController"],
  ionViewWillEnter() {
    this.getOpenChatId();
    this.getLeaderCheck();
    // openChatViewMapFn(openChatMeetMap);
    // this.mainValue = this.mainValue == "home" ? "board" : this.mainValue;

    this.getCategoryList();
  },
  mounted() {
    this.mainValue = "home";
  },
  beforeUnmount() {
    this.mainValue = "board";
  },

  data() {
    return {
      calendarCheck: IconCalCheck,
      chevronDownCircleOutline,
      pencilOutline,
      openChatId: "",
      mainValue: "home",
      categoryList: [],
      categoryCd: "MEET_GROUP",
      categoryNm: "",
      meetList: [],
      noticeList: [],
      greetingList: [],
      reviewList: [],
      calculateList: [],
      meetUserModal: false,
      meetUserList: [],

      pageNo: 1,
      pageSize: 30,
      currentPageNo: 1,
      totalCount: 0,
      isEndScroll: false,
      albumList: [],
      btnDisabled: false,
      leaderYn: ""
    };
  },
  computed: {
    checkBtn() {
      if (this.mainValue !== "album") {
        if ((this.categoryCd === "MEET_GROUP" || this.categoryCd === "NOTICE") && this.leaderYn !== "Y") {
          return false;
        }
        return true;
      }
      return false;
    }
  },
  methods: {
    goDailyCardInfo(userKey) {
      this.meetUserModal = false;
      dailyCardInfoMapFn({ userKey: userKey, type: "openChatMeet" });
      this.$router.push("/dailyCardInfo");
    },
    getOpenChatId() {
      getData({
        url: "/getOpenchatId",
        param: openChatMeetMap,
        then: (data) => {
          this.openChatId = data;

          // this.getOpenChatMeetList();
        }
      });
    },

    /** 방장 or 부방장 체크 **/
    getLeaderCheck() {
      getData({
        url: "/getLeaderCheck",
        param: {
          chatroomId: openChatMeetMap.chatroomId,
          openChatKey: openChatMeetMap.openChatKey
        },
        then: (data) => {
          this.leaderYn = data.leaderYn;
        }
      });
    },

    goHome() {
      openChatViewMapFn(openChatMeetMap);
      // this.$router.push("/openchatView");
    },

    getCategoryList() {
      getData({
        url: "/getOpenChatMeetCategory",
        param: {},
        then: (data) => {
          this.categoryList = data;

          if (this.categoryCd === "MEET_GROUP") {
            this.categoryCd = data[0].categoryCd;
            this.categoryNm = data[0].categoryNm;
          }

        }
      });
    },

    getAlbumList() {
      this.pageNo = 1;
      this.pageSize = 30;
      this.currentPageNo = 1;
      this.albumList = [];
      this.totalCount = 0;
      this.isEndScroll = false;

      getData({
        url: "/getAlbumList",
        param: {
          openChatKey: openChatMeetMap.openChatKey,
          chatroomId: openChatMeetMap.chatroomId,
          pageNo: this.pageNo,
          pageSize: this.pageSize
        },
        then: (data) => {
          if (data.successYn == "Y") {
            this.albumList = data.result;
          } else {
            this.warningAlert(data.message);
            this.mainValue = "home";
          }
        }
      });

    },
    /** 무한 스크롤 **/
    ionInfinite(event) {
      let self = this;

      // 스크롤 로딩 셋타임아웃
      setTimeout(function() {
        self.pageNo = self.currentPageNo + 1;

        let url = "/getAlbumList";

        getData({
          url: url,
          param: {
            chatroomId: openChatMeetMap.chatroomId,
            pageNo: self.pageNo,
            pageSize: self.pageSize
          },
          then: (data) => {
            for (let i in data.result) {
              self.albumList.push(data.result[i]);
            }
            self.currentPageNo += 1;
            self.$nextTick(() => {
              if (self.albumList.length === self.totalCount)
                self.isEndScroll = true;
            });
          }
        });
        event.target.complete();
      }, 1000);
    },

    /** Refresh */
    doRefresh(e) {
      setTimeout(() => {
        e.target.complete();
      }, 500);
    },

    getMeetUserList(item) {
      getData({
        url: "/getMeetUserList",
        param: {
          meetId: item.meetId,
          openChatId: item.openchatId
        },
        then: (data) => {
          this.meetUserList = data;
        }
      });
    },

    categoryBtn(item) {
      if (this.categoryCd != item.categoryCd) {
        this.categoryCd = item.categoryCd;
        this.categoryNm = item.categoryNm;

        this.getOpenChatMeetList();
      }
    },

    getOpenChatMeetList() {
      getData({
        url: "/getOpenChatMeetList",
        param: {
          openChatId: this.openChatId,
          openChatKey: openChatMeetMap.openChatKey,
          categoryCd: this.categoryCd
        },
        then: (data) => {
          if(data.successYn == 'Y'){
            switch (this.categoryCd) {
              case "MEET_GROUP" :
                this.meetList = data.resultList;
                break;
              case "NOTICE" :
                this.noticeList = data.resultList;
                break;
              case "JOIN_GREETING" :
                this.greetingList = data.resultList;
                break;
              case "REVIEW" :
                this.reviewList = data.resultList;
                break;
              case "CALCULATE" :
                this.calculateList = data.resultList;
                break;
              default:
                break;
            }
          } else {
            this.warningAlert(data.message);
            this.mainValue = "home";
          }
        }
      });
    },

    goWriteOpenChatMeet(state, item) {
      if (state == "new") {
        openChatMeetWriteMapFn({
          openChatKey: openChatMeetMap.openChatKey,
          chatroomId: openChatMeetMap.chatroomId,
          categoryList: this.categoryList,
          categoryCd: this.categoryCd,
          categoryNm: this.categoryNm,
          openChatId: this.openChatId,
          leaderYn: this.leaderYn,
          state: "new"
        });
        this.$router.push("/openChatMeetWrite");
      } else if (state == "edit") {
        openChatMeetWriteMapFn({
          openChatKey: openChatMeetMap.openChatKey,
          chatroomId: openChatMeetMap.chatroomId,
          categoryList: this.categoryList,
          categoryCd: this.categoryCd,
          categoryNm: this.categoryNm,
          openChatId: this.openChatId,
          leaderYn: this.leaderYn,
          meetId: item.meetId,
          state: "edit"
        });
        this.$router.push("/openChatMeetWrite");
      }
    },

    mainBtn(type) {
      if (type == "board") {
        this.getOpenChatMeetList();
      } else if (type == "album") {
        this.getAlbumList();
      }
    },

    openMeetUserList(item) {
      this.meetUserModal = true;

      this.getMeetUserList(item);
    },

    btnHandle(item, state) {
      setTimeout(() => {
        this.btnDisabled = false;
      }, 500);
      /** 참여자 */
      if (state === "add") {
        this.btnDisabled = true;
        getData({
          url: "/addMeetUser",
          param: {
            meetId: item.meetId,
            openChatId: item.openchatId
          },
          then: (data) => {
            this.warningAlert(data.message);
            this.getOpenChatMeetList();
          }
        });
      }
      /** 참여 취소 */
      else if (state === "delete") {
        this.btnDisabled = true;
        getData({
          url: "/deleteMeetUser",
          param: {
            meetId: item.meetId,
            openChatId: item.openchatId
          },
          then: (data) => {
            this.warningAlert(data.message);
            this.getOpenChatMeetList();
          }
        });
      }
    },

    goView(item) {
      openChatMeetViewMapFn({
        openChatId: item.openchatId,
        meetId: item.meetId,
        categoryCd: this.categoryCd,
        categoryNm: this.categoryNm,
        openChatKey: openChatMeetMap.openChatKey,
        chatroomId: openChatMeetMap.chatroomId,
        categoryList: this.categoryList
      });
      this.$router.push("/openChatMeetView");
    },

    async warningAlert(message) {
      const alert = await this.alertController.create({
        header: "",
        subHeader: "",
        message: message,
        buttons: ["OK"]
      });
      return alert.present();
    },

    /** 이미지 확대, 이동**/
    openZoomedImage(data) {
      this.isZoomed = false;
      if (!this.isZoomed) {
        const imageUrl = "https://" + data;
        const modal = document.createElement("div");
        const modalImage = document.createElement("img");

        modal.style.width = "100%";
        modal.style.height = "100%";
        modal.style.position = "fixed";
        modal.style.top = "0";
        modal.style.left = "0";
        modal.style.zIndex = "1000";
        modal.style.backgroundColor = "rgba(0, 0, 0, 0.7)";
        modal.style.display = "flex";
        modal.style.alignItems = "center";
        modal.style.justifyContent = "center";

        modalImage.src = imageUrl;
        modalImage.style.width = "90%";
        modalImage.style.height = "auto";
        modalImage.style.objectFit = "contain";
        modalImage.style.transformOrigin = "center";
        modalImage.style.pointerEvents = "auto";

        modal.appendChild(modalImage);
        document.body.appendChild(modal);

        const hammer = new Hammer(modalImage);

        let currentScale = 1;
        let posX = 0;
        let posY = 0;
        let lastPosX = 0;
        let lastPosY = 0;

        hammer.get("pinch").set({ enable: true });
        hammer.get("pan").set({ direction: Hammer.DIRECTION_ALL });

        hammer.on("pinchin pinchout", (event) => {
          if (event.type === "pinchin") {
            currentScale -= 0.02;
          } else if (event.type === "pinchout") {
            currentScale += 0.02;
          }

          currentScale = Math.min(Math.max(currentScale, 0.5), 3);
          modalImage.style.transform = `translate(${posX}px, ${posY}px) scale(${currentScale})`;
        });

        hammer.on("panmove", (event) => {
          posX = lastPosX + event.deltaX;
          posY = lastPosY + event.deltaY;
          modalImage.style.transform = `translate(${posX}px, ${posY}px) scale(${currentScale})`;
        });

        hammer.on("panend", () => {
          lastPosX = posX;
          lastPosY = posY;
        });

        modal.addEventListener("click", () => {
          document.body.removeChild(modal);
        });
        this.isZoomed = true;
      } else {
        this.isZoomed = false;
      }
    },

    truncateString(str, maxLength) {
      if (Object.keys(str).length > maxLength) {
        return str.slice(0, maxLength - 3) + "...";
      } else {
        return str;
      }
    }
  }
};
</script>

<style lang="scss" scoped>
ion-modal {
  --max-height: 60%;
  padding: 0 18px;
}

ion-avatar {
  width: 25px;
  height: 25px;
  //object-fit: cover;
  border-radius: 50%;
  //overflow: hidden;
  margin-top: 10px;
  margin-right: 10px;
}


ion-grid {
  /* background-color: rgba($color: white, $alpha: 0.5); */
  border: 1px solid var(--ion-border-color);
  border-radius: var(--ion-border-radius);
  padding: 1rem;

  + ion-grid {
    margin-top: 1rem;
  }
  .info {
    color: white;
    .date {
      display: flex;
      justify-content: flex-start;
      align-items: center;
      gap: 0.5rem;
      font-size: 10px;
      margin: 0.5rem 0 0;
    }
  }
  .content {
    margin: 0.5rem 0 0;
    .message {
      background-color: #272847;
      border-radius: var(--ion-border-radius);
      font-size: 14px;
      padding: 0.75rem 1rem;
      color: white;
      border-top-left-radius: 0;
    }
    .something {
      display: inline-flex;
      align-items: center;
      justify-content: flex-start;
      gap: 0.5rem;
      margin: 1rem 0 0;
      ion-chip {
        font-weight: bold;
      }
      ion-text {
        font-size: 12px;
      }
    }
  }
}

</style>

