{"version":3,"file":"js/600.0490703a.js","mappings":"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","sources":["webpack://navy/./node_modules/@capacitor/geolocation/dist/esm/index.js","webpack://navy/./src/components/JoinTitle.vue","webpack://navy/./src/components/JoinTitle.vue?db5d","webpack://navy/./src/components/PageLoadingCheck.vue","webpack://navy/./src/components/PageLoadingCheck.vue?d711","webpack://navy/./src/components/ProgressBar.vue","webpack://navy/./src/components/ProgressBar.vue?6a3a","webpack://navy/./src/views/layout/JoinLocation.vue","webpack://navy/./src/views/layout/JoinLocation.vue?f28d"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst Geolocation = registerPlugin('Geolocation', {\n    web: () => import('./web').then(m => new m.GeolocationWeb()),\n});\nexport * from './definitions';\nexport { Geolocation };\n//# sourceMappingURL=index.js.map","<template>\n  <div class=\"join-title\">\n    <ion-text color=\"light\">\n      <h2>\n        <slot name=\"title\"></slot>\n      </h2>\n    </ion-text>\n    <ion-text color=\"light\">\n      <p>\n        <slot name=\"desc\"></slot>\n      </p>\n    </ion-text>\n  </div>\n</template>\n<script>\nimport { IonText } from '@ionic/vue';\nexport default {\n  name: 'JoinTitle',\n  components: {\n    IonText\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.join-title {\n  margin-bottom: 60px;\n  h2 {\n    font-size: 28px;\n    font-weight: bold;\n    line-height: 1.5;\n  }\n  p {\n    font-size: 14px;\n    line-height: 1.8;\n  }\n}\n</style>\n","import { render } from \"./JoinTitle.vue?vue&type=template&id=2fe7c318&scoped=true\"\nimport script from \"./JoinTitle.vue?vue&type=script&lang=js\"\nexport * from \"./JoinTitle.vue?vue&type=script&lang=js\"\n\nimport \"./JoinTitle.vue?vue&type=style&index=0&id=2fe7c318&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2fe7c318\"]])\n\nexport default __exports__","<template>\n  <ion-spinner name=\"lines\"></ion-spinner>\n</template>\n<script>\nexport default {\n  name: \"PageLoadingCheck\"\n};\n</script>\n<style lang=\"scss\"></style>\n","import { render } from \"./PageLoadingCheck.vue?vue&type=template&id=ecd16aee\"\nimport script from \"./PageLoadingCheck.vue?vue&type=script&lang=js\"\nexport * from \"./PageLoadingCheck.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <ion-progress-bar :value=\"calValue\"></ion-progress-bar>\n</template>\n<script>\nimport { IonProgressBar } from '@ionic/vue';\n\nexport default {\n  name: 'ProgressBar',\n  props: {\n    currIdx: { type: Number, default: 0 },\n    totalIdx: { type: Number, default: 10 }\n  },\n  components: {\n    IonProgressBar\n  },\n  computed: {\n    calValue() {\n      return this.currIdx / this.totalIdx;\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped></style>\n","import { render } from \"./ProgressBar.vue?vue&type=template&id=2ceef5b4\"\nimport script from \"./ProgressBar.vue?vue&type=script&lang=js\"\nexport * from \"./ProgressBar.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <ion-page>\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-buttons slot=\"start\">\r\n          <BackButton />\r\n        </ion-buttons>\r\n        <ion-title>지역설정</ion-title>\r\n      </ion-toolbar>\r\n      <ProgressBar\r\n        :currIdx=\"selectedAddressGu != null ? 8 : 7\"\r\n      ></ProgressBar>\r\n    </ion-header>\r\n    <ion-content>\r\n      <div class=\"layout-container\">\r\n        <JoinTitle>\r\n          <template v-slot:title>\r\n            내가 살고있는 지역을 <br />\r\n            설정해 주세요!\r\n          </template>\r\n          <template v-slot:desc> 가까운 거리의 상대를 추천해드려요!</template>\r\n        </JoinTitle>\r\n        <ion-list>\r\n          <ion-item lines=\"none\" class=\"input-field has-icon-button\">\r\n            <ion-input\r\n              @click=\"openModal('address')\"\r\n              type=\"text\"\r\n              placeholder=\"구 까지만 표시돼요!\"\r\n              v-model=\"selectedAddressGu\"\r\n              readonly\r\n            >\r\n            </ion-input>\r\n            <ion-button\r\n              fill=\"clear\"\r\n              slot=\"end\"\r\n              @click=\"openModal('address')\"\r\n            >\r\n              <ion-img :src=\"require('@/assets/img/icon/icon_location.svg')\" />\r\n            </ion-button>\r\n          </ion-item>\r\n        </ion-list>\r\n      </div>\r\n    </ion-content>\r\n    <ion-footer class=\"join-footer\">\r\n      <div class=\"layout-container\">\r\n        <div class=\"btn-group\">\r\n          <ion-button\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            expand=\"block\"\r\n            shape=\"round\"\r\n            :disabled=\"!selectedAddressGu?.length\"\r\n            @click=\"validateAndNavigate\"\r\n          >\r\n            <ion-ripple-effect></ion-ripple-effect>\r\n            다음으로\r\n          </ion-button>\r\n        </div>\r\n      </div>\r\n    </ion-footer>\r\n    <!-- 주소 검색 모달 -->\r\n    <ion-modal\r\n      class=\"location-modal\"\r\n      :is-open=\"modalOpen\"\r\n      @ionModalDidDismiss=\"modalOpen = false\"\r\n      @ionModalDidPresent=\"mapOpen\"\r\n      :initial-breakpoint=\"1\"\r\n      :breakpoints=\"[0, 1]\"\r\n    >\r\n      <ion-header>\r\n        <ion-toolbar>\r\n          <ion-buttons slot=\"start\">\r\n            <ion-button @click=\"closeModal()\">\r\n              <ion-icon slot=\"icon-only\" :icon=\"chevronBack\" />\r\n            </ion-button>\r\n          </ion-buttons>\r\n          <ion-title>지도에서 위치 확인</ion-title>\r\n        </ion-toolbar>\r\n      </ion-header>\r\n      <ion-content :fullscreen=\"true\">\r\n        <PageLoadingCheck v-if=\"lodingCheck !== false\"\r\n                          style=\"display: flex; align-items: center; justify-content: center; margin: 0 auto; height: 80%;\" />\r\n        <div id=\"joinLocationMap\" style=\"width: 100%; height: 80%\" />\r\n      </ion-content>\r\n      <ion-footer class=\"location-modal-footer\" style=\"height: 110px; background-color: #191a39; padding: 5px;\">\r\n        <div class=\"layout-container\">\r\n          <ion-grid>\r\n            <ion-row class=\"ion-align-items-end ion-justify-content-between\" style=\"padding: 0 15px 0 15px;\">\r\n              <ion-text color=\"light\">\r\n                {{ locationView }}\r\n              </ion-text>\r\n              <ion-text color=\"light\" @click=\"jibunGuCheck\">\r\n                <ion-icon\r\n                  :icon=\"swapHorizontalOutline\"\r\n                  class=\"v-middle\"\r\n                ></ion-icon>\r\n                <span class=\"v-middle\">{{ checkBtnText }}</span>\r\n              </ion-text>\r\n            </ion-row>\r\n          </ion-grid>\r\n          <div class=\"btn-group\">\r\n            <ion-button\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              expand=\"block\"\r\n              shape=\"round\"\r\n              @click=\"saveLocationBtn\"\r\n            >\r\n              <ion-ripple-effect></ion-ripple-effect>\r\n              이 위치로 주소 설정\r\n            </ion-button>\r\n          </div>\r\n        </div>\r\n      </ion-footer>\r\n    </ion-modal>\r\n  </ion-page>\r\n</template>\r\n\r\n<script>\r\nimport { loadingController } from \"@ionic/vue\";\r\nimport { chevronBack, swapHorizontalOutline } from \"ionicons/icons\";\r\nimport { getData, tempMap } from \"@/assets/js/common\";\r\nimport JoinTitle from \"@/components/JoinTitle.vue\";\r\nimport ProgressBar from \"@/components/ProgressBar.vue\";\r\nimport PageLoadingCheck from \"@/components/PageLoadingCheck.vue\";\r\n\r\n\r\n// GPS\r\nimport { Geolocation } from \"@capacitor/geolocation\";\r\nimport { Capacitor } from \"@capacitor/core\";\r\n\r\nexport default {\r\n  name: \"JoinLocation\",\r\n  inject: [\"alertController\"],\r\n  components: {\r\n    JoinTitle,\r\n    ProgressBar,\r\n    PageLoadingCheck\r\n  },\r\n  data() {\r\n    return {\r\n      chevronBack,\r\n      swapHorizontalOutline,\r\n      location: \"\", // input location\r\n      inputType: \"\", // 버튼 누르는 타입 address, location\r\n\r\n      message: \"\",\r\n\r\n      showModal: false,\r\n      modalOpen: false,\r\n      visible: false,\r\n\r\n      locationView: \"\",\r\n\r\n      // 초기값 gps 값으로 변경필요\r\n      // currLat: 37.5539385, // 로그인 유저 기본 위치의 위도\r\n      // currLon: 126.9776688, // 로그인 유저 기본 위치의 경도\r\n\r\n      selectedLat: null, // 클릭한 위치의 위도\r\n      selectedLng: null, // 클릭한 위치의 경도\r\n\r\n      selectedjibunAddress: null, // 클릭한 위치의 지번 주소\r\n      selectedroadAddress: null, // 클릭한 위치의 도로명 주소\r\n\r\n      selectedAddressGu: null, // 클릭한 위치의 지번 주소 구까지\r\n      selectedjibunAddressDong: null, // 클릭한 위치의 지번 주소 동까지만\r\n      selectedroadAddressDong: null, // 클릭한 위치의 도로명 주소 동까지만\r\n\r\n      checkBtn: \"dong\", // 버튼상태\r\n      checkBtnText: \"구까지 표시\",\r\n      lodingCheck: false,\r\n\r\n      checkLatlng: \"\",\r\n\r\n      gpsLat: \"\",\r\n      gpsLon: \"\"\r\n    };\r\n  },\r\n  ionViewWillEnter() {\r\n    // 진입할 때 호출\r\n    // if (tempMap.state !== \"ing\") {\r\n    this.selectedjibunAddressDong = null;\r\n    this.selectedAddressGu = null;\r\n    // }\r\n    // this.getGps();\r\n  },\r\n\r\n  ionViewDidLeave() {\r\n    // 떠날 때 호출\r\n  },\r\n\r\n\r\n  mounted() {\r\n  },\r\n\r\n  methods: {\r\n\r\n    goRouter() {\r\n\r\n      // tempMap.item.addr1 = this.selectedjibunAddressDong;\r\n      // tempMap.item.shotaddr1 = this.selectedAddressGu;\r\n      // tempMap.item.addr2 = \"\";\r\n      // tempMap.item.shotaddr2 = \"\";\r\n      // tempMap.item.lat = this.selectedLat;\r\n      // tempMap.item.lon = this.selectedLng;\r\n\r\n      this.$store.state.joinMap[\"addr1\"] = this.selectedjibunAddressDong;\r\n      this.$store.state.joinMap[\"shotaddr1\"] = this.selectedAddressGu;\r\n      this.$store.state.joinMap[\"addr2\"] = \"\";\r\n      this.$store.state.joinMap[\"shotaddr2\"] = \"\";\r\n      this.$store.state.joinMap[\"lat\"] = this.selectedLat;\r\n      this.$store.state.joinMap[\"lon\"] = this.selectedLng;\r\n\r\n      this.$router.push(\"/joinProfile\");\r\n    },\r\n    /** gps **/\r\n    async getGps() {\r\n      if (Capacitor.getPlatform() !== \"web\") {\r\n        await Geolocation.getCurrentPosition().then((position) => {\r\n          //console.log('capacitor : ' + position.coords.latitude);\r\n          this.gpsLat = position.coords.latitude;\r\n          this.gpsLon = position.coords.longitude;\r\n        });\r\n      } else {\r\n        console.log(\"[개발환경] web 에서 GPS는 활성화 되지 않습니다.\");\r\n        clearInterval(this.intervalLatLon);\r\n      }\r\n    },\r\n\r\n    /** 모달 시작 **/\r\n    openModal(type) {\r\n      this.getGps();\r\n      this.inputType = type;\r\n      this.lodingCheck = true;\r\n      this.modalOpen = true;\r\n    },\r\n\r\n    mapOpen() {\r\n      let lat;\r\n      let lon;\r\n\r\n      this.lodingCheck = false;\r\n\r\n      this.$nextTick(() => {\r\n        if (this.gpsLat === \"\" || this.gpsLon === \"\") {\r\n          /** 값이 없을때 광화문으로 고정값 **/\r\n          lat = 37.5751959;\r\n          lon = 126.9764627;\r\n        } else {\r\n          lat = this.gpsLat;\r\n          lon = this.gpsLon;\r\n        }\r\n        this.naverMap(lat, lon);\r\n      });\r\n    },\r\n\r\n    /** 모달창 닫기 **/\r\n    closeModal() {\r\n      this.modalOpen = false;\r\n    },\r\n\r\n    /** 주소 검색 결과를 선택했을 때 호출되는 내용 **/\r\n    selectAddress(addressInfo) {\r\n      if (this.inputType === \"address\") {\r\n        this.addr1 = addressInfo.address; // 사는지역 전체주소\r\n        this.shotaddr1 = addressInfo.newAddress; // 사는지역 시, 도\r\n\r\n        this.address = this.addr1; // input 에서 보여지는값\r\n      } else if (this.inputType === \"location\") {\r\n        this.addr2 = addressInfo.location; // 활동지역 전체주소\r\n        this.shotaddr2 = addressInfo.newLocation; // 활동지역 시, 도\r\n\r\n        this.location = this.shotaddr2; // input 에서 보여지는값\r\n      }\r\n      this.modalOpen = false;\r\n    },\r\n    /** 모달 **/\r\n\r\n    /** next btn **/\r\n    validateAndNavigate() {\r\n      if (Object.keys(this.locationView).length > 0) {\r\n        this.goRouter();\r\n      } else {\r\n        this.warningAlert(\"주소를 입력하지 않았습니다.\");\r\n      }\r\n    },\r\n\r\n    /** 경고 팝업창 **/\r\n    async warningAlert(message) {\r\n      const alert = await this.alertController.create({\r\n        header: \"\",\r\n        subHeader: \"\",\r\n        message: message,\r\n        buttons: [\"OK\"]\r\n      });\r\n      return alert.present();\r\n    },\r\n    saveLocationBtn() {\r\n      this.location = this.locationView;\r\n      this.modalOpen = false;\r\n    },\r\n\r\n    jibunGuCheck() {\r\n      if (this.checkBtn === \"dong\") {\r\n        if (this.selectedAddressGu !== null) {\r\n          this.locationView = this.selectedAddressGu;\r\n        }\r\n        this.checkBtnText = \"동까지 표시\";\r\n        this.checkBtn = \"gu\";\r\n      } else {\r\n        if (this.selectedjibunAddressDong !== null) {\r\n          this.locationView = this.selectedjibunAddressDong;\r\n        }\r\n        this.checkBtnText = \"구까지 표시\";\r\n        this.checkBtn = \"dong\";\r\n      }\r\n    },\r\n    /** 로딩창 **/\r\n    async showLoading(time) {\r\n      this.loading = await loadingController.create({\r\n        message: \"Loading...\",\r\n        duration: time\r\n      });\r\n      await this.loading.present();\r\n    },\r\n\r\n    /** naver map **/\r\n    naverMap(lat, lng) {\r\n      const navermaps = window.naver.maps;\r\n      // if (this.selectedLat !== null || this.selectedLng !== null) {\r\n      //   lat = this.selectedLat;\r\n      //   lng = this.selectedLng;\r\n      // }\r\n\r\n      let mapOptions = {\r\n        center: new navermaps.LatLng(lat, lng),\r\n        zoom: 17,\r\n        /** 줌 컨트롤러 **/\r\n        zoomControl: true,\r\n        zoomControlOptions: {\r\n          style: navermaps.ZoomControlStyle.LARGE,\r\n          position: navermaps.Position.TOP_RIGHT\r\n        }\r\n      };\r\n\r\n      /** 맵 생성 **/\r\n      this.map = new navermaps.Map(\"joinLocationMap\", mapOptions);\r\n\r\n      // 지도 초기화 후 커스텀 컨트롤 생성\r\n      // navermaps.Event.once(this.map, 'init', () => {\r\n      //\r\n      //   /** 현재위치로 이동 버튼 **/\r\n      //   let locationBtnHtml =\r\n      //       `<a style=\"\r\n      //           z-index: 100;\r\n      //           overflow: hidden;\r\n      //           display: inline-block;\r\n      //           position: absolute;\r\n      //           top: 7px;\r\n      //           left: 5px;\r\n      //           width: 34px;\r\n      //           height: 34px;\r\n      //           border: 1px solid rgba(58,70,88,.45);\r\n      //           border-radius: 2px;\r\n      //           background: #fcfcfd;\r\n      //             background-clip: border-box;\r\n      //           text-align: center;\r\n      //           -webkit-background-clip: padding;\r\n      //           background-clip: padding-box;\r\n      //         \"\r\n      //       >\r\n      //       <span style=\"\r\n      //           overflow: hidden;\r\n      //           display: inline-block;\r\n      //           color: transparent !important;\r\n      //           vertical-align: top;\r\n      //           background: url(https://ssl.pstatic.net/static/maps/m/spr_trff_v6.png) 0 0;\r\n      //           background-position-x: 0px;\r\n      //           background-position-y: 0px;\r\n      //           background-size: auto;\r\n      //           background-size: 200px 200px;\r\n      //           -webkit-background-size: 200px 200px;\r\n      //           width: 20px;\r\n      //           height: 20px;\r\n      //           margin: 7px 0 0 0;\r\n      //           background-position: -153px -31px;\r\n      //         \">중심위치</span>\r\n      //      </a>`;\r\n      //   let customControl = new navermaps.CustomControl(locationBtnHtml, {\r\n      //     position: naver.maps.Position.TOP_LEFT // 버튼의 위치 설정\r\n      //   });\r\n      //\r\n      //   customControl.setMap(this.map); // 버튼을 지도에 추가\r\n      //   /** 현재위치로 이동 버튼 **/\r\n      //\r\n      //   naver.maps.Event.addDOMListener(customControl.getElement(), 'click', () => {\r\n      //     this.map.setCenter(new navermaps.LatLng( lat, lng )); // 버튼 클릭 시 지도 중심 변경\r\n      //   });\r\n      // });\r\n\r\n      // 마커 객체 생성\r\n      const marker = new navermaps.Marker({\r\n        position: this.map.getCenter(), // 중심 좌표에 마커 설정\r\n        map: this.map, // 지도에 마커 추가\r\n        icon: {\r\n          url: \"https://navermaps.github.io/maps.js.ncp/docs/img/example/pin_default.png\", // 마커의 이미지 URL\r\n          size: new navermaps.Size(24, 37), // 이미지의 원래 크기\r\n          scaledSize: new navermaps.Size(24, 37), // 화면에 표시될 이미지 크기\r\n          origin: new navermaps.Point(0, 0), // 이미지의 시작점\r\n          anchor: new navermaps.Point(12, 37) // 마커를 지도에 고정시킬 위치\r\n        }\r\n      });\r\n      /** 이동없이 그냥 완료 누를때 좌표값 저장 **/\r\n      this.selectedLat = lat;\r\n      this.selectedLng = lng;\r\n\r\n      let latlng = new navermaps.LatLng(lat, lng);\r\n      this.reverseGeocodes(latlng);\r\n\r\n      navermaps.Event.addListener(this.map, \"drag\", () => {\r\n        marker.setPosition(this.map.getCenter()); // 마커 위치 변경\r\n      });\r\n      // 클릭 이벤트 핸들러 설정\r\n      navermaps.Event.addListener(this.map, \"dragend\", (e) => {\r\n        // 마커 위치 변경\r\n        // marker.setMap(null); // 이전 마커를 지도에서 제거\r\n        // marker.setPosition(e.coord); // 마커 위치 변경\r\n        // marker.setMap(this.map); // 마커를 지도에 추가\r\n\r\n        // 클릭한 위치의 좌표 저장\r\n        // this.selectedLat = e.coord.y; // e.coord.lat();\r\n        // this.selectedLng = e.coord.x; //e.coord.lng();\r\n        //\r\n        // let latlng = new window.naver.maps.LatLng(e.coord.y, e.coord.x);\r\n        this.selectedLat = this.map.getCenter().y;\r\n        this.selectedLng = this.map.getCenter().x;\r\n        let latlng = new navermaps.LatLng(this.map.getCenter().y, this.map.getCenter().x);\r\n\r\n        this.reverseGeocodes(latlng);\r\n\r\n      });\r\n    },\r\n\r\n    /** 좌표값 주소로 변환 **/\r\n    reverseGeocodes(latlng) {\r\n      let self = this;\r\n\r\n      const navermaps = window.naver.maps;\r\n      navermaps.Service.reverseGeocode(\r\n        {\r\n          coords: latlng,\r\n          orders: [\r\n            navermaps.Service.OrderType.ADDR,\r\n            navermaps.Service.OrderType.ROAD_ADDR\r\n          ].join(\",\")\r\n        },\r\n        function(status, response) {\r\n          if (status === navermaps.Service.Status.ERROR) {\r\n            return alert(\"Something Wrong!\");\r\n          }\r\n\r\n          let idx = response.v2.results.length > 1 ? 1 : 0;\r\n          // 지번 주소 구까지\r\n          self.selectedAddressGu =\r\n            response.v2.results[idx].region.area1.name +\r\n            \" \" +\r\n            response.v2.results[idx].region.area2.name;\r\n\r\n          // 지번 주소 동까지\r\n          self.selectedjibunAddressDong =\r\n            response.v2.results[idx].region.area1.name +\r\n            \" \" +\r\n            response.v2.results[idx].region.area2.name +\r\n            \" \" +\r\n            response.v2.results[idx].region.area3.name;\r\n\r\n          // 도로명 주소\r\n          self.selectedroadAddressDong =\r\n            response.v2.results[idx].region.area1.name +\r\n            \" \" +\r\n            response.v2.results[idx].region.area2.name +\r\n            \" \" +\r\n            response.v2.results[idx].land.name;\r\n\r\n          if (self.checkBtn === \"dong\") {\r\n            self.locationView = self.selectedjibunAddressDong;\r\n          } else {\r\n            self.locationView = self.selectedAddressGu;\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n","import { render } from \"./JoinLocation.vue?vue&type=template&id=0494b660\"\nimport script from \"./JoinLocation.vue?vue&type=script&lang=js\"\nexport * from \"./JoinLocation.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["Geolocation","web","then","m","GeolocationWeb","class","_createElementBlock","_hoisted_1","_createVNode","_component_ion_text","color","_createElementVNode","_renderSlot","_ctx","$slots","undefined","name","components","IonText","__exports__","render","_createBlock","_component_ion_spinner","_component_ion_progress_bar","value","$options","calValue","props","currIdx","type","Number","default","totalIdx","IonProgressBar","computed","this","id","style","_component_ion_page","_component_ion_header","_component_ion_toolbar","_component_ion_buttons","slot","_component_BackButton","_component_ion_title","_component_ProgressBar","$data","selectedAddressGu","_component_ion_content","_component_JoinTitle","title","_withCtx","_hoisted_2","desc","_component_ion_list","_component_ion_item","lines","_component_ion_input","onClick","_cache","$event","openModal","placeholder","readonly","_component_ion_button","fill","_component_ion_img","src","require","_component_ion_footer","_$data$selectedAddres","_hoisted_3","_hoisted_4","size","expand","shape","disabled","length","validateAndNavigate","_component_ion_ripple_effect","_component_ion_modal","modalOpen","onIonModalDidDismiss","onIonModalDidPresent","mapOpen","breakpoints","closeModal","_component_ion_icon","icon","chevronBack","fullscreen","lodingCheck","_component_PageLoadingCheck","_hoisted_5","_hoisted_6","_component_ion_grid","_component_ion_row","locationView","jibunGuCheck","swapHorizontalOutline","_hoisted_7","_toDisplayString","checkBtnText","_hoisted_8","saveLocationBtn","inject","JoinTitle","ProgressBar","PageLoadingCheck","data","location","inputType","message","showModal","visible","selectedLat","selectedLng","selectedjibunAddress","selectedroadAddress","selectedjibunAddressDong","selectedroadAddressDong","checkBtn","checkLatlng","gpsLat","gpsLon","ionViewWillEnter","ionViewDidLeave","mounted","methods","goRouter","$store","state","joinMap","$router","push","async","Capacitor","position","coords","latitude","longitude","console","log","clearInterval","intervalLatLon","getGps","lat","lon","$nextTick","naverMap","selectAddress","addressInfo","addr1","address","shotaddr1","newAddress","addr2","shotaddr2","newLocation","Object","keys","warningAlert","alert","alertController","create","header","subHeader","buttons","present","time","loading","loadingController","duration","lng","navermaps","window","naver","maps","mapOptions","center","LatLng","zoom","zoomControl","zoomControlOptions","ZoomControlStyle","LARGE","Position","TOP_RIGHT","map","Map","marker","Marker","getCenter","url","Size","scaledSize","origin","Point","anchor","latlng","reverseGeocodes","Event","addListener","setPosition","e","y","x","self","Service","reverseGeocode","orders","OrderType","ADDR","ROAD_ADDR","join","status","response","Status","ERROR","idx","v2","results","region","area1","area2","area3","land"],"sourceRoot":""}