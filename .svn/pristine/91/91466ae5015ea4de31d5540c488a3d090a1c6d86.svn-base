{"version":3,"file":"js/69.8fd62cae.js","mappings":"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","sources":["webpack://navy/./node_modules/cordova-plugin-purchase/www/store.js","webpack://navy/./node_modules/core-js/modules/es.symbol.description.js","webpack://navy/./src/components/Store/StoreCouponModal.vue","webpack://navy/./src/components/Store/StoreCouponListItem.vue","webpack://navy/./src/components/Store/StoreCouponListItem.vue?37e7","webpack://navy/./src/components/Store/StoreCouponModal.vue?e095","webpack://navy/./src/components/Subscription/SubscriptionDescItem.vue","webpack://navy/./src/components/Subscription/SubscriptionDescItem.vue?b3e6","webpack://navy/./src/views/page/Store.vue","webpack://navy/./src/components/Store/StoreListHeader.vue","webpack://navy/./src/components/Store/StoreListHeader.vue?ed7d","webpack://navy/./src/components/Store/StoreListItem.vue","webpack://navy/./src/components/Store/StoreBonusLabel.vue","webpack://navy/./src/components/Store/StoreBonusLabel.vue?308f","webpack://navy/./src/components/Store/StoreListItem.vue?6062","webpack://navy/./src/components/Store/StorePurchaseListItem.vue","webpack://navy/./src/components/Store/StorePurchaseListItem.vue?a0ed","webpack://navy/./src/components/Store/StoreSubscribedListItem.vue","webpack://navy/./src/components/Store/StoreSubscribedListItem.vue?57e2","webpack://navy/./src/components/Store/StoreVoteList.vue","webpack://navy/./src/components/Store/StoreVoteListItem.vue","webpack://navy/./src/components/Store/StoreVoteListItem.vue?2183","webpack://navy/./src/components/Store/StoreVoteList.vue?87d5","webpack://navy/./src/components/Store/StoreBanner.vue","webpack://navy/./src/components/Store/StoreBanner.vue?312a","webpack://navy/./src/views/page/Store.vue?e6b3"],"sourcesContent":["\"use strict\";\nvar CdvPurchase;\n(function (CdvPurchase) {\n    const ERROR_CODES_BASE = 6777000;\n    /**\n     * Error codes\n     */\n    let ErrorCode;\n    (function (ErrorCode) {\n        /** Error: Failed to intialize the in-app purchase library */\n        ErrorCode[ErrorCode[\"SETUP\"] = ERROR_CODES_BASE + 1] = \"SETUP\";\n        /** Error: Failed to load in-app products metadata */\n        ErrorCode[ErrorCode[\"LOAD\"] = ERROR_CODES_BASE + 2] = \"LOAD\";\n        /** Error: Failed to make a purchase */\n        ErrorCode[ErrorCode[\"PURCHASE\"] = ERROR_CODES_BASE + 3] = \"PURCHASE\";\n        /** Error: Failed to load the purchase receipt */\n        ErrorCode[ErrorCode[\"LOAD_RECEIPTS\"] = ERROR_CODES_BASE + 4] = \"LOAD_RECEIPTS\";\n        /** Error: Client is not allowed to issue the request */\n        ErrorCode[ErrorCode[\"CLIENT_INVALID\"] = ERROR_CODES_BASE + 5] = \"CLIENT_INVALID\";\n        /** Error: Purchase flow has been cancelled by user */\n        ErrorCode[ErrorCode[\"PAYMENT_CANCELLED\"] = ERROR_CODES_BASE + 6] = \"PAYMENT_CANCELLED\";\n        /** Error: Something is suspicious about a purchase */\n        ErrorCode[ErrorCode[\"PAYMENT_INVALID\"] = ERROR_CODES_BASE + 7] = \"PAYMENT_INVALID\";\n        /** Error: The user is not allowed to make a payment */\n        ErrorCode[ErrorCode[\"PAYMENT_NOT_ALLOWED\"] = ERROR_CODES_BASE + 8] = \"PAYMENT_NOT_ALLOWED\";\n        /** Error: Unknown error */\n        ErrorCode[ErrorCode[\"UNKNOWN\"] = ERROR_CODES_BASE + 10] = \"UNKNOWN\";\n        /** Error: Failed to refresh the purchase receipt */\n        ErrorCode[ErrorCode[\"REFRESH_RECEIPTS\"] = ERROR_CODES_BASE + 11] = \"REFRESH_RECEIPTS\";\n        /** Error: The product identifier is invalid */\n        ErrorCode[ErrorCode[\"INVALID_PRODUCT_ID\"] = ERROR_CODES_BASE + 12] = \"INVALID_PRODUCT_ID\";\n        /** Error: Cannot finalize a transaction or acknowledge a purchase */\n        ErrorCode[ErrorCode[\"FINISH\"] = ERROR_CODES_BASE + 13] = \"FINISH\";\n        /** Error: Failed to communicate with the server */\n        ErrorCode[ErrorCode[\"COMMUNICATION\"] = ERROR_CODES_BASE + 14] = \"COMMUNICATION\";\n        /** Error: Subscriptions are not available */\n        ErrorCode[ErrorCode[\"SUBSCRIPTIONS_NOT_AVAILABLE\"] = ERROR_CODES_BASE + 15] = \"SUBSCRIPTIONS_NOT_AVAILABLE\";\n        /** Error: Purchase information is missing token */\n        ErrorCode[ErrorCode[\"MISSING_TOKEN\"] = ERROR_CODES_BASE + 16] = \"MISSING_TOKEN\";\n        /** Error: Verification of store data failed */\n        ErrorCode[ErrorCode[\"VERIFICATION_FAILED\"] = ERROR_CODES_BASE + 17] = \"VERIFICATION_FAILED\";\n        /** Error: Bad response from the server */\n        ErrorCode[ErrorCode[\"BAD_RESPONSE\"] = ERROR_CODES_BASE + 18] = \"BAD_RESPONSE\";\n        /** Error: Failed to refresh the store */\n        ErrorCode[ErrorCode[\"REFRESH\"] = ERROR_CODES_BASE + 19] = \"REFRESH\";\n        /** Error: Payment has expired */\n        ErrorCode[ErrorCode[\"PAYMENT_EXPIRED\"] = ERROR_CODES_BASE + 20] = \"PAYMENT_EXPIRED\";\n        /** Error: Failed to download the content */\n        ErrorCode[ErrorCode[\"DOWNLOAD\"] = ERROR_CODES_BASE + 21] = \"DOWNLOAD\";\n        /** Error: Failed to update a subscription */\n        ErrorCode[ErrorCode[\"SUBSCRIPTION_UPDATE_NOT_AVAILABLE\"] = ERROR_CODES_BASE + 22] = \"SUBSCRIPTION_UPDATE_NOT_AVAILABLE\";\n        /** Error: The requested product is not available in the store. */\n        ErrorCode[ErrorCode[\"PRODUCT_NOT_AVAILABLE\"] = ERROR_CODES_BASE + 23] = \"PRODUCT_NOT_AVAILABLE\";\n        /** Error: The user has not allowed access to Cloud service information */\n        ErrorCode[ErrorCode[\"CLOUD_SERVICE_PERMISSION_DENIED\"] = ERROR_CODES_BASE + 24] = \"CLOUD_SERVICE_PERMISSION_DENIED\";\n        /** Error: The device could not connect to the network. */\n        ErrorCode[ErrorCode[\"CLOUD_SERVICE_NETWORK_CONNECTION_FAILED\"] = ERROR_CODES_BASE + 25] = \"CLOUD_SERVICE_NETWORK_CONNECTION_FAILED\";\n        /** Error: The user has revoked permission to use this cloud service. */\n        ErrorCode[ErrorCode[\"CLOUD_SERVICE_REVOKED\"] = ERROR_CODES_BASE + 26] = \"CLOUD_SERVICE_REVOKED\";\n        /** Error: The user has not yet acknowledged Apple’s privacy policy */\n        ErrorCode[ErrorCode[\"PRIVACY_ACKNOWLEDGEMENT_REQUIRED\"] = ERROR_CODES_BASE + 27] = \"PRIVACY_ACKNOWLEDGEMENT_REQUIRED\";\n        /** Error: The app is attempting to use a property for which it does not have the required entitlement. */\n        ErrorCode[ErrorCode[\"UNAUTHORIZED_REQUEST_DATA\"] = ERROR_CODES_BASE + 28] = \"UNAUTHORIZED_REQUEST_DATA\";\n        /** Error: The offer identifier is invalid. */\n        ErrorCode[ErrorCode[\"INVALID_OFFER_IDENTIFIER\"] = ERROR_CODES_BASE + 29] = \"INVALID_OFFER_IDENTIFIER\";\n        /** Error: The price you specified in App Store Connect is no longer valid. */\n        ErrorCode[ErrorCode[\"INVALID_OFFER_PRICE\"] = ERROR_CODES_BASE + 30] = \"INVALID_OFFER_PRICE\";\n        /** Error: The signature in a payment discount is not valid. */\n        ErrorCode[ErrorCode[\"INVALID_SIGNATURE\"] = ERROR_CODES_BASE + 31] = \"INVALID_SIGNATURE\";\n        /** Error: Parameters are missing in a payment discount. */\n        ErrorCode[ErrorCode[\"MISSING_OFFER_PARAMS\"] = ERROR_CODES_BASE + 32] = \"MISSING_OFFER_PARAMS\";\n    })(ErrorCode = CdvPurchase.ErrorCode || (CdvPurchase.ErrorCode = {}));\n    /**\n     * Create an {@link IError} instance\n     *\n     * @internal\n     */\n    function storeError(code, message) {\n        return { isError: true, code, message };\n    }\n    CdvPurchase.storeError = storeError;\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /**\n     * Integrate with https://www.iaptic.com/\n     *\n     * @example\n     * const iaptic = new CdvPurchase.Iaptic({\n     *   url: 'https://validator.iaptic.com',\n     *   appName: 'test',\n     *   apiKey: 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx',\n     * });\n     * store.validator = iaptic.validator;\n     */\n    class Iaptic {\n        constructor(config, store) {\n            this.config = config;\n            if (!config.url) {\n                config.url = 'https://validator.iaptic.com';\n            }\n            this.store = store !== null && store !== void 0 ? store : CdvPurchase.store;\n            this.log = this.store.log.child('Iaptic');\n        }\n        /**\n         * Provides a client token generated on iaptic's servers\n         *\n         * Can be passed to the Braintree Adapter at initialization.\n         *\n         * @example\n         * store.initialize([\n         *   {\n         *     platform: Platform.BRAINTREE,\n         *     options: {\n         *       clientTokenProvider: iaptic.braintreeClientTokenProvider\n         *     }\n         *   }\n         * ]);\n         */\n        get braintreeClientTokenProvider() {\n            return callback => {\n                this.log.info('Calling Braintree clientTokenProvider');\n                CdvPurchase.Utils.ajax(this.log, {\n                    url: `${this.config.url}/v3/braintree/client-token?appName=${this.config.appName}&apiKey=${this.config.apiKey}`,\n                    method: 'POST',\n                    data: {\n                        applicationUsername: CdvPurchase.store.getApplicationUsername(),\n                        customerId: CdvPurchase.Braintree.customerId,\n                    },\n                    success: body => {\n                        this.log.info('clientTokenProvider success: ' + JSON.stringify(body));\n                        callback(body.clientToken);\n                    },\n                    error: err => {\n                        this.log.info('clientTokenProvider error: ' + JSON.stringify(err));\n                        callback(CdvPurchase.storeError(err, 'ERROR ' + err));\n                    },\n                });\n            };\n        }\n        /**\n         * Determine the eligibility of discounts based on the content of the application receipt.\n         *\n         * The secret sauce used here is to wait for validation of the application receipt.\n         * The receipt validator will return the necessary data to determine eligibility.\n         *\n         * Receipt validation is expected to happen after loading product information, so the implementation here is to\n         * wait for a validation response.\n         */\n        get appStoreDiscountEligibilityDeterminer() {\n            // the user needs the appStoreDiscountEligibilityDeterminer, let's start listening to receipt validation events.\n            let latestReceipt;\n            this.log.debug(\"AppStore eligibility determiner is listening...\");\n            this.store.when().verified(receipt => {\n                if (receipt.platform === CdvPurchase.Platform.APPLE_APPSTORE) {\n                    this.log.debug(\"Got a verified AppStore receipt.\");\n                    latestReceipt = receipt;\n                }\n            });\n            return (_appStoreReceipt, requests, callback) => {\n                this.log.debug(\"AppStore eligibility determiner\");\n                if (latestReceipt) {\n                    this.log.debug(\"Using cached receipt\");\n                    return callback(analyzeReceipt(latestReceipt, requests));\n                }\n                const onVerified = (receipt) => {\n                    if (receipt.platform === CdvPurchase.Platform.APPLE_APPSTORE) {\n                        this.log.debug(\"Receipt is verified, let's analyze the content and respond.\");\n                        this.store.off(onVerified);\n                        callback(analyzeReceipt(receipt, requests));\n                    }\n                };\n                this.log.debug(\"Waiting for receipt\");\n                this.store.when().verified(onVerified);\n            };\n            function analyzeReceipt(receipt, requests) {\n                const ineligibleIntro = receipt.raw.ineligible_for_intro_price;\n                return requests.map(request => {\n                    var _a;\n                    if (request.discountType === 'Introductory' && ineligibleIntro && ineligibleIntro.find(id => request.productId === id)) {\n                        // User is not eligible for this introductory offer\n                        return false;\n                    }\n                    else if (request.discountType === 'Subscription') {\n                        // Discount only available if user is or was a subscriber\n                        const matchingPurchase = (_a = receipt.raw.collection) === null || _a === void 0 ? void 0 : _a.find(purchase => purchase.id === request.productId);\n                        return matchingPurchase ? true : false;\n                    }\n                    else {\n                        // In other cases, assume the user is eligible\n                        return true;\n                    }\n                });\n            }\n        }\n        /** Validator URL */\n        get validator() {\n            return `${this.config.url}/v1/validate?appName=${this.config.appName}&apiKey=${this.config.apiKey}`;\n        }\n    }\n    CdvPurchase.Iaptic = Iaptic;\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /**\n     * Desired logging level for the {@link Logger}\n     *\n     * @see {@link Store.verbosity}\n     */\n    let LogLevel;\n    (function (LogLevel) {\n        /** Disable all logging (default) */\n        LogLevel[LogLevel[\"QUIET\"] = 0] = \"QUIET\";\n        /** Show only error messages */\n        LogLevel[LogLevel[\"ERROR\"] = 1] = \"ERROR\";\n        /** Show warnings and errors */\n        LogLevel[LogLevel[\"WARNING\"] = 2] = \"WARNING\";\n        /** Also show information messages */\n        LogLevel[LogLevel[\"INFO\"] = 3] = \"INFO\";\n        /** Enable internal debugging messages. */\n        LogLevel[LogLevel[\"DEBUG\"] = 4] = \"DEBUG\";\n    })(LogLevel = CdvPurchase.LogLevel || (CdvPurchase.LogLevel = {}));\n    ;\n    class Logger {\n        /** @internal */\n        constructor(store, prefix = '') {\n            /** All log lines are prefixed with this string */\n            this.prefix = '';\n            this.store = store;\n            this.prefix = prefix || 'CdvPurchase';\n        }\n        /**\n         * Create a child logger, whose prefix will be this one's + the given string.\n         *\n         * @example\n         * const log = store.log.child('AppStore')\n         */\n        child(prefix) {\n            return new Logger(this.store, this.prefix + '.' + prefix);\n        }\n        /**\n         * Logs an error message, only if `store.verbosity` >= store.ERROR\n         */\n        error(o) {\n            log(this.store.verbosity, LogLevel.ERROR, this.prefix, o);\n            // show the stack trace\n            try {\n                throw new Error(toString(o));\n            }\n            catch (e) {\n                log(this.store.verbosity, LogLevel.ERROR, this.prefix, e.stack);\n            }\n        }\n        /**\n         * Logs a warning message, only if `store.verbosity` >= store.WARNING\n         */\n        warn(o) { log(this.store.verbosity, LogLevel.WARNING, this.prefix, o); }\n        /**\n         * Logs an info message, only if `store.verbosity` >= store.INFO\n         */\n        info(o) { log(this.store.verbosity, LogLevel.INFO, this.prefix, o); }\n        /**\n         * Logs a debug message, only if `store.verbosity` >= store.DEBUG\n         */\n        debug(o) { log(this.store.verbosity, LogLevel.DEBUG, this.prefix, o); }\n        /**\n         * Add warning logs on a console describing an exceptions.\n         *\n         * This method is mostly used when executing user registered callbacks.\n         *\n         * @param context - a string describing why the method was called\n         * @param error - a javascript Error object thrown by a exception\n         */\n        logCallbackException(context, err) {\n            this.warn(\"A callback in \\'\" + context + \"\\' failed with an exception.\");\n            if (typeof err === 'string')\n                this.warn(\"           \" + err);\n            else if (err) {\n                const errAny = err;\n                if (errAny.fileName)\n                    this.warn(\"           \" + errAny.fileName + \":\" + errAny.lineNumber);\n                if (err.message)\n                    this.warn(\"           \" + err.message);\n                if (err.stack)\n                    this.warn(\"           \" + err.stack);\n            }\n        }\n    }\n    /**\n     * Console object used to display log lines.\n     *\n     * It can be replaced by your implementation if you want to, for example, send logs to a remote server.\n     *\n     * @example\n     * Logger.console = {\n     *   log: (message) => { remoteLog('LOG', message); }\n     *   warn: (message) => { remoteLog('WARN', message); }\n     *   error: (message) => { remoteLog('ERROR', message); }\n     * }\n     */\n    Logger.console = window.console;\n    CdvPurchase.Logger = Logger;\n    const LOG_LEVEL_STRING = [\"QUIET\", \"ERROR\", \"WARNING\", \"INFO\", \"DEBUG\"];\n    function toString(o) {\n        if (typeof o !== 'string')\n            o = JSON.stringify(o);\n        return o;\n    }\n    function log(verbosity, level, prefix, o) {\n        var maxLevel = verbosity === true ? 1 : verbosity;\n        if (level > maxLevel)\n            return;\n        if (typeof o !== 'string')\n            o = JSON.stringify(o);\n        const fullPrefix = prefix ? `[${prefix}] ` : '';\n        const logStr = (level === LogLevel.ERROR) ? ((str) => Logger.console.error(str))\n            : (level === LogLevel.WARNING) ? ((str) => Logger.console.warn(str))\n                : ((str) => Logger.console.log(str));\n        if (LOG_LEVEL_STRING[level])\n            logStr(`${fullPrefix}${LOG_LEVEL_STRING[level]}: ${o}`);\n        else\n            logStr(`${fullPrefix}${o}`);\n    }\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Utils;\n    (function (Utils) {\n        Utils.nonEnumerable = (target, name, desc) => {\n            if (desc) {\n                desc.enumerable = false;\n                return desc;\n            }\n            Object.defineProperty(target, name, {\n                set(value) {\n                    Object.defineProperty(this, name, {\n                        value, writable: true, configurable: true,\n                    });\n                },\n                configurable: true,\n            });\n        };\n    })(Utils = CdvPurchase.Utils || (CdvPurchase.Utils = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /** Product definition from a store */\n    class Product {\n        /** @internal */\n        constructor(p, decorator) {\n            /** @internal */\n            this.className = 'Product';\n            /** Product title from the store. */\n            this.title = '';\n            /** Product full description from the store. */\n            this.description = '';\n            this.platform = p.platform;\n            this.type = p.type;\n            this.id = p.id;\n            this.group = p.group;\n            this.offers = [];\n            Object.defineProperty(this, 'pricing', { enumerable: false, get: () => { var _a; return (_a = this.offers[0]) === null || _a === void 0 ? void 0 : _a.pricingPhases[0]; } });\n            Object.defineProperty(this, 'canPurchase', { enumerable: false, get: () => decorator.canPurchase(this) });\n            Object.defineProperty(this, 'owned', { enumerable: false, get: () => decorator.owned(this) });\n        }\n        /**\n         * Shortcut to offers[0].pricingPhases[0]\n         *\n         * Useful when you know products have a single offer and a single pricing phase.\n         */\n        get pricing() {\n            var _a;\n            // see Object.defineProperty in the constructor for the actual implementation.\n            return (_a = this.offers[0]) === null || _a === void 0 ? void 0 : _a.pricingPhases[0];\n        }\n        /**\n         * Returns true if the product can be purchased.\n         */\n        get canPurchase() {\n            // Pseudo implementation to make typescript happy.\n            // see Object.defineProperty in the constructor for the actual implementation.\n            return false;\n        }\n        /**\n         * Returns true if the product is owned.\n         */\n        get owned() {\n            // Pseudo implementation to make typescript happy.\n            // see Object.defineProperty in the constructor for the actual implementation.\n            return false;\n        }\n        /**\n         * Find and return an offer for this product from its id\n         *\n         * If id isn't specified, returns the first offer.\n         *\n         * @param id - Identifier of the offer to return\n         * @return An Offer or undefined if no match is found\n         */\n        getOffer(id = '') {\n            if (!id)\n                return this.offers[0];\n            return this.offers.find(o => o.id === id);\n        }\n        /**\n         * Add an offer to this product.\n         *\n         * @internal\n         */\n        addOffer(offer) {\n            if (this.getOffer(offer.id))\n                return this;\n            this.offers.push(offer);\n            return this;\n        }\n    }\n    CdvPurchase.Product = Product;\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /**\n     * @internal\n     */\n    let Internal;\n    (function (Internal) {\n        /** Queue of receipts to validate */\n        class ReceiptsToValidate {\n            constructor() {\n                this.array = [];\n            }\n            get length() {\n                return this.array.length;\n            }\n            get() {\n                return this.array.concat();\n            }\n            add(receipt) {\n                if (!this.has(receipt))\n                    this.array.push(receipt);\n            }\n            clear() {\n                while (this.array.length !== 0)\n                    this.array.pop();\n            }\n            has(receipt) {\n                return !!this.array.find(el => el === receipt);\n            }\n        }\n        Internal.ReceiptsToValidate = ReceiptsToValidate;\n        /** Handles communication with the remote receipt validation service */\n        class Validator {\n            constructor(controller, log) {\n                /** List of receipts waiting for validation */\n                this.receiptsToValidate = new ReceiptsToValidate();\n                /** List of verified receipts */\n                this.verifiedReceipts = [];\n                this.numRequests = 0;\n                this.numResponses = 0;\n                /**\n                 * For each md5-hashed values of the validator request's \".transaction\" field,\n                 * store the response from the server.\n                 *\n                 * This way, if a subsequent request is necessary (without a couple of minutes)\n                 * we just reuse the same data.\n                 */\n                this.cache = {};\n                this.controller = controller;\n                this.log = log.child('Validator');\n            }\n            incrRequestsCounter() {\n                this.numRequests = (this.numRequests + 1) | 0;\n                this.log.debug(`Validation requests=${this.numRequests} responses=${this.numResponses}`);\n            }\n            incrResponsesCounter() {\n                this.numResponses = (this.numResponses + 1) | 0;\n                this.log.debug(`Validation requests=${this.numRequests} responses=${this.numResponses}`);\n            }\n            /** Add/update a verified receipt from the server response */\n            addVerifiedReceipt(receipt, data) {\n                for (const vr of this.verifiedReceipts) {\n                    if (vr.platform === receipt.platform && vr.id === data.id) {\n                        // update existing receipt\n                        this.log.debug(\"Updating existing receipt.\");\n                        vr.set(receipt, data);\n                        return vr;\n                    }\n                }\n                this.log.debug(\"Register a new verified receipt.\");\n                const newVR = new CdvPurchase.VerifiedReceipt(receipt, data, this.controller);\n                this.verifiedReceipts.push(newVR);\n                return newVR;\n            }\n            /** Add a receipt to the validation queue. It'll get validated after a few milliseconds. */\n            add(receiptOrTransaction) {\n                this.log.debug(\"Schedule validation: \" + JSON.stringify(receiptOrTransaction));\n                const receipt = (receiptOrTransaction instanceof CdvPurchase.Transaction) ? receiptOrTransaction.parentReceipt : receiptOrTransaction;\n                if (!this.receiptsToValidate.has(receipt)) {\n                    this.incrRequestsCounter();\n                    this.receiptsToValidate.add(receipt);\n                }\n            }\n            /** Run validation for all receipts in the queue */\n            run() {\n                // pseudo implementation\n                const receipts = this.receiptsToValidate.get();\n                this.receiptsToValidate.clear();\n                const onResponse = async (r) => {\n                    const { receipt, payload } = r;\n                    this.incrResponsesCounter();\n                    try {\n                        const adapter = this.controller.adapters.find(receipt.platform);\n                        await (adapter === null || adapter === void 0 ? void 0 : adapter.handleReceiptValidationResponse(receipt, payload));\n                        if (payload.ok) {\n                            const vr = this.addVerifiedReceipt(receipt, payload.data);\n                            this.controller.verifiedCallbacks.trigger(vr);\n                            // this.verifiedCallbacks.trigger(data.receipt);\n                        }\n                        else {\n                            this.controller.unverifiedCallbacks.trigger({ receipt, payload });\n                        }\n                    }\n                    catch (err) {\n                        this.log.error('Exception probably caused by an invalid response from the validator.' + err.message);\n                        this.controller.unverifiedCallbacks.trigger({ receipt, payload: {\n                                ok: false,\n                                code: CdvPurchase.ErrorCode.VERIFICATION_FAILED,\n                                message: err.message,\n                            } });\n                    }\n                };\n                receipts.forEach(receipt => this.runOnReceipt(receipt, onResponse));\n            }\n            async runOnReceipt(receipt, callback) {\n                if (receipt.platform === CdvPurchase.Platform.TEST) {\n                    this.log.debug('Using Test Adapter mock verify function.');\n                    return CdvPurchase.Test.Adapter.verify(receipt, callback);\n                }\n                if (!this.controller.validator) {\n                    this.incrResponsesCounter();\n                    return;\n                }\n                const body = await this.buildRequestBody(receipt);\n                if (!body) {\n                    this.incrResponsesCounter();\n                    return;\n                }\n                if (typeof this.controller.validator === 'function')\n                    return this.runValidatorFunction(this.controller.validator, receipt, body, callback);\n                const target = typeof this.controller.validator === 'string'\n                    ? {\n                        url: this.controller.validator,\n                        timeout: 20000, // validation request will timeout after 20 seconds by default\n                    }\n                    : this.controller.validator;\n                return this.runValidatorRequest(target, receipt, body, callback);\n            }\n            runValidatorFunction(validator, receipt, body, callback) {\n                try {\n                    validator(body, (payload) => callback({ receipt, payload }));\n                }\n                catch (error) {\n                    this.log.warn(\"user provided validator function failed with error: \" + (error === null || error === void 0 ? void 0 : error.stack));\n                }\n            }\n            async buildRequestBody(receipt) {\n                var _a, _b, _c;\n                // Let the adapter generate the initial content\n                const adapter = this.controller.adapters.find(receipt.platform);\n                const body = await (adapter === null || adapter === void 0 ? void 0 : adapter.receiptValidationBody(receipt));\n                if (!body)\n                    return;\n                // Add the applicationUsername\n                body.additionalData = Object.assign(Object.assign({}, (_a = body.additionalData) !== null && _a !== void 0 ? _a : {}), { applicationUsername: this.controller.getApplicationUsername() });\n                if (!body.additionalData.applicationUsername)\n                    delete body.additionalData.applicationUsername;\n                // Add device information\n                body.device = Object.assign(Object.assign({}, (_b = body.device) !== null && _b !== void 0 ? _b : {}), CdvPurchase.Validator.Internal.getDeviceInfo(this.controller));\n                // Add legacy pricing information\n                if (((_c = body.offers) === null || _c === void 0 ? void 0 : _c.length) === 1) {\n                    const offer = body.offers[0];\n                    if (offer.pricingPhases.length === 1) {\n                        const pricing = offer.pricingPhases[0];\n                        body.currency = pricing.currency;\n                        body.priceMicros = pricing.priceMicros;\n                    }\n                    else if (offer.pricingPhases.length === 2) {\n                        const pricing = offer.pricingPhases[1];\n                        body.currency = pricing.currency;\n                        body.priceMicros = pricing.priceMicros;\n                        const intro = offer.pricingPhases[0];\n                        body.introPriceMicros = intro.priceMicros;\n                    }\n                }\n                return body;\n            }\n            removeExpiredCache() {\n                const now = +new Date();\n                const deleteList = [];\n                for (const hash in this.cache) {\n                    if (this.cache[hash].expires < now) {\n                        deleteList.push(hash);\n                    }\n                }\n                for (const hash of deleteList) {\n                    delete this.cache[hash];\n                }\n            }\n            runValidatorRequest(target, receipt, body, callback) {\n                this.removeExpiredCache();\n                const bodyTransactionHash = CdvPurchase.Utils.md5(JSON.stringify(body.transaction));\n                const cached = this.cache[bodyTransactionHash];\n                if (cached) {\n                    return callback({ receipt, payload: cached.payload });\n                }\n                CdvPurchase.Utils.ajax(this.log.child(\"Ajax\"), {\n                    url: target.url,\n                    method: 'POST',\n                    customHeaders: target.headers,\n                    timeout: target.timeout,\n                    data: body,\n                    success: (response) => {\n                        var _a;\n                        this.log.debug(\"validator success, response: \" + JSON.stringify(response));\n                        if (!isValidatorResponsePayload(response))\n                            return callback({\n                                receipt,\n                                payload: {\n                                    ok: false,\n                                    code: CdvPurchase.ErrorCode.BAD_RESPONSE,\n                                    message: 'Validator responded with invalid data',\n                                    data: { latest_receipt: (_a = response === null || response === void 0 ? void 0 : response.data) === null || _a === void 0 ? void 0 : _a.latest_receipt },\n                                }\n                            });\n                        this.cache[bodyTransactionHash] = {\n                            payload: response,\n                            expires: (+new Date()) + 120000, // expires in 2 minutes\n                        };\n                        callback({ receipt, payload: response });\n                    },\n                    error: (status, message, data) => {\n                        var fullMessage = \"Error \" + status + \": \" + message;\n                        this.log.debug(\"validator failed, response: \" + JSON.stringify(fullMessage));\n                        this.log.debug(\"body => \" + JSON.stringify(data));\n                        callback({\n                            receipt,\n                            payload: {\n                                ok: false,\n                                message: fullMessage,\n                                code: CdvPurchase.ErrorCode.COMMUNICATION,\n                                status: status,\n                                data: {},\n                            }\n                        });\n                    }\n                });\n            }\n        }\n        Internal.Validator = Validator;\n        /**\n         * Check if a payload looks like a valid validator response.\n         */\n        function isValidatorResponsePayload(payload) {\n            // TODO: could be made more robust.\n            return (!!payload)\n                && (typeof payload === 'object')\n                && ('ok' in payload)\n                && (typeof payload.ok === 'boolean');\n        }\n    })(Internal = CdvPurchase.Internal || (CdvPurchase.Internal = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /** @internal */\n    let Internal;\n    (function (Internal) {\n        /**\n         * The list of active platform adapters\n         */\n        class Adapters {\n            constructor() {\n                /**\n                 * List of instantiated adapters.\n                 *\n                 * They are added to this list by \"initialize()\".\n                 */\n                this.list = [];\n            }\n            add(log, adapters, context) {\n                adapters.forEach(po => {\n                    log.info(\"\");\n                    if (this.find(po.platform))\n                        return;\n                    switch (po.platform) {\n                        case CdvPurchase.Platform.APPLE_APPSTORE:\n                            return this.list.push(new CdvPurchase.AppleAppStore.Adapter(context, po.options || {}));\n                        case CdvPurchase.Platform.GOOGLE_PLAY:\n                            return this.list.push(new CdvPurchase.GooglePlay.Adapter(context));\n                        case CdvPurchase.Platform.BRAINTREE:\n                            if (!po.options) {\n                                log.error('Options missing for Braintree initialization. Use {platform: Platform.BRAINTREE, options: {...}} in your call to store.initialize');\n                            }\n                            return this.list.push(new CdvPurchase.Braintree.Adapter(context, po.options));\n                        case CdvPurchase.Platform.TEST:\n                        default:\n                            return this.list.push(new CdvPurchase.Test.Adapter(context));\n                    }\n                });\n            }\n            /**\n             * Initialize some platform adapters.\n             */\n            async initialize(platforms, context) {\n                const newPlatforms = platforms.map(p => typeof p === 'string' ? { platform: p } : p).filter(p => !this.find(p.platform));\n                const log = context.log.child('Adapters');\n                log.info(\"Adding platforms: \" + JSON.stringify(newPlatforms));\n                this.add(log, newPlatforms, context);\n                const products = context.registeredProducts.byPlatform();\n                const result = await Promise.all(newPlatforms.map(async (platformToInit) => {\n                    var _a, _b, _c;\n                    const platformProducts = (_c = (_b = (_a = products.filter(p => p.platform === platformToInit.platform)) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.products) !== null && _c !== void 0 ? _c : [];\n                    const adapter = this.find(platformToInit.platform);\n                    if (!adapter)\n                        return;\n                    log.info(`${adapter.name} initializing...`);\n                    if (!adapter.isSupported) {\n                        log.info(`${adapter.name} is not supported.`);\n                        return; // skip unsupported adapters\n                    }\n                    const initResult = await adapter.initialize();\n                    adapter.ready = true;\n                    log.info(`${adapter.name} initialized. ${initResult ? JSON.stringify(initResult) : ''}`);\n                    if (initResult === null || initResult === void 0 ? void 0 : initResult.code)\n                        return initResult;\n                    log.info(`${adapter.name} products: ${JSON.stringify(platformProducts)}`);\n                    if (platformProducts.length === 0)\n                        return;\n                    const loadProductsResult = await adapter.loadProducts(platformProducts);\n                    log.info(`${adapter.name} products loaded: ${JSON.stringify(loadProductsResult)}`);\n                    const loadedProducts = loadProductsResult.filter(p => p instanceof CdvPurchase.Product);\n                    context.listener.productsUpdated(platformToInit.platform, loadedProducts);\n                    const loadReceiptsResult = await adapter.loadReceipts();\n                    log.info(`${adapter.name} receipts loaded: ${JSON.stringify(loadReceiptsResult)}`);\n                    return loadProductsResult.filter(lr => 'code' in lr && 'message' in lr)[0];\n                }));\n                return result.filter(err => err);\n            }\n            /**\n             * Retrieve a platform adapter.\n             */\n            find(platform) {\n                return this.list.filter(a => a.id === platform)[0];\n            }\n            /**\n             * Retrieve the first platform adapter in the ready state, if any.\n             *\n             * You can optionally force the platform adapter you are looking for.\n             *\n             * Useful for methods that accept an optional \"platform\" argument, so they either act\n             * on the only active adapter or on the one selected by the user, if it's ready.\n             */\n            findReady(platform) {\n                return this.list.filter(adapter => (!platform || adapter.id === platform) && adapter.ready)[0];\n            }\n        }\n        Internal.Adapters = Adapters;\n    })(Internal = CdvPurchase.Internal || (CdvPurchase.Internal = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Internal;\n    (function (Internal) {\n        /**\n         * Manage a list of callbacks\n         */\n        class Callbacks {\n            /**\n             * @param className - Type of callbacks (used to help with debugging)\n             * @param finalStateMode - If true, newly registered callbacks will be called immediately when the event was already triggered.\n             */\n            constructor(logger, className, finalStateMode = false) {\n                /** List of registered callbacks */\n                this.callbacks = [];\n                /** Number of times those callbacks have been triggered */\n                this.numTriggers = 0;\n                this.logger = logger;\n                this.className = className;\n                this.finalStateMode = finalStateMode;\n            }\n            /** Add a callback to the list */\n            push(callback) {\n                if (this.finalStateMode && this.numTriggers > 0) {\n                    callback(this.lastTriggerArgument);\n                }\n                else {\n                    this.callbacks.push(callback);\n                }\n            }\n            /** Call all registered callbacks with the given value */\n            trigger(value) {\n                this.lastTriggerArgument = value;\n                this.numTriggers++;\n                const callbacks = this.callbacks;\n                if (this.finalStateMode) {\n                    // in final state mode, callbacks are only triggered once\n                    this.callbacks = [];\n                }\n                callbacks.forEach(callback => {\n                    CdvPurchase.Utils.safeCall(this.logger, this.className, callback, value);\n                });\n            }\n            /** Remove a callback from the list */\n            remove(callback) {\n                this.callbacks = this.callbacks.filter(el => el !== callback);\n            }\n        }\n        Internal.Callbacks = Callbacks;\n    })(Internal = CdvPurchase.Internal || (CdvPurchase.Internal = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /** @internal */\n    let Internal;\n    (function (Internal) {\n        /**\n         * Ready callbacks\n         */\n        class ReadyCallbacks {\n            constructor(logger) {\n                /** True when the plugin is ready */\n                this.isReady = false;\n                /** Callbacks when the store is ready */\n                this.readyCallbacks = [];\n                this.logger = logger;\n            }\n            /** Register a callback to be called when the plugin is ready. */\n            add(cb) {\n                if (this.isReady)\n                    return setTimeout(cb, 0);\n                this.readyCallbacks.push(cb);\n            }\n            /** Calls the ready callbacks */\n            trigger() {\n                this.isReady = true;\n                this.readyCallbacks.forEach(cb => CdvPurchase.Utils.safeCall(this.logger, 'ready()', cb, undefined));\n                this.readyCallbacks = [];\n            }\n            remove(cb) {\n                this.readyCallbacks = this.readyCallbacks.filter(el => el !== cb);\n            }\n        }\n        Internal.ReadyCallbacks = ReadyCallbacks;\n    })(Internal = CdvPurchase.Internal || (CdvPurchase.Internal = {}));\n})(CdvPurchase || (CdvPurchase = {}));\n/// <reference path=\"validator/validator.ts\" />\n/// <reference path=\"log.ts\" />\n/// <reference path=\"internal/adapters.ts\" />\n/// <reference path=\"internal/callbacks.ts\" />\n/// <reference path=\"internal/ready.ts\" />\n/**\n * Namespace for the cordova-plugin-purchase plugin.\n *\n * All classes, enumerations and variables defined by the plugin are in this namespace.\n *\n * Throughout the documentation, in order to keep examples readable, we omit the `CdvPurchase` prefix.\n *\n * When you see, for example `ProductType.PAID_SUBSCRIPTION`, it refers to `CdvPurchase.ProductType.PAID_SUBSCRIPTION`.\n *\n * In the files that interact with the plugin, I recommend creating those shortcuts (and more if needed):\n *\n * ```ts\n * const {store, ProductType, Platform, LogLevel} = CdvPurchase;\n * ```\n */\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /**\n     * Current release number of the plugin.\n     */\n    CdvPurchase.PLUGIN_VERSION = '13.6.0';\n    /**\n     * Entry class of the plugin.\n     */\n    class Store {\n        constructor() {\n            /**\n             * Payment platform adapters.\n             */\n            this.adapters = new CdvPurchase.Internal.Adapters();\n            /**\n             * List of registered products.\n             *\n             * Products are added to this list of products by {@link Store.register}, an internal job will defer loading to the platform adapters.\n             */\n            this.registeredProducts = new CdvPurchase.Internal.RegisteredProducts();\n            /** Logger */\n            this.log = new CdvPurchase.Logger(this);\n            /**\n             * Verbosity level used by the plugin logger\n             *\n             * Set to:\n             *\n             *  - LogLevel.QUIET or 0 to disable all logging (default)\n             *  - LogLevel.ERROR or 1 to show only error messages\n             *  - LogLevel.WARNING or 2 to show warnings and errors\n             *  - LogLevel.INFO or 3 to also show information messages\n             *  - LogLevel.DEBUG or 4 to enable internal debugging messages.\n             *\n             * @see {@link LogLevel}\n             */\n            this.verbosity = CdvPurchase.LogLevel.ERROR;\n            /** List of callbacks for the \"ready\" events */\n            this._readyCallbacks = new CdvPurchase.Internal.ReadyCallbacks(this.log);\n            /** Callbacks when a product definition was updated */\n            this.updatedCallbacks = new CdvPurchase.Internal.Callbacks(this.log, 'productUpdated()');\n            /** Callback when a receipt was updated */\n            this.updatedReceiptsCallbacks = new CdvPurchase.Internal.Callbacks(this.log, 'receiptUpdated()');\n            /** Callbacks when a product is owned */\n            // private ownedCallbacks = new Callbacks<Product>();\n            /** Callbacks when a transaction has been approved */\n            this.approvedCallbacks = new CdvPurchase.Internal.Callbacks(this.log, 'approved()');\n            /** Callbacks when a transaction has been finished */\n            this.finishedCallbacks = new CdvPurchase.Internal.Callbacks(this.log, 'finished()');\n            /** Callbacks when a transaction is pending */\n            this.pendingCallbacks = new CdvPurchase.Internal.Callbacks(this.log, 'pending()');\n            /** Callbacks when a receipt has been validated */\n            this.verifiedCallbacks = new CdvPurchase.Internal.Callbacks(this.log, 'verified()');\n            /** Callbacks when a receipt has been validated */\n            this.unverifiedCallbacks = new CdvPurchase.Internal.Callbacks(this.log, 'unverified()');\n            /** Callbacks when all receipts have been loaded */\n            this.receiptsReadyCallbacks = new CdvPurchase.Internal.Callbacks(this.log, 'receiptsReady()', true);\n            /** Callbacks when all receipts have been verified */\n            this.receiptsVerifiedCallbacks = new CdvPurchase.Internal.Callbacks(this.log, 'receiptsVerified()', true);\n            /** Callbacks for errors */\n            this.errorCallbacks = new CdvPurchase.Internal.Callbacks(this.log, 'error()');\n            this.initializedHasBeenCalled = false;\n            /**\n             * Version of the plugin currently installed.\n             */\n            this.version = CdvPurchase.PLUGIN_VERSION;\n            const store = this;\n            this.listener = new CdvPurchase.Internal.StoreAdapterListener({\n                updatedCallbacks: this.updatedCallbacks,\n                updatedReceiptCallbacks: this.updatedReceiptsCallbacks,\n                approvedCallbacks: this.approvedCallbacks,\n                finishedCallbacks: this.finishedCallbacks,\n                pendingCallbacks: this.pendingCallbacks,\n                receiptsReadyCallbacks: this.receiptsReadyCallbacks,\n            }, this.log);\n            this.transactionStateMonitors = new CdvPurchase.Internal.TransactionStateMonitors(this.when());\n            this._validator = new CdvPurchase.Internal.Validator({\n                adapters: this.adapters,\n                getApplicationUsername: this.getApplicationUsername.bind(this),\n                get localReceipts() { return store.localReceipts; },\n                get validator() { return store.validator; },\n                get validator_privacy_policy() { return store.validator_privacy_policy; },\n                verifiedCallbacks: this.verifiedCallbacks,\n                unverifiedCallbacks: this.unverifiedCallbacks,\n                finish: (receipt) => this.finish(receipt),\n            }, this.log);\n            new CdvPurchase.Internal.ReceiptsMonitor({\n                hasLocalReceipts: () => this.localReceipts.length > 0,\n                hasValidator: () => !!this.validator,\n                numValidationRequests: () => this._validator.numRequests,\n                numValidationResponses: () => this._validator.numResponses,\n                off: this.off.bind(this),\n                when: this.when.bind(this),\n                receiptsVerified: () => { store.receiptsVerifiedCallbacks.trigger(); },\n                log: this.log,\n            }).launch();\n        }\n        /**\n         * Retrieve a platform adapter.\n         *\n         * The platform adapter has to have been initialized before.\n         *\n         * @see {@link initialize}\n         */\n        getAdapter(platform) {\n            return this.adapters.find(platform);\n        }\n        /**\n         * Get the application username as a string by either calling or returning {@link Store.applicationUsername}\n        */\n        getApplicationUsername() {\n            if (this.applicationUsername instanceof Function)\n                return this.applicationUsername();\n            return this.applicationUsername;\n        }\n        /**\n         * Register a product.\n         *\n         * @example\n         * store.register([{\n         *       id: 'subscription1',\n         *       type: ProductType.PAID_SUBSCRIPTION,\n         *       platform: Platform.APPLE_APPSTORE,\n         *   }, {\n         *       id: 'subscription1',\n         *       type: ProductType.PAID_SUBSCRIPTION,\n         *       platform: Platform.GOOGLE_PLAY,\n         *   }, {\n         *       id: 'consumable1',\n         *       type: ProductType.CONSUMABLE,\n         *       platform: Platform.BRAINTREE,\n         *   }]);\n         */\n        register(product) {\n            this.registeredProducts.add(product);\n        }\n        /**\n         * Call to initialize the in-app purchase plugin.\n         *\n         * @param platforms - List of payment platforms to initialize, default to Store.defaultPlatform().\n         */\n        async initialize(platforms = [this.defaultPlatform()]) {\n            if (this.initializedHasBeenCalled) {\n                this.log.warn('store.initialized() has been called already.');\n                return [];\n            }\n            this.log.info('initialize()');\n            this.initializedHasBeenCalled = true;\n            const store = this;\n            const ret = this.adapters.initialize(platforms, {\n                error: this.triggerError.bind(this),\n                get verbosity() { return store.verbosity; },\n                getApplicationUsername() { return store.getApplicationUsername(); },\n                get listener() { return store.listener; },\n                get log() { return store.log; },\n                get registeredProducts() { return store.registeredProducts; },\n                apiDecorators: {\n                    canPurchase: this.canPurchase.bind(this),\n                    owned: this.owned.bind(this),\n                    finish: this.finish.bind(this),\n                    order: this.order.bind(this),\n                    verify: this.verify.bind(this),\n                },\n            });\n            ret.then(() => {\n                this._readyCallbacks.trigger();\n                this.listener.setSupportedPlatforms(this.adapters.list.filter(a => a.isSupported).map(a => a.id));\n            });\n            return ret;\n        }\n        /**\n         * @deprecated - use store.initialize(), store.update() or store.restorePurchases()\n         */\n        refresh() {\n            throw new Error(\"use store.initialize() or store.update()\");\n        }\n        /**\n         * Call to refresh the price of products and status of purchases.\n         */\n        async update() {\n            var _a;\n            this.log.info('update()');\n            // Load products metadata\n            for (const registration of this.registeredProducts.byPlatform()) {\n                const products = await ((_a = this.adapters.findReady(registration.platform)) === null || _a === void 0 ? void 0 : _a.loadProducts(registration.products));\n                products === null || products === void 0 ? void 0 : products.forEach(p => {\n                    if (p instanceof CdvPurchase.Product)\n                        this.updatedCallbacks.trigger(p);\n                });\n            }\n        }\n        /**\n         * Register a callback to be called when the plugin is ready.\n         *\n         * This happens when all the platforms are initialized and their products loaded.\n         */\n        ready(cb) { this._readyCallbacks.add(cb); }\n        /** true if the plugin is initialized and ready */\n        get isReady() { return this._readyCallbacks.isReady; }\n        /**\n         * Setup events listener.\n         *\n         * @example\n         * store.when()\n         *      .productUpdated(product => updateUI(product))\n         *      .approved(transaction => transaction.verify())\n         *      .verified(receipt => receipt.finish());\n         */\n        when() {\n            const ret = {\n                productUpdated: (cb) => (this.updatedCallbacks.push(cb), ret),\n                receiptUpdated: (cb) => (this.updatedReceiptsCallbacks.push(cb), ret),\n                updated: (cb) => (this.updatedCallbacks.push(cb), this.updatedReceiptsCallbacks.push(cb), ret),\n                // owned: (cb: Callback<Product>) => (this.ownedCallbacks.push(cb), ret),\n                approved: (cb) => (this.approvedCallbacks.push(cb), ret),\n                pending: (cb) => (this.pendingCallbacks.push(cb), ret),\n                finished: (cb) => (this.finishedCallbacks.push(cb), ret),\n                verified: (cb) => (this.verifiedCallbacks.push(cb), ret),\n                unverified: (cb) => (this.unverifiedCallbacks.push(cb), ret),\n                receiptsReady: (cb) => (this.receiptsReadyCallbacks.push(cb), ret),\n                receiptsVerified: (cb) => (this.receiptsVerifiedCallbacks.push(cb), ret),\n            };\n            return ret;\n        }\n        /**\n         * Remove a callback from any listener it might have been added to.\n         */\n        off(callback) {\n            this.updatedCallbacks.remove(callback);\n            this.updatedReceiptsCallbacks.remove(callback);\n            this.approvedCallbacks.remove(callback);\n            this.finishedCallbacks.remove(callback);\n            this.pendingCallbacks.remove(callback);\n            this.verifiedCallbacks.remove(callback);\n            this.unverifiedCallbacks.remove(callback);\n            this.receiptsReadyCallbacks.remove(callback);\n            this.receiptsVerifiedCallbacks.remove(callback);\n            this.errorCallbacks.remove(callback);\n            this._readyCallbacks.remove(callback);\n        }\n        /**\n         * Setup a function to be notified of changes to a transaction state.\n         *\n         * @param transaction The transaction to monitor.\n         * @param onChange Function to be called when the transaction status changes.\n         * @return A monitor which can be stopped with `monitor.stop()`\n         *\n         * @example\n         * const monitor = store.monitor(transaction, state => {\n         *   console.log('new state: ' + state);\n         *   if (state === TransactionState.FINISHED)\n         *     monitor.stop();\n         * });\n         */\n        monitor(transaction, onChange) {\n            return this.transactionStateMonitors.start(transaction, CdvPurchase.Utils.safeCallback(this.log, 'monitor()', onChange));\n        }\n        /**\n         * List of all active products.\n         *\n         * Products are active if their details have been successfully loaded from the store.\n         */\n        get products() {\n            // concatenate products all all active platforms\n            return [].concat(...this.adapters.list.map(a => a.products));\n        }\n        /**\n         * Find a product from its id and platform\n         *\n         * @param productId Product identifier on the platform.\n         * @param platform The product the product exists in. Can be omitted if you're only using a single payment platform.\n         */\n        get(productId, platform) {\n            var _a;\n            return (_a = this.adapters.findReady(platform)) === null || _a === void 0 ? void 0 : _a.products.find(p => p.id === productId);\n        }\n        /**\n         * List of all receipts present on the device.\n         */\n        get localReceipts() {\n            // concatenate products all all active platforms\n            return [].concat(...this.adapters.list.map(a => a.receipts));\n        }\n        /** List of all transaction from the local receipts. */\n        get localTransactions() {\n            const ret = [];\n            for (const receipt of this.localReceipts) {\n                ret.push(...receipt.transactions);\n            }\n            return ret;\n        }\n        /**\n         * List of receipts verified with the receipt validation service.\n         *\n         * Those receipt contains more information and are generally more up-to-date than the local ones.\n         */\n        get verifiedReceipts() {\n            return this._validator.verifiedReceipts;\n        }\n        /**\n         * List of all purchases from the verified receipts.\n         */\n        get verifiedPurchases() {\n            return CdvPurchase.Internal.VerifiedReceipts.getVerifiedPurchases(this.verifiedReceipts);\n        }\n        /**\n         * Find the last verified purchase for a given product, from those verified by the receipt validator.\n         */\n        findInVerifiedReceipts(product) {\n            return CdvPurchase.Internal.VerifiedReceipts.find(this.verifiedReceipts, product);\n        }\n        /**\n         * Find the latest transaction for a given product, from those reported by the device.\n         */\n        findInLocalReceipts(product) {\n            return CdvPurchase.Internal.LocalReceipts.find(this.localReceipts, product);\n        }\n        /** Return true if a product or offer can be purchased */\n        canPurchase(offer) {\n            const product = (offer instanceof CdvPurchase.Offer) ? this.get(offer.productId, offer.platform) : offer;\n            const adapter = this.adapters.findReady(offer.platform);\n            if (!(adapter === null || adapter === void 0 ? void 0 : adapter.checkSupport('order')))\n                return false;\n            return CdvPurchase.Internal.LocalReceipts.canPurchase(this.localReceipts, product);\n        }\n        /**\n         * Return true if a product is owned\n         *\n         * @param product - The product object or identifier of the product.\n         */\n        owned(product) {\n            return CdvPurchase.Internal.owned({\n                product: typeof product === 'string' ? { id: product } : product,\n                verifiedReceipts: this.validator ? this.verifiedReceipts : undefined,\n                localReceipts: this.localReceipts,\n            });\n        }\n        /**\n         * Place an order for a given offer.\n         */\n        async order(offer, additionalData) {\n            this.log.info(`order(${offer.productId})`);\n            const adapter = this.adapters.findReady(offer.platform);\n            if (!adapter)\n                return CdvPurchase.storeError(CdvPurchase.ErrorCode.PAYMENT_NOT_ALLOWED, 'Adapter not found or not ready (' + offer.platform + ')');\n            const ret = await adapter.order(offer, additionalData || {});\n            if (ret && 'isError' in ret)\n                CdvPurchase.store.triggerError(ret);\n            return ret;\n        }\n        /**\n         * Request a payment.\n         *\n         * A payment is a custom amount to charge the user. Make sure the selected payment platform\n         * supports Payment Requests.\n         *\n         * @param paymentRequest Parameters of the payment request\n         * @param additionalData Additional parameters\n         */\n        requestPayment(paymentRequest, additionalData) {\n            var _a, _b, _c, _d, _e;\n            const adapter = this.adapters.findReady(paymentRequest.platform);\n            if (!adapter)\n                return CdvPurchase.PaymentRequestPromise.failed(CdvPurchase.ErrorCode.PAYMENT_NOT_ALLOWED, 'Adapter not found or not ready (' + paymentRequest.platform + ')');\n            // fill-in missing total amount as the sum of all items.\n            if (!paymentRequest.amountMicros) {\n                paymentRequest.amountMicros = 0;\n                for (const item of paymentRequest.items) {\n                    paymentRequest.amountMicros += (_b = (_a = item === null || item === void 0 ? void 0 : item.pricing) === null || _a === void 0 ? void 0 : _a.priceMicros) !== null && _b !== void 0 ? _b : 0;\n                }\n            }\n            // fill-in the missing if set in the items.\n            if (!paymentRequest.currency) {\n                for (const item of paymentRequest.items) {\n                    if ((_c = item === null || item === void 0 ? void 0 : item.pricing) === null || _c === void 0 ? void 0 : _c.currency) {\n                        paymentRequest.currency = item.pricing.currency;\n                    }\n                }\n            }\n            else {\n                for (const item of paymentRequest.items) {\n                    if ((_d = item === null || item === void 0 ? void 0 : item.pricing) === null || _d === void 0 ? void 0 : _d.currency) {\n                        if (paymentRequest.currency !== item.pricing.currency) {\n                            return CdvPurchase.PaymentRequestPromise.failed(CdvPurchase.ErrorCode.PAYMENT_INVALID, 'Currencies do not match');\n                        }\n                    }\n                    else if (item === null || item === void 0 ? void 0 : item.pricing) {\n                        item.pricing.currency = paymentRequest.currency;\n                    }\n                }\n            }\n            // fill-in item amount when there's just 1 item.\n            if (paymentRequest.items.length === 1) {\n                const item = paymentRequest.items[0];\n                if (item && !item.pricing) {\n                    item.pricing = {\n                        priceMicros: (_e = paymentRequest.amountMicros) !== null && _e !== void 0 ? _e : 0,\n                        currency: paymentRequest.currency,\n                    };\n                }\n            }\n            const promise = new CdvPurchase.PaymentRequestPromise();\n            adapter.requestPayment(paymentRequest, additionalData).then(result => {\n                promise.trigger(result);\n                if (result instanceof CdvPurchase.Transaction) {\n                    const onStateChange = (state) => {\n                        promise.trigger(result);\n                        if (result.state === CdvPurchase.TransactionState.FINISHED)\n                            monitor.stop();\n                    };\n                    const monitor = this.monitor(result, onStateChange);\n                }\n            });\n            return promise;\n        }\n        /**\n         * Returns true if a platform supports the requested functionality.\n         *\n         * @example\n         * store.checkSupport(Platform.APPLE_APPSTORE, 'requestPayment');\n         * // => false\n         */\n        checkSupport(platform, functionality) {\n            const adapter = this.adapters.find(platform);\n            if (!adapter)\n                return false; // the selected adapter hasn't been initialized\n            return adapter.checkSupport(functionality);\n        }\n        /**\n         * Verify a receipt or transacting with the receipt validation service.\n         *\n         * This will be called from the Receipt or Transaction objects using the API decorators.\n         */\n        async verify(receiptOrTransaction) {\n            this.log.info(`verify(${receiptOrTransaction.className})`);\n            this._validator.add(receiptOrTransaction);\n            // Run validation after 200ms, so if the same receipt is to be validated multiple times it will just create one call.\n            setTimeout(() => this._validator.run(), 200);\n        }\n        /**\n         * Finalize a transaction.\n         *\n         * This will be called from the Receipt, Transaction or VerifiedReceipt objects using the API decorators.\n         */\n        async finish(receipt) {\n            this.log.info(`finish(${receipt.className})`);\n            const transactions = receipt instanceof CdvPurchase.VerifiedReceipt\n                ? receipt.sourceReceipt.transactions\n                : receipt instanceof CdvPurchase.Receipt\n                    ? receipt.transactions\n                    : [receipt];\n            transactions.forEach(transaction => {\n                var _a;\n                const adapter = (_a = this.adapters.findReady(transaction.platform)) === null || _a === void 0 ? void 0 : _a.finish(transaction);\n            });\n        }\n        /**\n         * Replay the users transactions.\n         *\n         * This method exists to cover an Apple AppStore requirement.\n         */\n        async restorePurchases() {\n            for (const adapter of this.adapters.list) {\n                if (adapter.ready)\n                    await adapter.restorePurchases();\n            }\n            // store.triggerError(storeError(ErrorCode.UNKNOWN, 'restorePurchases() is not implemented yet'));\n        }\n        /**\n         * Open the subscription management interface for the selected platform.\n         *\n         * If platform is not specified, the first available platform will be used.\n         *\n         * @example\n         * const activeSubscription: Purchase = // ...\n         * store.manageSubscriptions(activeSubscription.platform);\n         */\n        async manageSubscriptions(platform) {\n            this.log.info('manageSubscriptions()');\n            const adapter = this.adapters.findReady(platform);\n            if (!adapter)\n                return CdvPurchase.storeError(CdvPurchase.ErrorCode.SETUP, \"Found no adapter ready to handle 'manageSubscription'\");\n            return adapter.manageSubscriptions();\n        }\n        /**\n         * Opens the billing methods page on AppStore, Play, Microsoft, ...\n         *\n         * From this page, the user can update their payment methods.\n         *\n         * If platform is not specified, the first available platform will be used.\n         *\n         * @example\n         * if (purchase.isBillingRetryPeriod)\n         *     store.manageBilling(purchase.platform);\n         */\n        async manageBilling(platform) {\n            this.log.info('manageBilling()');\n            const adapter = this.adapters.findReady(platform);\n            if (!adapter)\n                return CdvPurchase.storeError(CdvPurchase.ErrorCode.SETUP, \"Found no adapter ready to handle 'manageBilling'\");\n            return adapter.manageBilling();\n        }\n        /**\n         * The default payment platform to use depending on the OS.\n         *\n         * - on iOS: `APPLE_APPSTORE`\n         * - on Android: `GOOGLE_PLAY`\n         */\n        defaultPlatform() {\n            switch (window.cordova.platformId) {\n                case 'android': return CdvPurchase.Platform.GOOGLE_PLAY;\n                case 'ios': return CdvPurchase.Platform.APPLE_APPSTORE;\n                default: return CdvPurchase.Platform.TEST;\n            }\n        }\n        /**\n         * Register an error handler.\n         *\n         * @param error An error callback that takes the error as an argument\n         *\n         * @example\n         * store.error(function(error) {\n         *   console.error('CdvPurchase ERROR: ' + error.message);\n         * });\n         */\n        error(error) {\n            this.errorCallbacks.push(error);\n        }\n        /**\n         * Trigger an error event.\n         *\n         * @internal\n         */\n        triggerError(error) {\n            this.errorCallbacks.trigger(error);\n        }\n    }\n    CdvPurchase.Store = Store;\n})(CdvPurchase || (CdvPurchase = {}));\n// Create the CdvPurchase.store object at startup.\nsetTimeout(() => {\n    console.log('Create CdvPurchase...');\n    /*\n    if (window.CdvPurchase) {\n        Object.assign(window.CdvPurchase, CdvPurchase, { store: window.CdvPurchase.store });\n    }\n    else {\n        window.CdvPurchase = CdvPurchase;\n    }\n    if (!window.CdvPurchase.store) {\n        window.CdvPurchase.store = new CdvPurchase.Store();\n        // Let's maximize backward compatibility\n        Object.assign(window.CdvPurchase.store, CdvPurchase.LogLevel, CdvPurchase.ProductType, CdvPurchase.ErrorCode, CdvPurchase.Platform);\n    }\n    */\n    window.CdvPurchase = CdvPurchase;\n    window.CdvPurchase.store = new CdvPurchase.Store();\n    // Let's maximize backward compatibility\n    Object.assign(window.CdvPurchase.store, CdvPurchase.LogLevel, CdvPurchase.ProductType, CdvPurchase.ErrorCode, CdvPurchase.Platform);\n}, 0);\n// Ensure utility are included when compiling typescript.\n/// <reference path=\"utils/format-billing-cycle.ts\" />\n/// <reference path=\"store.ts\" />\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /** Types of In-App Products */\n    let ProductType;\n    (function (ProductType) {\n        /** Type: An consumable product, that can be purchased multiple time */\n        ProductType[\"CONSUMABLE\"] = \"consumable\";\n        /** Type: A non-consumable product, that can purchased only once and the user keeps forever */\n        ProductType[\"NON_CONSUMABLE\"] = \"non consumable\";\n        /** @deprecated use PAID_SUBSCRIPTION */\n        ProductType[\"FREE_SUBSCRIPTION\"] = \"free subscription\";\n        /** Type: An auto-renewable subscription */\n        ProductType[\"PAID_SUBSCRIPTION\"] = \"paid subscription\";\n        /** Type: An non-renewing subscription */\n        ProductType[\"NON_RENEWING_SUBSCRIPTION\"] = \"non renewing subscription\";\n        /** Type: The application bundle */\n        ProductType[\"APPLICATION\"] = \"application\";\n    })(ProductType = CdvPurchase.ProductType || (CdvPurchase.ProductType = {}));\n    /**\n     * Type of recurring payment\n     *\n     * - FINITE_RECURRING: Payment recurs for a fixed number of billing period set in `paymentPhase.cycles`.\n     * - INFINITE_RECURRING: Payment recurs for infinite billing periods unless cancelled.\n     * - NON_RECURRING: A one time charge that does not repeat.\n     */\n    let RecurrenceMode;\n    (function (RecurrenceMode) {\n        RecurrenceMode[\"NON_RECURRING\"] = \"NON_RECURRING\";\n        RecurrenceMode[\"FINITE_RECURRING\"] = \"FINITE_RECURRING\";\n        RecurrenceMode[\"INFINITE_RECURRING\"] = \"INFINITE_RECURRING\";\n    })(RecurrenceMode = CdvPurchase.RecurrenceMode || (CdvPurchase.RecurrenceMode = {}));\n    /** Mode of payment */\n    let PaymentMode;\n    (function (PaymentMode) {\n        /** Used for subscriptions, pay at the beginning of each billing period */\n        PaymentMode[\"PAY_AS_YOU_GO\"] = \"PayAsYouGo\";\n        /** Pay the whole amount up front */\n        PaymentMode[\"UP_FRONT\"] = \"UpFront\";\n        /** Nothing to be paid */\n        PaymentMode[\"FREE_TRIAL\"] = \"FreeTrial\";\n    })(PaymentMode = CdvPurchase.PaymentMode || (CdvPurchase.PaymentMode = {}));\n    /**\n     * Purchase platforms supported by the plugin\n     */\n    let Platform;\n    (function (Platform) {\n        /** Apple AppStore */\n        Platform[\"APPLE_APPSTORE\"] = \"ios-appstore\";\n        /** Google Play */\n        Platform[\"GOOGLE_PLAY\"] = \"android-playstore\";\n        /** Windows Store */\n        Platform[\"WINDOWS_STORE\"] = \"windows-store-transaction\";\n        /** Braintree */\n        Platform[\"BRAINTREE\"] = \"braintree\";\n        // /** Stripe */\n        // STRIPE = 'stripe',\n        /** Test platform */\n        Platform[\"TEST\"] = \"test\";\n    })(Platform = CdvPurchase.Platform || (CdvPurchase.Platform = {}));\n    /** Possible states of a product */\n    let TransactionState;\n    (function (TransactionState) {\n        // REQUESTED = 'requested',\n        TransactionState[\"INITIATED\"] = \"initiated\";\n        TransactionState[\"PENDING\"] = \"pending\";\n        TransactionState[\"APPROVED\"] = \"approved\";\n        TransactionState[\"CANCELLED\"] = \"cancelled\";\n        TransactionState[\"FINISHED\"] = \"finished\";\n        // OWNED = 'owned',\n        // EXPIRED = 'expired',\n        TransactionState[\"UNKNOWN_STATE\"] = \"\";\n    })(TransactionState = CdvPurchase.TransactionState || (CdvPurchase.TransactionState = {}));\n    /** Whether or not the user intends to let the subscription auto-renew. */\n    let RenewalIntent;\n    (function (RenewalIntent) {\n        /** The user intends to let the subscription expire without renewing. */\n        RenewalIntent[\"LAPSE\"] = \"Lapse\";\n        /** The user intends to renew the subscription. */\n        RenewalIntent[\"RENEW\"] = \"Renew\";\n    })(RenewalIntent = CdvPurchase.RenewalIntent || (CdvPurchase.RenewalIntent = {}));\n    /** Whether or not the user was notified or agreed to a price change */\n    let PriceConsentStatus;\n    (function (PriceConsentStatus) {\n        PriceConsentStatus[\"NOTIFIED\"] = \"Notified\";\n        PriceConsentStatus[\"AGREED\"] = \"Agreed\";\n    })(PriceConsentStatus = CdvPurchase.PriceConsentStatus || (CdvPurchase.PriceConsentStatus = {}));\n    /** Reason why a subscription has been canceled */\n    let CancelationReason;\n    (function (CancelationReason) {\n        /** Not canceled */\n        CancelationReason[\"NOT_CANCELED\"] = \"\";\n        /** Subscription canceled by the developer. */\n        CancelationReason[\"DEVELOPER\"] = \"Developer\";\n        /** Subscription canceled by the system for an unspecified reason. */\n        CancelationReason[\"SYSTEM\"] = \"System\";\n        /** Subscription upgraded or downgraded to a new subscription. */\n        CancelationReason[\"SYSTEM_REPLACED\"] = \"System.Replaced\";\n        /** Product not available for purchase at the time of renewal. */\n        CancelationReason[\"SYSTEM_PRODUCT_UNAVAILABLE\"] = \"System.ProductUnavailable\";\n        /** Billing error; for example customer’s payment information is no longer valid. */\n        CancelationReason[\"SYSTEM_BILLING_ERROR\"] = \"System.BillingError\";\n        /** Transaction is gone; It has been deleted. */\n        CancelationReason[\"SYSTEM_DELETED\"] = \"System.Deleted\";\n        /** Subscription canceled by the user for an unspecified reason. */\n        CancelationReason[\"CUSTOMER\"] = \"Customer\";\n        /** Customer canceled their transaction due to an actual or perceived issue within your app. */\n        CancelationReason[\"CUSTOMER_TECHNICAL_ISSUES\"] = \"Customer.TechnicalIssues\";\n        /** Customer did not agree to a recent price increase. See also priceConsentStatus. */\n        CancelationReason[\"CUSTOMER_PRICE_INCREASE\"] = \"Customer.PriceIncrease\";\n        /** Customer canceled for cost-related reasons. */\n        CancelationReason[\"CUSTOMER_COST\"] = \"Customer.Cost\";\n        /** Customer claimed to have found a better app. */\n        CancelationReason[\"CUSTOMER_FOUND_BETTER_APP\"] = \"Customer.FoundBetterApp\";\n        /** Customer did not feel he is using this service enough. */\n        CancelationReason[\"CUSTOMER_NOT_USEFUL_ENOUGH\"] = \"Customer.NotUsefulEnough\";\n        /** Subscription canceled for another reason; for example, if the customer made the purchase accidentally. */\n        CancelationReason[\"CUSTOMER_OTHER_REASON\"] = \"Customer.OtherReason\";\n        /** Subscription canceled for unknown reasons. */\n        CancelationReason[\"UNKNOWN\"] = \"Unknown\";\n    })(CancelationReason = CdvPurchase.CancelationReason || (CdvPurchase.CancelationReason = {}));\n})(CdvPurchase || (CdvPurchase = {}));\n/// <reference path=\"utils/non-enumerable.ts\" />\n/// <reference path=\"product.ts\" />\n/// <reference path=\"types.ts\" />\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /**\n     * One of the available offers to purchase a given product\n     */\n    class Offer {\n        /** @internal */\n        constructor(options, decorator) {\n            /** className, used to make sure we're passing an actual instance of the \"Offer\" class. */\n            this.className = 'Offer';\n            this.id = options.id;\n            this.pricingPhases = options.pricingPhases;\n            // Object.defineProperty(this, 'product', { enumerable: false, get: () => options.product });\n            Object.defineProperty(this, 'productId', { enumerable: true, get: () => options.product.id });\n            Object.defineProperty(this, 'productType', { enumerable: true, get: () => options.product.type });\n            Object.defineProperty(this, 'productGroup', { enumerable: true, get: () => options.product.group });\n            Object.defineProperty(this, 'platform', { enumerable: true, get: () => options.product.platform });\n            Object.defineProperty(this, 'order', { enumerable: false, get: () => (additionalData) => decorator.order(this, additionalData) });\n            Object.defineProperty(this, 'canPurchase', { enumerable: false, get: () => decorator.canPurchase(this) });\n        }\n        /** Identifier of the product related to this offer */\n        get productId() { return ''; }\n        /** Type of the product related to this offer */\n        get productType() { return CdvPurchase.ProductType.APPLICATION; }\n        /** Group the product related to this offer is member of */\n        get productGroup() { return undefined; }\n        /** Platform this offer is available from */\n        get platform() { return CdvPurchase.Platform.TEST; }\n        /**\n         * Initiate a purchase of this offer.\n         *\n         * @example\n         * store.get(\"my-product\").getOffer().order();\n         */\n        async order(additionalData) {\n            // Pseudo implementation to make typescript happy.\n            // see Object.defineProperty in the constructor for the actual implementation.\n            return;\n        }\n        /**\n         * true if the offer can be purchased.\n         */\n        get canPurchase() {\n            // Pseudo implementation to make typescript happy.\n            // see Object.defineProperty in the constructor for the actual implementation.\n            return false;\n        }\n    }\n    CdvPurchase.Offer = Offer;\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    class PaymentRequestPromise {\n        constructor() {\n            this.failedCallbacks = new CdvPurchase.Internal.PromiseLike();\n            this.initiatedCallbacks = new CdvPurchase.Internal.PromiseLike();\n            this.approvedCallbacks = new CdvPurchase.Internal.PromiseLike();\n            this.finishedCallbacks = new CdvPurchase.Internal.PromiseLike();\n            this.cancelledCallback = new CdvPurchase.Internal.PromiseLike();\n        }\n        failed(callback) {\n            this.failedCallbacks.push(callback);\n            return this;\n        }\n        initiated(callback) {\n            this.initiatedCallbacks.push(callback);\n            return this;\n        }\n        approved(callback) {\n            this.approvedCallbacks.push(callback);\n            return this;\n        }\n        finished(callback) {\n            this.finishedCallbacks.push(callback);\n            return this;\n        }\n        cancelled(callback) {\n            this.cancelledCallback.push(callback);\n            return this;\n        }\n        /** @internal */\n        trigger(argument) {\n            if (!argument) {\n                this.cancelledCallback.resolve();\n            }\n            else if ('isError' in argument) {\n                this.failedCallbacks.resolve(argument);\n            }\n            else {\n                switch (argument.state) {\n                    case CdvPurchase.TransactionState.INITIATED:\n                        this.initiatedCallbacks.resolve(argument);\n                        break;\n                    case CdvPurchase.TransactionState.APPROVED:\n                        this.approvedCallbacks.resolve(argument);\n                        break;\n                    case CdvPurchase.TransactionState.FINISHED:\n                        this.finishedCallbacks.resolve(argument);\n                        break;\n                }\n            }\n            return this;\n        }\n        /**\n         * Return a failed promise.\n         *\n         * @internal\n         */\n        static failed(code, message) {\n            return new PaymentRequestPromise().trigger(CdvPurchase.storeError(code, message));\n        }\n        /**\n         * Return a failed promise.\n         *\n         * @internal\n         */\n        static cancelled() {\n            return new PaymentRequestPromise().trigger();\n        }\n        /**\n         * Return an initiated transaction.\n         *\n         * @internal\n         */\n        static initiated(transaction) {\n            return new PaymentRequestPromise().trigger(transaction);\n        }\n    }\n    CdvPurchase.PaymentRequestPromise = PaymentRequestPromise;\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    class Receipt {\n        /** @internal */\n        constructor(platform, decorator) {\n            /** @internal */\n            this.className = 'Receipt';\n            /** List of transactions contained in the receipt, ordered by date ascending. */\n            this.transactions = [];\n            this.platform = platform;\n            Object.defineProperty(this, 'verify', { 'enumerable': false, get() { return () => decorator.verify(this); } });\n            Object.defineProperty(this, 'finish', { 'enumerable': false, get() { return () => decorator.finish(this); } });\n        }\n        /** Verify a receipt */\n        async verify() { }\n        /** Finish all transactions in a receipt */\n        async finish() { }\n        /** Return true if the receipt contains the given transaction */\n        hasTransaction(value) {\n            return !!this.transactions.find(t => t === value);\n        }\n        /** Return the last transaction in this receipt */\n        lastTransaction() {\n            return this.transactions[this.transactions.length - 1];\n        }\n    }\n    CdvPurchase.Receipt = Receipt;\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /**\n     * Transaction as reported by the device\n     *\n     * @see {@link Receipt}\n     * @see {@link store.localTransactions}\n     */\n    class Transaction {\n        /** @internal */\n        constructor(platform, parentReceipt, decorator) {\n            /** @internal */\n            this.className = 'Transaction';\n            /** Transaction identifier. */\n            this.transactionId = '';\n            /** State this transaction is in */\n            this.state = CdvPurchase.TransactionState.UNKNOWN_STATE;\n            /** Purchased products */\n            this.products = [];\n            this.platform = platform;\n            Object.defineProperty(this, 'finish', { 'enumerable': false, get() { return () => decorator.finish(this); } });\n            Object.defineProperty(this, 'verify', { 'enumerable': false, get() { return () => decorator.verify(this); } });\n            Object.defineProperty(this, 'parentReceipt', { 'enumerable': false, get() { return parentReceipt; } });\n        }\n        /**\n         * Finish a transaction.\n         *\n         * When the application has delivered the product, it should finalizes the order.\n         * Only after that, money will be transferred to your account.\n         * This method ensures that no customers is charged for a product that couldn't be delivered.\n         *\n         * @example\n         * store.when()\n         *   .approved(transaction => transaction.verify())\n         *   .verified(receipt => receipt.finish())\n         */\n        async finish() { } // actual implementation in the constructor\n        /**\n         * Verify a transaction.\n         *\n         * This will trigger a call to the receipt validation service for the attached receipt.\n         * Once the receipt has been verified, you can finish the transaction.\n         *\n         * @example\n         * store.when()\n         *   .approved(transaction => transaction.verify())\n         *   .verified(receipt => receipt.finish())\n         */\n        async verify() { } // actual implementation in the constructor\n        /**\n         * Return the receipt this transaction is part of.\n         */\n        get parentReceipt() { return {}; } // actual implementation in the constructor\n    }\n    CdvPurchase.Transaction = Transaction;\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Internal;\n    (function (Internal) {\n        /**\n         * Monitor the updates for products and receipt.\n         *\n         * Call the callbacks when appropriate.\n         */\n        class StoreAdapterListener {\n            constructor(delegate, log) {\n                /** The list of supported platforms, needs to be set by \"store.initialize\" */\n                this.supportedPlatforms = [];\n                /** Those platforms have reported that their receipts are ready */\n                this.platformWithReceiptsReady = [];\n                this.lastTransactionState = {};\n                this.delegate = delegate;\n                this.log = log.child('AdapterListener');\n            }\n            static makeTransactionToken(transaction) {\n                return transaction.platform + '|' + transaction.transactionId;\n            }\n            setSupportedPlatforms(platforms) {\n                this.log.debug('setSupportedPlatforms: ' + platforms.join(','));\n                this.supportedPlatforms = platforms;\n                if (this.supportedPlatforms.length === this.platformWithReceiptsReady.length) {\n                    this.delegate.receiptsReadyCallbacks.trigger();\n                }\n            }\n            receiptsReady(platform) {\n                if (this.supportedPlatforms.length > 0 && this.platformWithReceiptsReady.length === this.supportedPlatforms.length) {\n                    return;\n                }\n                if (this.platformWithReceiptsReady.indexOf(platform) < 0) {\n                    this.log.debug('receiptsReady: ' + platform);\n                    this.platformWithReceiptsReady.push(platform);\n                    if (this.platformWithReceiptsReady.length === this.supportedPlatforms.length) {\n                        this.log.debug('calling receiptsReady()');\n                        this.delegate.receiptsReadyCallbacks.trigger();\n                    }\n                }\n            }\n            productsUpdated(platform, products) {\n                products.forEach(product => this.delegate.updatedCallbacks.trigger(product));\n            }\n            receiptsUpdated(platform, receipts) {\n                receipts.forEach(receipt => {\n                    this.delegate.updatedReceiptCallbacks.trigger(receipt);\n                    receipt.transactions.forEach(transaction => {\n                        const transactionToken = StoreAdapterListener.makeTransactionToken(transaction);\n                        const lastState = this.lastTransactionState[transactionToken];\n                        if (transaction.state === CdvPurchase.TransactionState.APPROVED) {\n                            this.delegate.approvedCallbacks.trigger(transaction);\n                            // better retrigger (so validation is rerun on potential update)\n                        }\n                        else if (lastState !== transaction.state) {\n                            if (transaction.state === CdvPurchase.TransactionState.FINISHED) {\n                                this.delegate.finishedCallbacks.trigger(transaction);\n                            }\n                            else if (transaction.state === CdvPurchase.TransactionState.PENDING) {\n                                this.delegate.pendingCallbacks.trigger(transaction);\n                            }\n                        }\n                        this.lastTransactionState[transactionToken] = transaction.state;\n                    });\n                });\n            }\n        }\n        Internal.StoreAdapterListener = StoreAdapterListener;\n    })(Internal = CdvPurchase.Internal || (CdvPurchase.Internal = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Internal;\n    (function (Internal) {\n        /** Analyze the list of local receipts. */\n        class LocalReceipts {\n            /**\n             * Find the latest transaction for a given product, from those reported by the device.\n             */\n            static find(localReceipts, product) {\n                var _a, _b;\n                if (!product)\n                    return undefined;\n                let found;\n                for (const receipt of localReceipts) {\n                    if (product.platform && receipt.platform !== product.platform)\n                        continue;\n                    for (const transaction of receipt.transactions) {\n                        for (const trProducts of transaction.products) {\n                            if (trProducts.id === product.id) {\n                                // No matching transaction has been found or the tested one is newer than the already found one?\n                                // Then we chose the tested one.\n                                if (!found || ((_a = transaction.purchaseDate) !== null && _a !== void 0 ? _a : 0) < ((_b = found.purchaseDate) !== null && _b !== void 0 ? _b : 1))\n                                    found = transaction;\n                            }\n                        }\n                    }\n                }\n                return found;\n            }\n            /** Return true if a product is owned */\n            static isOwned(localReceipts, product) {\n                if (!product)\n                    return false;\n                const transaction = LocalReceipts.find(localReceipts, product);\n                if (!transaction)\n                    return false;\n                if (transaction.isConsumed)\n                    return false;\n                if (transaction.isPending)\n                    return false;\n                if (transaction.expirationDate)\n                    return transaction.expirationDate.getTime() > +new Date();\n                return true;\n            }\n            static canPurchase(localReceipts, product) {\n                if (!product)\n                    return false;\n                const transaction = LocalReceipts.find(localReceipts, product);\n                if (!transaction)\n                    return true;\n                if (transaction.isConsumed)\n                    return true;\n                if (transaction.expirationDate)\n                    return transaction.expirationDate.getTime() <= +new Date();\n                return true;\n            }\n        }\n        Internal.LocalReceipts = LocalReceipts;\n    })(Internal = CdvPurchase.Internal || (CdvPurchase.Internal = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Internal;\n    (function (Internal) {\n        /**\n         * Return true if a product is owned.\n         *\n         * Will use the list of verified receipts if provided.\n         * Will only use the list of local receipts if verifiedReceipt is undefined.\n         */\n        function owned(options) {\n            if (options.verifiedReceipts !== undefined) {\n                return Internal.VerifiedReceipts.isOwned(options.verifiedReceipts, options.product);\n            }\n            else if (options.localReceipts !== undefined) {\n                return Internal.LocalReceipts.isOwned(options.localReceipts, options.product);\n            }\n            else {\n                return false;\n            }\n        }\n        Internal.owned = owned;\n    })(Internal = CdvPurchase.Internal || (CdvPurchase.Internal = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Internal;\n    (function (Internal) {\n        class PromiseLike {\n            constructor() {\n                this.resolved = false;\n                /** List of registered callbacks */\n                this.callbacks = [];\n            }\n            /** Add a callback to the list */\n            push(callback) {\n                if (this.resolved)\n                    setTimeout(callback, 0, this.resolvedArgument);\n                else\n                    this.callbacks.push(callback);\n            }\n            /** Call all registered callbacks with the given value */\n            resolve(value) {\n                if (this.resolved)\n                    return; // do not resolve twice\n                this.resolved = true;\n                this.resolvedArgument = value;\n                this.callbacks.forEach(cb => setTimeout(cb, 0, value));\n                this.callbacks = [];\n            }\n        }\n        Internal.PromiseLike = PromiseLike;\n    })(Internal = CdvPurchase.Internal || (CdvPurchase.Internal = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Internal;\n    (function (Internal) {\n        class ReceiptsMonitor {\n            constructor(controller) {\n                this.hasCalledReceiptsVerified = false;\n                this.controller = controller;\n                this.log = controller.log.child('ReceiptsMonitor');\n            }\n            callReceiptsVerified() {\n                if (this.hasCalledReceiptsVerified)\n                    return;\n                this.hasCalledReceiptsVerified = true;\n                this.log.info('receiptsVerified()');\n                // ensure those 2 events are called in order.\n                this.controller.when().receiptsReady(() => {\n                    setTimeout(() => {\n                        this.controller.receiptsVerified();\n                    }, 0);\n                });\n            }\n            launch() {\n                const check = () => {\n                    this.log.debug(`check(${this.controller.numValidationResponses()}/${this.controller.numValidationRequests()})`);\n                    if (this.controller.numValidationRequests() === this.controller.numValidationResponses()) {\n                        if (this.intervalChecker !== undefined) {\n                            clearInterval(this.intervalChecker);\n                            this.intervalChecker = undefined;\n                        }\n                        this.controller.off(check);\n                        this.callReceiptsVerified();\n                    }\n                };\n                this.controller.when()\n                    .verified(check)\n                    .unverified(check)\n                    .receiptsReady(() => {\n                    this.log.debug('receiptsReady...');\n                    if (!this.controller.hasLocalReceipts() || !this.controller.hasValidator()) {\n                        setTimeout(() => {\n                            check();\n                        }, 0);\n                    }\n                    // check every 10s, to handle cases where neither \"verified\" nor \"unverified\" have been triggered.\n                    this.intervalChecker = setInterval(() => {\n                        this.log.debug('keep checking every 10s...');\n                        check();\n                    }, 10000);\n                });\n            }\n        }\n        Internal.ReceiptsMonitor = ReceiptsMonitor;\n    })(Internal = CdvPurchase.Internal || (CdvPurchase.Internal = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Internal;\n    (function (Internal) {\n        class RegisteredProducts {\n            constructor() {\n                this.list = [];\n            }\n            find(platform, id) {\n                return this.list.find(rp => rp.platform === platform && rp.id === id);\n            }\n            add(product) {\n                const products = Array.isArray(product) ? product : [product];\n                const newProducts = products.filter(p => !this.find(p.platform, p.id));\n                for (const p of newProducts)\n                    this.list.push(p);\n            }\n            byPlatform() {\n                const byPlatform = {};\n                this.list.forEach(p => {\n                    byPlatform[p.platform] = (byPlatform[p.platform] || []).concat(p);\n                });\n                return Object.keys(byPlatform).map(platform => ({\n                    platform: platform,\n                    products: byPlatform[platform]\n                }));\n            }\n        }\n        Internal.RegisteredProducts = RegisteredProducts;\n    })(Internal = CdvPurchase.Internal || (CdvPurchase.Internal = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Internal;\n    (function (Internal) {\n        /**\n         * Retry failed requests\n         *\n         * When setup and/or load failed, the plugin will retry over and over till it can connect\n         * to the store.\n         *\n         * However, to be nice with the battery, it'll double the retry timeout each time.\n         *\n         * Special case, when the device goes online, it'll trigger all retry callback in the queue.\n         */\n        class Retry {\n            constructor(minTimeout = 5000, maxTimeout = 120000) {\n                this.maxTimeout = 120000;\n                this.minTimeout = 5000;\n                this.retryTimeout = 5000;\n                this.retries = [];\n                this.minTimeout = minTimeout;\n                this.maxTimeout = maxTimeout;\n                this.retryTimeout = minTimeout;\n                document.addEventListener(\"online\", () => {\n                    const a = this.retries;\n                    this.retries = [];\n                    this.retryTimeout = this.minTimeout;\n                    for (var i = 0; i < a.length; ++i) {\n                        clearTimeout(a[i].tid);\n                        a[i].fn.call(this);\n                    }\n                }, false);\n            }\n            retry(fn) {\n                var tid = setTimeout(() => {\n                    this.retries = this.retries.filter(function (o) {\n                        return tid !== o.tid;\n                    });\n                    fn();\n                }, this.retryTimeout);\n                this.retries.push({ tid: tid, fn: fn });\n                this.retryTimeout *= 2;\n                // Max out the waiting time to 2 minutes.\n                if (this.retryTimeout > this.maxTimeout)\n                    this.retryTimeout = this.maxTimeout;\n            }\n        }\n        Internal.Retry = Retry;\n    })(Internal = CdvPurchase.Internal || (CdvPurchase.Internal = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /** @internal */\n    let Internal;\n    (function (Internal) {\n        /**\n         * Helper class to monitor changes in transaction states.\n         *\n         * @example\n         * const monitor = monitors.start(transaction, (state) => {\n         *   // ... transaction state has changed\n         * });\n         * monitor.stop();\n         */\n        class TransactionStateMonitors {\n            constructor(when) {\n                this.monitors = [];\n                when\n                    .approved(transaction => this.callOnChange(transaction))\n                    .finished(transaction => this.callOnChange(transaction));\n            }\n            findMonitors(transaction) {\n                return this.monitors.filter(monitor => monitor.transaction.platform === transaction.platform\n                    && monitor.transaction.transactionId === transaction.transactionId);\n            }\n            callOnChange(transaction) {\n                this.findMonitors(transaction).forEach(monitor => {\n                    if (monitor.lastChange !== transaction.state) {\n                        monitor.lastChange = transaction.state;\n                        monitor.onChange(transaction.state);\n                    }\n                });\n            }\n            /**\n             * Start monitoring the provided transaction for state changes.\n             */\n            start(transaction, onChange) {\n                const monitorId = CdvPurchase.Utils.uuidv4();\n                this.monitors.push({ monitorId, transaction, onChange, lastChange: transaction.state });\n                setTimeout(onChange, 0, transaction.state);\n                return {\n                    transaction,\n                    stop: () => this.stop(monitorId),\n                };\n            }\n            stop(monitorId) {\n                this.monitors = this.monitors.filter(m => m.monitorId !== monitorId);\n            }\n        }\n        Internal.TransactionStateMonitors = TransactionStateMonitors;\n    })(Internal = CdvPurchase.Internal || (CdvPurchase.Internal = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Internal;\n    (function (Internal) {\n        /** Analyze the list of local receipts. */\n        class VerifiedReceipts {\n            /**\n             * Find the last verified purchase for a given product, from those verified by the receipt validator.\n             */\n            static find(verifiedReceipts, product) {\n                var _a, _b;\n                if (!product)\n                    return undefined;\n                let found;\n                for (const receipt of verifiedReceipts) {\n                    if (product.platform && receipt.platform !== product.platform)\n                        continue;\n                    for (const purchase of receipt.collection) {\n                        if (purchase.id === product.id) {\n                            if (((_a = found === null || found === void 0 ? void 0 : found.purchaseDate) !== null && _a !== void 0 ? _a : 0) < ((_b = purchase.purchaseDate) !== null && _b !== void 0 ? _b : 1))\n                                found = purchase;\n                        }\n                    }\n                }\n                return found;\n            }\n            /** Return true if a product is owned, based on the content of the list of verified receipts  */\n            static isOwned(verifiedReceipts, product) {\n                if (!product)\n                    return false;\n                const purchase = VerifiedReceipts.find(verifiedReceipts, product);\n                if (!purchase)\n                    return false;\n                if (purchase === null || purchase === void 0 ? void 0 : purchase.isExpired)\n                    return false;\n                if (purchase === null || purchase === void 0 ? void 0 : purchase.expiryDate) {\n                    return (purchase.expiryDate > +new Date());\n                }\n                return true;\n            }\n            static getVerifiedPurchases(verifiedReceipts) {\n                var _a, _b, _c, _d;\n                const indexed = {};\n                for (const receipt of verifiedReceipts) {\n                    for (const purchase of receipt.collection) {\n                        const key = receipt.platform + ':' + purchase.id;\n                        const existing = indexed[key];\n                        if (!existing || (existing && ((_b = (_a = existing.lastRenewalDate) !== null && _a !== void 0 ? _a : existing.purchaseDate) !== null && _b !== void 0 ? _b : 0) < ((_d = (_c = purchase.lastRenewalDate) !== null && _c !== void 0 ? _c : purchase.purchaseDate) !== null && _d !== void 0 ? _d : 0))) {\n                            indexed[key] = Object.assign(Object.assign({}, purchase), { platform: receipt.platform });\n                        }\n                    }\n                }\n                return Object.keys(indexed).map(key => indexed[key]);\n            }\n        }\n        Internal.VerifiedReceipts = VerifiedReceipts;\n    })(Internal = CdvPurchase.Internal || (CdvPurchase.Internal = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /**\n     * Define types for ApplePay\n     *\n     * At the moment Apple Pay is only supported as an extension for Braintree.\n     */\n    let ApplePay;\n    (function (ApplePay) {\n        /** The fields that describe a contact. */\n        let ContactField;\n        (function (ContactField) {\n            ContactField[\"Name\"] = \"name\";\n            ContactField[\"EmailAddress\"] = \"emailAddress\";\n            ContactField[\"PhoneNumber\"] = \"phoneNumber\";\n            ContactField[\"PostalAddress\"] = \"postalAddress\";\n            ContactField[\"PhoneticName\"] = \"phoneticName\";\n        })(ContactField = ApplePay.ContactField || (ApplePay.ContactField = {}));\n        /** A type that represents a payment method. */\n        let PaymentNetwork;\n        (function (PaymentNetwork) {\n            /** An American Express payment card. */\n            PaymentNetwork[\"Amex\"] = \"Amex\";\n            /** A QR code used for payment. */\n            PaymentNetwork[\"Barcode\"] = \"Barcode\";\n            /** A Cartes Bancaires payment card. */\n            PaymentNetwork[\"CartesBancaires\"] = \"CartesBancaires\";\n            /** A China Union Pay payment card. */\n            PaymentNetwork[\"ChinaUnionPay\"] = \"ChinaUnionPay\";\n            /** The Dankort payment card. */\n            PaymentNetwork[\"Dankort\"] = \"Dankort\";\n            /** A Discover payment card. */\n            PaymentNetwork[\"Discover\"] = \"Discover\";\n            /** The electronic funds transfer at point of sale (EFTPOS) payment method. */\n            PaymentNetwork[\"Eftpos\"] = \"Eftpos\";\n            /** An Electron debit card. */\n            PaymentNetwork[\"Electron\"] = \"Electron\";\n            /** The Elo payment card. */\n            PaymentNetwork[\"Elo\"] = \"Elo\";\n            /** A Girocard payment method. */\n            PaymentNetwork[\"Girocard\"] = \"Girocard\";\n            /** An iD payment card. */\n            PaymentNetwork[\"IDCredit\"] = \"IDCredit\";\n            /** The Interac payment method. */\n            PaymentNetwork[\"Interac\"] = \"Interac\";\n            /** A JCB payment card. */\n            PaymentNetwork[\"JCB\"] = \"JCB\";\n            /** A mada payment card. */\n            PaymentNetwork[\"Mada\"] = \"Mada\";\n            /** A Maestro payment card. */\n            PaymentNetwork[\"Maestro\"] = \"Maestro\";\n            /** A MasterCard payment card. */\n            PaymentNetwork[\"MasterCard\"] = \"MasterCard\";\n            /** A Mir payment card. */\n            PaymentNetwork[\"Mir\"] = \"Mir\";\n            /** A Nanaco payment card. */\n            PaymentNetwork[\"Nanaco\"] = \"Nanaco\";\n            /** Store credit and debit cards. */\n            PaymentNetwork[\"PrivateLabel\"] = \"PrivateLabel\";\n            /** A QUICPay payment card. */\n            PaymentNetwork[\"QuicPay\"] = \"QuicPay\";\n            /** A Suica payment card. */\n            PaymentNetwork[\"Suica\"] = \"Suica\";\n            /** A Visa payment card. */\n            PaymentNetwork[\"Visa\"] = \"Visa\";\n            /** A Visa V Pay payment card. */\n            PaymentNetwork[\"VPay\"] = \"VPay\";\n            /** A WAON payment card. */\n            PaymentNetwork[\"Waon\"] = \"Waon\";\n        })(PaymentNetwork = ApplePay.PaymentNetwork || (ApplePay.PaymentNetwork = {}));\n        /** Capabilities for processing payment. */\n        let MerchantCapability;\n        (function (MerchantCapability) {\n            /** Support for the 3-D Secure protocol. */\n            MerchantCapability[\"ThreeDS\"] = \"3DS\";\n            /** Support for the EMV protocol. */\n            MerchantCapability[\"EMV\"] = \"EMV\";\n            /** Support for credit cards. */\n            MerchantCapability[\"Credit\"] = \"Credit\";\n            /** Support for debit cards. */\n            MerchantCapability[\"Debit\"] = \"Debit\";\n        })(MerchantCapability = ApplePay.MerchantCapability || (ApplePay.MerchantCapability = {}));\n    })(ApplePay = CdvPurchase.ApplePay || (CdvPurchase.ApplePay = {}));\n})(CdvPurchase || (CdvPurchase = {}));\n/// <reference path=\"../../types.ts\" />\n/// <reference path=\"../../product.ts\" />\n/// <reference path=\"../../receipt.ts\" />\n/// <reference path=\"../../offer.ts\" />\n/// <reference path=\"../../transaction.ts\" />\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /**\n     * Apple AppStore adapter using StoreKit version 1\n     */\n    let AppleAppStore;\n    (function (AppleAppStore) {\n        /**\n         * In the first stages of a purchase, the transaction doesn't have an identifier.\n         *\n         * In the meantime, we generate a virtual transaction identifier.\n         */\n        function virtualTransactionId(productId) {\n            return `virtual.${productId}`;\n        }\n        /**\n         * Adapter for Apple AppStore using StoreKit version 1\n         */\n        class Adapter {\n            constructor(context, options) {\n                var _a, _b;\n                this.id = CdvPurchase.Platform.APPLE_APPSTORE;\n                this.name = 'AppStore';\n                this.ready = false;\n                this._canMakePayments = false;\n                /**\n                 * Set to true to force a full refresh of the receipt when preparing a receipt validation call.\n                 *\n                 * This is typically done when placing an order and restoring purchases.\n                 */\n                this.forceReceiptReload = false;\n                /** List of products loaded from AppStore */\n                this._products = [];\n                this.validProducts = {};\n                this._paymentMonitor = () => { };\n                /** True iff the appStoreReceipt is already being initialized */\n                this._appStoreReceiptLoading = false;\n                /** List of functions waiting for the appStoreReceipt to be initialized */\n                this._appStoreReceiptCallbacks = [];\n                this.context = context;\n                this.bridge = new AppleAppStore.Bridge.Bridge();\n                this.log = context.log.child('AppleAppStore');\n                this.discountEligibilityDeterminer = options.discountEligibilityDeterminer;\n                this.needAppReceipt = (_a = options.needAppReceipt) !== null && _a !== void 0 ? _a : true;\n                this.autoFinish = (_b = options.autoFinish) !== null && _b !== void 0 ? _b : false;\n                this.pseudoReceipt = new CdvPurchase.Receipt(CdvPurchase.Platform.APPLE_APPSTORE, this.context.apiDecorators);\n                this.receiptsUpdated = CdvPurchase.Utils.debounce(() => {\n                    this._receiptsUpdated();\n                }, 300);\n            }\n            get products() { return this._products; }\n            /** Find a given product from ID */\n            getProduct(id) { return this._products.find(p => p.id === id); }\n            get receipts() {\n                return (this._receipt ? [this._receipt] : [])\n                    .concat(this.pseudoReceipt ? this.pseudoReceipt : []);\n            }\n            addValidProducts(registerProducts, validProducts) {\n                validProducts.forEach(vp => {\n                    const rp = registerProducts.find(p => p.id === vp.id);\n                    if (!rp)\n                        return;\n                    this.validProducts[vp.id] = Object.assign(Object.assign({}, vp), rp);\n                });\n            }\n            /** Returns true on iOS, the only platform supported by this adapter */\n            get isSupported() {\n                return window.cordova.platformId === 'ios';\n            }\n            upsertTransactionInProgress(productId, state) {\n                const transactionId = virtualTransactionId(productId);\n                return new Promise(resolve => {\n                    const existing = this.pseudoReceipt.transactions.find(t => t.transactionId === transactionId);\n                    if (existing) {\n                        existing.state = state;\n                        existing.refresh(productId);\n                        resolve(existing);\n                    }\n                    else {\n                        const tr = new AppleAppStore.SKTransaction(CdvPurchase.Platform.APPLE_APPSTORE, this.pseudoReceipt, this.context.apiDecorators);\n                        tr.state = state;\n                        tr.transactionId = transactionId;\n                        tr.refresh(productId);\n                        this.pseudoReceipt.transactions.push(tr);\n                        resolve(tr);\n                    }\n                });\n            }\n            removeTransactionInProgress(productId) {\n                const transactionId = virtualTransactionId(productId);\n                this.pseudoReceipt.transactions = this.pseudoReceipt.transactions.filter(t => t.transactionId !== transactionId);\n            }\n            async upsertTransaction(productId, transactionId, state) {\n                return new Promise(resolve => {\n                    this.initializeAppReceipt(() => {\n                        var _a;\n                        if (!this._receipt) {\n                            // this should not happen\n                            this.log.warn('Failed to load the application receipt, cannot proceed with handling the purchase');\n                            return;\n                        }\n                        const existing = (_a = this._receipt) === null || _a === void 0 ? void 0 : _a.transactions.find(t => t.transactionId === transactionId);\n                        if (existing) {\n                            existing.state = state;\n                            existing.refresh(productId);\n                            resolve(existing);\n                        }\n                        else {\n                            const tr = new AppleAppStore.SKTransaction(CdvPurchase.Platform.APPLE_APPSTORE, this._receipt, this.context.apiDecorators);\n                            tr.state = state;\n                            tr.transactionId = transactionId;\n                            tr.refresh(productId);\n                            this._receipt.transactions.push(tr);\n                            resolve(tr);\n                        }\n                    });\n                });\n            }\n            removeTransaction(transactionId) {\n                if (this._receipt) {\n                    this._receipt.transactions = this._receipt.transactions.filter(t => t.transactionId !== transactionId);\n                }\n            }\n            /** Notify the store that the receipts have been updated */\n            _receiptsUpdated() {\n                if (this._receipt) {\n                    this.context.listener.receiptsUpdated(CdvPurchase.Platform.APPLE_APPSTORE, [this._receipt, this.pseudoReceipt]);\n                    this.context.listener.receiptsReady(CdvPurchase.Platform.APPLE_APPSTORE);\n                }\n                else {\n                    this.context.listener.receiptsUpdated(CdvPurchase.Platform.APPLE_APPSTORE, [this.pseudoReceipt]);\n                }\n            }\n            setPaymentMonitor(fn) {\n                this._paymentMonitor = fn;\n            }\n            callPaymentMonitor(status, code, message) {\n                this._paymentMonitor(status);\n            }\n            initialize() {\n                return new Promise(resolve => {\n                    this.log.info('bridge.init');\n                    const bridgeLogger = this.log.child('Bridge');\n                    this.bridge.init({\n                        autoFinish: this.autoFinish,\n                        debug: this.context.verbosity === CdvPurchase.LogLevel.DEBUG,\n                        log: msg => bridgeLogger.debug(msg),\n                        error: (code, message, options) => {\n                            this.log.error('ERROR: ' + code + ' - ' + message);\n                            if (code === CdvPurchase.ErrorCode.PAYMENT_CANCELLED) {\n                                // When the user closes the payment sheet, this generates a\n                                // PAYMENT_CANCELLED error that isn't an error anymore since version 13\n                                // of the plugin.\n                                this.callPaymentMonitor('cancelled', CdvPurchase.ErrorCode.PAYMENT_CANCELLED, message);\n                                return;\n                            }\n                            else {\n                                this.context.error(CdvPurchase.storeError(code, message));\n                            }\n                        },\n                        ready: () => {\n                            this.log.info('ready');\n                        },\n                        purchased: async (transactionIdentifier, productId, originalTransactionIdentifier, transactionDate, discountId) => {\n                            this.log.info('purchase: id:' + transactionIdentifier + ' product:' + productId + ' originalTransaction:' + originalTransactionIdentifier + ' - date:' + transactionDate + ' - discount:' + discountId);\n                            // we can add the transaction to the receipt here\n                            const transaction = await this.upsertTransaction(productId, transactionIdentifier, CdvPurchase.TransactionState.APPROVED);\n                            transaction.refresh(productId, originalTransactionIdentifier, transactionDate, discountId);\n                            this.removeTransactionInProgress(productId);\n                            this.receiptsUpdated();\n                            this.callPaymentMonitor('purchased');\n                        },\n                        purchaseEnqueued: async (productId, quantity) => {\n                            this.log.info('purchaseEnqueued: ' + productId + ' - ' + quantity);\n                            // let create a temporary transaction\n                            await this.upsertTransactionInProgress(productId, CdvPurchase.TransactionState.INITIATED);\n                            this.context.listener.receiptsUpdated(CdvPurchase.Platform.APPLE_APPSTORE, [this.pseudoReceipt]);\n                        },\n                        purchaseFailed: (productId, code, message) => {\n                            this.log.info('purchaseFailed: ' + productId + ' - ' + code + ' - ' + message);\n                            this.removeTransactionInProgress(productId);\n                            this.context.listener.receiptsUpdated(CdvPurchase.Platform.APPLE_APPSTORE, [this.pseudoReceipt]);\n                            this.callPaymentMonitor('failed', code, message);\n                        },\n                        purchasing: async (productId) => {\n                            // purchase has been requested, but there's no transactionIdentifier yet.\n                            // we can create a dummy transaction\n                            this.log.info('purchasing: ' + productId);\n                            await this.upsertTransactionInProgress(productId, CdvPurchase.TransactionState.INITIATED);\n                            // In order to prevent a receipt validation attempt here\n                            // (which might happen if it hasn't been possible earlier)\n                            // We should add \"purchasing\" transactions into a second, pseudo receipt.\n                            this.context.listener.receiptsUpdated(CdvPurchase.Platform.APPLE_APPSTORE, [this.pseudoReceipt]);\n                        },\n                        deferred: async (productId) => {\n                            this.log.info('deferred: ' + productId);\n                            await this.upsertTransactionInProgress(productId, CdvPurchase.TransactionState.PENDING);\n                            this.context.listener.receiptsUpdated(CdvPurchase.Platform.APPLE_APPSTORE, [this.pseudoReceipt]);\n                            this.callPaymentMonitor('deferred');\n                        },\n                        finished: async (transactionIdentifier, productId) => {\n                            this.log.info('finish: ' + transactionIdentifier + ' - ' + productId);\n                            this.removeTransactionInProgress(productId);\n                            await this.upsertTransaction(productId, transactionIdentifier, CdvPurchase.TransactionState.FINISHED);\n                            this.receiptsUpdated();\n                        },\n                        restored: async (transactionIdentifier, productId) => {\n                            this.log.info('restore: ' + transactionIdentifier + ' - ' + productId);\n                            await this.upsertTransaction(productId, transactionIdentifier, CdvPurchase.TransactionState.APPROVED);\n                            this.receiptsUpdated();\n                        },\n                        receiptsRefreshed: (receipt) => {\n                            this.log.info('receiptsRefreshed');\n                            if (this._receipt)\n                                this._receipt.refresh(receipt, this.needAppReceipt, this.context.apiDecorators);\n                        },\n                        restoreFailed: (errorCode) => {\n                            this.log.info('restoreFailed: ' + errorCode);\n                        },\n                        restoreCompleted: () => {\n                            this.log.info('restoreCompleted');\n                        },\n                    }, async () => {\n                        this.log.info('bridge.init done');\n                        await this.canMakePayments();\n                        resolve(undefined);\n                    }, (code, message) => {\n                        this.log.info('bridge.init failed: ' + code + ' - ' + message);\n                        resolve(CdvPurchase.storeError(code, message));\n                    });\n                });\n            }\n            loadReceipts() {\n                return new Promise((resolve) => {\n                    setTimeout(() => {\n                        this.initializeAppReceipt(() => {\n                            this.receiptsUpdated();\n                            if (this._receipt) {\n                                resolve([this._receipt, this.pseudoReceipt]);\n                            }\n                            else {\n                                resolve([this.pseudoReceipt]);\n                            }\n                        });\n                    }, 300);\n                });\n            }\n            async canMakePayments() {\n                return new Promise(resolve => {\n                    this.bridge.canMakePayments(() => {\n                        this._canMakePayments = true;\n                        resolve(true);\n                    }, (message) => {\n                        this.log.warn(`canMakePayments: ${message}`);\n                        this._canMakePayments = false;\n                        resolve(false);\n                    });\n                });\n            }\n            /**\n             * Create the application receipt\n             */\n            async initializeAppReceipt(callback) {\n                if (this._receipt) {\n                    this.log.debug('initializeAppReceipt() => already initialized.');\n                    return callback(undefined);\n                }\n                this._appStoreReceiptCallbacks.push(callback);\n                if (this._appStoreReceiptLoading) {\n                    this.log.debug('initializeAppReceipt() => already loading.');\n                    return;\n                }\n                this._appStoreReceiptLoading = true;\n                const nativeData = await this.loadAppStoreReceipt();\n                const callCallbacks = (arg) => {\n                    const callbacks = this._appStoreReceiptCallbacks;\n                    this._appStoreReceiptCallbacks = [];\n                    callbacks.forEach(cb => {\n                        cb(arg);\n                    });\n                };\n                if (!(nativeData === null || nativeData === void 0 ? void 0 : nativeData.appStoreReceipt)) {\n                    this.log.warn('no appStoreReceipt');\n                    this._appStoreReceiptLoading = false;\n                    callCallbacks(CdvPurchase.storeError(CdvPurchase.ErrorCode.REFRESH, 'No appStoreReceipt'));\n                    return;\n                }\n                this._receipt = new AppleAppStore.SKApplicationReceipt(nativeData, this.needAppReceipt, this.context.apiDecorators);\n                callCallbacks(undefined);\n            }\n            prepareReceipt(nativeData) {\n                if (nativeData === null || nativeData === void 0 ? void 0 : nativeData.appStoreReceipt) {\n                    if (!this._receipt) {\n                        this._receipt = new AppleAppStore.SKApplicationReceipt(nativeData, this.needAppReceipt, this.context.apiDecorators);\n                    }\n                    else {\n                        this._receipt.refresh(nativeData, this.needAppReceipt, this.context.apiDecorators);\n                    }\n                }\n            }\n            /** Promisified loading of the AppStore receipt */\n            async loadAppStoreReceipt() {\n                let resolved = false;\n                return new Promise(resolve => {\n                    var _a;\n                    if ((_a = this.bridge.appStoreReceipt) === null || _a === void 0 ? void 0 : _a.appStoreReceipt) {\n                        this.log.debug('using cached appstore receipt');\n                        return resolve(this.bridge.appStoreReceipt);\n                    }\n                    this.log.debug('loading appstore receipt...');\n                    this.bridge.loadReceipts(receipt => {\n                        this.log.debug('appstore receipt loaded');\n                        if (!resolved)\n                            resolve(receipt);\n                        resolved = true;\n                    }, (code, message) => {\n                        // this should not happen: native side never triggers an error\n                        this.log.warn('Failed to load appStoreReceipt: ' + code + ' - ' + message);\n                        if (!resolved)\n                            resolve(undefined);\n                        resolved = true;\n                    });\n                    // If the receipt cannot be loaded, timeout after 5 seconds\n                    setTimeout(function () {\n                        if (!resolved)\n                            resolve(undefined);\n                        resolved = true;\n                    }, 5000);\n                }).then(result => {\n                    this.context.listener.receiptsReady(CdvPurchase.Platform.APPLE_APPSTORE);\n                    return result;\n                }).catch(reason => {\n                    this.context.listener.receiptsReady(CdvPurchase.Platform.APPLE_APPSTORE);\n                    return reason;\n                });\n            }\n            async loadEligibility(validProducts) {\n                if (!this.discountEligibilityDeterminer) {\n                    return new AppleAppStore.Internal.DiscountEligibilities([], []);\n                }\n                const eligibilityRequests = [];\n                validProducts.forEach(valid => {\n                    var _a;\n                    (_a = valid.discounts) === null || _a === void 0 ? void 0 : _a.forEach(discount => {\n                        eligibilityRequests.push({\n                            productId: valid.id,\n                            discountId: discount.id,\n                            discountType: discount.type,\n                        });\n                    });\n                });\n                if (eligibilityRequests.length > 0) {\n                    const applicationReceipt = await this.loadAppStoreReceipt();\n                    if (!applicationReceipt || !applicationReceipt.appStoreReceipt) {\n                        this.log.debug('no receipt, assuming introductory price are available.');\n                        return new AppleAppStore.Internal.DiscountEligibilities(eligibilityRequests, eligibilityRequests.map(r => r.discountType === \"Introductory\"));\n                    }\n                    else {\n                        this.log.debug('calling discount eligibility determiner.');\n                        const response = await this.callDiscountEligibilityDeterminer(applicationReceipt, eligibilityRequests);\n                        this.log.debug('response: ' + JSON.stringify(response));\n                        return new AppleAppStore.Internal.DiscountEligibilities(eligibilityRequests, response);\n                    }\n                }\n                else {\n                    return new AppleAppStore.Internal.DiscountEligibilities([], []);\n                }\n            }\n            callDiscountEligibilityDeterminer(applicationReceipt, eligibilityRequests) {\n                return new Promise(resolve => {\n                    if (!this.discountEligibilityDeterminer)\n                        return resolve([]);\n                    this.discountEligibilityDeterminer(applicationReceipt, eligibilityRequests, resolve);\n                });\n            }\n            loadProducts(products) {\n                return new Promise(resolve => {\n                    this.log.info('bridge.load');\n                    this.bridge.load(products.map(p => p.id), async (validProducts, invalidProducts) => {\n                        this.log.info('bridge.loaded: ' + JSON.stringify({ validProducts, invalidProducts }));\n                        this.addValidProducts(products, validProducts);\n                        const eligibilities = await this.loadEligibility(validProducts);\n                        this.log.info('eligibilities ready.');\n                        // for any valid product that includes a discount, check the eligibility.\n                        const ret = products.map(p => {\n                            if (invalidProducts.indexOf(p.id) >= 0) {\n                                this.log.debug(`${p.id} is invalid`);\n                                return CdvPurchase.storeError(CdvPurchase.ErrorCode.INVALID_PRODUCT_ID, 'Product not found in AppStore. #400');\n                            }\n                            else {\n                                const valid = validProducts.find(v => v.id === p.id);\n                                this.log.debug(`${p.id} is valid: ${JSON.stringify(valid)}`);\n                                if (!valid)\n                                    return CdvPurchase.storeError(CdvPurchase.ErrorCode.INVALID_PRODUCT_ID, 'Product not found in AppStore. #404');\n                                let product = this.getProduct(p.id);\n                                if (product) {\n                                    this.log.debug('refreshing existing product');\n                                    product === null || product === void 0 ? void 0 : product.refresh(valid, this.context.apiDecorators, eligibilities);\n                                }\n                                else {\n                                    this.log.debug('registering existing product');\n                                    product = new AppleAppStore.SKProduct(valid, p, this.context.apiDecorators, eligibilities);\n                                    this._products.push(product);\n                                }\n                                return product;\n                            }\n                        });\n                        this.log.debug(`Products loaded: ${JSON.stringify(ret)}`);\n                        resolve(ret);\n                    }, (code, message) => {\n                        return products.map(p => CdvPurchase.storeError(code, message));\n                    });\n                });\n            }\n            async order(offer, additionalData) {\n                let resolved = false;\n                return new Promise(resolve => {\n                    var _a;\n                    const callResolve = (result) => {\n                        if (resolved)\n                            return;\n                        this.setPaymentMonitor(() => { });\n                        resolved = true;\n                        resolve(result);\n                    };\n                    this.log.info('order');\n                    const discountId = offer.id !== AppleAppStore.DEFAULT_OFFER_ID ? offer.id : undefined;\n                    const discount = (_a = additionalData === null || additionalData === void 0 ? void 0 : additionalData.appStore) === null || _a === void 0 ? void 0 : _a.discount;\n                    if (discountId && !discount) {\n                        return callResolve(CdvPurchase.storeError(CdvPurchase.ErrorCode.MISSING_OFFER_PARAMS, 'Missing additionalData.appStore.discount when ordering a discount offer'));\n                    }\n                    if (discountId && ((discount === null || discount === void 0 ? void 0 : discount.id) !== discountId)) {\n                        return callResolve(CdvPurchase.storeError(CdvPurchase.ErrorCode.INVALID_OFFER_IDENTIFIER, 'Offer identifier does not match additionalData.appStore.discount.id'));\n                    }\n                    this.setPaymentMonitor((status, code, message) => {\n                        this.log.info('order.paymentMonitor => ' + status + ' ' + (code !== null && code !== void 0 ? code : '') + ' ' + (message !== null && message !== void 0 ? message : ''));\n                        if (resolved)\n                            return;\n                        switch (status) {\n                            case 'cancelled':\n                                callResolve(CdvPurchase.storeError(code !== null && code !== void 0 ? code : CdvPurchase.ErrorCode.PAYMENT_CANCELLED, message !== null && message !== void 0 ? message : 'The user cancelled the order.'));\n                                break;\n                            case 'failed':\n                                // note, \"failed\" might be triggered before \"cancelled\",\n                                // so we'll give some time to catch the \"cancelled\" event.\n                                setTimeout(() => {\n                                    callResolve(CdvPurchase.storeError(code !== null && code !== void 0 ? code : CdvPurchase.ErrorCode.PURCHASE, message !== null && message !== void 0 ? message : 'Purchase failed'));\n                                }, 500);\n                                break;\n                            case 'purchased':\n                            case 'deferred':\n                                callResolve(undefined);\n                                break;\n                        }\n                    });\n                    const success = () => {\n                        this.log.info('order.success');\n                        // We'll monitor the payment before resolving.\n                    };\n                    const error = () => {\n                        this.log.info('order.error');\n                        callResolve(CdvPurchase.storeError(CdvPurchase.ErrorCode.PURCHASE, 'Failed to place order'));\n                    };\n                    // When we switch AppStore user, the cached receipt isn't from the new user.\n                    // so after a purchase, we want to make sure we're using the receipt from the logged in user.\n                    this.forceReceiptReload = true;\n                    this.bridge.purchase(offer.productId, 1, this.context.getApplicationUsername(), discount, success, error);\n                });\n            }\n            finish(transaction) {\n                return new Promise(resolve => {\n                    this.log.info('finish(' + transaction.transactionId + ')');\n                    if (transaction.transactionId === AppleAppStore.APPLICATION_VIRTUAL_TRANSACTION_ID || transaction.transactionId === virtualTransactionId(transaction.products[0].id)) {\n                        // this is a virtual transaction, nothing to do.\n                        transaction.state = CdvPurchase.TransactionState.FINISHED;\n                        this.context.listener.receiptsUpdated(CdvPurchase.Platform.APPLE_APPSTORE, [transaction.parentReceipt]);\n                        return resolve(undefined);\n                    }\n                    const success = () => {\n                        transaction.state = CdvPurchase.TransactionState.FINISHED;\n                        this.context.listener.receiptsUpdated(CdvPurchase.Platform.APPLE_APPSTORE, [transaction.parentReceipt]);\n                        resolve(undefined);\n                    };\n                    const error = (msg) => {\n                        if (msg === null || msg === void 0 ? void 0 : msg.includes('[#CdvPurchase:100]')) {\n                            // already finished\n                            success();\n                        }\n                        else {\n                            resolve(CdvPurchase.storeError(CdvPurchase.ErrorCode.FINISH, 'Failed to finish transaction'));\n                        }\n                    };\n                    this.bridge.finish(transaction.transactionId, success, error);\n                });\n            }\n            refreshReceipt() {\n                return new Promise(resolve => {\n                    const success = (receipt) => {\n                        // at that point, the receipt should have been refreshed.\n                        resolve(receipt);\n                    };\n                    const error = (code, message) => {\n                        resolve(CdvPurchase.storeError(code, message));\n                    };\n                    this.bridge.refreshReceipts(success, error);\n                });\n            }\n            async receiptValidationBody(receipt) {\n                if (receipt.platform !== CdvPurchase.Platform.APPLE_APPSTORE)\n                    return;\n                if (receipt !== this._receipt)\n                    return; // do not validate the pseudo receipt\n                const skReceipt = receipt;\n                let applicationReceipt = skReceipt.nativeData;\n                if (this.forceReceiptReload) {\n                    this.forceReceiptReload = false;\n                    const nativeData = await this.loadAppStoreReceipt();\n                    if (nativeData) {\n                        applicationReceipt = nativeData;\n                        this.prepareReceipt(nativeData);\n                    }\n                }\n                if (!skReceipt.nativeData.appStoreReceipt) {\n                    this.log.info('Cannot prepare the receipt validation body, because appStoreReceipt is missing. Refreshing...');\n                    const result = await this.refreshReceipt();\n                    if (!result || 'isError' in result) {\n                        this.log.warn('Failed to refresh receipt, cannot run receipt validation.');\n                        if (result)\n                            this.log.error(result);\n                        return;\n                    }\n                    this.log.info('Receipt refreshed.');\n                    applicationReceipt = result;\n                }\n                const transaction = skReceipt.transactions.slice(-1)[0];\n                return {\n                    id: applicationReceipt.bundleIdentifier,\n                    type: CdvPurchase.ProductType.APPLICATION,\n                    // send all products and offers so validator get pricing information\n                    products: Object.values(this.validProducts).map(vp => new AppleAppStore.SKProduct(vp, vp, this.context.apiDecorators, { isEligible: () => true })),\n                    transaction: {\n                        type: 'ios-appstore',\n                        id: transaction === null || transaction === void 0 ? void 0 : transaction.transactionId,\n                        appStoreReceipt: applicationReceipt.appStoreReceipt,\n                    }\n                };\n            }\n            async handleReceiptValidationResponse(_receipt, response) {\n                var _a, _b;\n                // we can add the purchaseDate to the application transaction\n                let localReceiptUpdated = false;\n                if (response.ok) {\n                    const vTransaction = (_a = response.data) === null || _a === void 0 ? void 0 : _a.transaction;\n                    if ((vTransaction === null || vTransaction === void 0 ? void 0 : vTransaction.type) === 'ios-appstore' && 'original_application_version' in vTransaction) {\n                        (_b = this._receipt) === null || _b === void 0 ? void 0 : _b.transactions.forEach(t => {\n                            if (t.transactionId === AppleAppStore.APPLICATION_VIRTUAL_TRANSACTION_ID) {\n                                if (vTransaction.original_purchase_date_ms) {\n                                    t.purchaseDate = new Date(parseInt(vTransaction.original_purchase_date_ms));\n                                    localReceiptUpdated = true;\n                                }\n                            }\n                        });\n                    }\n                }\n                if (localReceiptUpdated)\n                    this.context.listener.receiptsUpdated(CdvPurchase.Platform.APPLE_APPSTORE, [_receipt]);\n            }\n            async requestPayment(payment, additionalData) {\n                return CdvPurchase.storeError(CdvPurchase.ErrorCode.UNKNOWN, 'requestPayment not supported');\n            }\n            async manageSubscriptions() {\n                this.bridge.manageSubscriptions();\n                return;\n            }\n            async manageBilling() {\n                this.bridge.manageBilling();\n                return;\n            }\n            checkSupport(functionality) {\n                if (functionality === 'order')\n                    return this._canMakePayments;\n                const supported = [\n                    'order', 'manageBilling', 'manageSubscriptions'\n                ];\n                return supported.indexOf(functionality) >= 0;\n            }\n            restorePurchases() {\n                return new Promise(resolve => {\n                    this.forceReceiptReload = true;\n                    this.bridge.restore();\n                    this.bridge.refreshReceipts(obj => {\n                        resolve();\n                    }, (code, message) => {\n                        resolve();\n                    });\n                });\n            }\n            presentCodeRedemptionSheet() {\n                return new Promise(resolve => {\n                    this.bridge.presentCodeRedemptionSheet(resolve);\n                });\n            }\n        }\n        AppleAppStore.Adapter = Adapter;\n    })(AppleAppStore = CdvPurchase.AppleAppStore || (CdvPurchase.AppleAppStore = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let AppleAppStore;\n    (function (AppleAppStore) {\n        let Bridge;\n        (function (Bridge_1) {\n            /** No-operation function, used as a default for callbacks */\n            const noop = (args) => { };\n            /** Logger */\n            let log = noop;\n            /** Execute a native method */\n            function exec(methodName, options, success, error) {\n                window.cordova.exec(success, error, \"InAppPurchase\", methodName, options);\n            }\n            ;\n            /** Execute a javascript-side method in a try-catch block */\n            function protectCall(callback, context, ...args) {\n                if (!callback) {\n                    return;\n                }\n                try {\n                    // const args = Array.prototype.slice.call(arguments, 2);\n                    callback.apply(this, args);\n                }\n                catch (err) {\n                    log('exception in ' + context + ': \"' + err + '\"');\n                }\n            }\n            ;\n            class Bridge {\n                constructor() {\n                    /** Transactions for a given product */\n                    this.transactionsForProduct = {};\n                    /** True when the SDK has been initialized */\n                    this.initialized = false;\n                    /** List of registered product identifiers */\n                    this.registeredProducts = [];\n                    /** True if \"restoreCompleted\" or \"restoreFailed\" should be called when restore is done */\n                    this.needRestoreNotification = false;\n                    /*\n                    private eventQueue: {\n                        state: TransactionState;\n                        errorCode: ErrorCode | undefined;\n                        errorText: string | undefined;\n                        transactionIdentifier: string;\n                        productId: string;\n                        /** @deprecated *\n                        transactionReceipt: never;\n                        originalTransactionIdentifier: string | undefined;\n                        transactionDate: string;\n                        discountId: string;\n                    }[] = [];\n    \n                    private timer: number | null = null;\n                    */\n                    /** List of transaction updates to process */\n                    this.pendingUpdates = [];\n                    /** @deprecated */\n                    this.onPurchased = false;\n                    /** @deprecated */\n                    this.onFailed = false;\n                    /** @deprecated */\n                    this.onRestored = false;\n                    window.storekit = this; // used by native to communicate with this bridge\n                    this.options = {\n                        error: noop,\n                        ready: noop,\n                        purchased: noop,\n                        purchaseEnqueued: noop,\n                        purchasing: noop,\n                        purchaseFailed: noop,\n                        deferred: noop,\n                        finished: noop,\n                        restored: noop,\n                        receiptsRefreshed: noop,\n                        restoreFailed: noop,\n                        restoreCompleted: noop,\n                    };\n                    // if (window.localStorage && window.localStorage.sk_transactionForProduct)\n                    // this.transactionsForProduct = JSON.parse(window.localStorage.sk_transactionForProduct);\n                    // Remove support for receipt.forTransaction(...)\n                    // `appStoreReceipt` is now the only supported receipt format on iOS (drops support for iOS <= 6)\n                    // if (window.localStorage.sk_receiptForTransaction)\n                    // delete window.localStorage.sk_receiptForTransaction;\n                }\n                init(options, success, error) {\n                    this.options = {\n                        error: options.error || noop,\n                        ready: options.ready || noop,\n                        purchased: options.purchased || noop,\n                        purchaseEnqueued: options.purchaseEnqueued || noop,\n                        purchasing: options.purchasing || noop,\n                        purchaseFailed: options.purchaseFailed || noop,\n                        deferred: options.deferred || noop,\n                        finished: options.finished || noop,\n                        restored: options.restored || noop,\n                        receiptsRefreshed: options.receiptsRefreshed || noop,\n                        restoreFailed: options.restoreFailed || noop,\n                        restoreCompleted: options.restoreCompleted || noop,\n                    };\n                    if (options.debug) {\n                        exec('debug', [], noop, noop);\n                        log = options.log || function (msg) {\n                            console.log(\"[CdvPurchase.AppAppStore.Bridge] \" + msg);\n                        };\n                    }\n                    if (options.autoFinish) {\n                        exec('autoFinish', [], noop, noop);\n                    }\n                    const setupOk = () => {\n                        log('setup ok');\n                        protectCall(this.options.ready, 'options.ready');\n                        protectCall(success, 'init.success');\n                        this.initialized = true;\n                        setTimeout(() => this.processPendingTransactions(), 50);\n                    };\n                    const setupFailed = () => {\n                        log('setup failed');\n                        // protectCall(this.options.error, 'options.error', ErrorCode.SETUP, 'Setup failed');\n                        protectCall(error, 'init.error', CdvPurchase.ErrorCode.SETUP, 'Setup failed');\n                    };\n                    exec('setup', [], setupOk, setupFailed);\n                }\n                processPendingTransactions() {\n                    log('processing pending transactions');\n                    exec('processPendingTransactions', [], () => {\n                        this.finalizeTransactionUpdates();\n                    }, undefined);\n                }\n                /**\n                 * Makes an in-app purchase.\n                 *\n                 * @param {String} productId The product identifier. e.g. \"com.example.MyApp.myproduct\"\n                 * @param {int} quantity Quantity of product to purchase\n                 */\n                purchase(productId, quantity, applicationUsername, discount, success, error) {\n                    quantity = (quantity | 0) || 1;\n                    const options = this.options;\n                    // Many people forget to load information about their products from apple's servers before allowing\n                    // users to purchase them... leading them to spam us with useless issues and comments.\n                    // Let's chase them down!\n                    if (this.registeredProducts.indexOf(productId) < 0) {\n                        const msg = 'Purchasing ' + productId + ' failed.  Ensure the product was loaded first with Bridge.load(...)!';\n                        log(msg);\n                        if (typeof options.error === 'function') {\n                            protectCall(options.error, 'options.error', CdvPurchase.ErrorCode.PURCHASE, 'Trying to purchase a unknown product.', { productId, quantity });\n                        }\n                        return;\n                    }\n                    const purchaseOk = () => {\n                        log('Purchase enqueued ' + productId);\n                        if (typeof options.purchaseEnqueued === 'function') {\n                            protectCall(options.purchaseEnqueued, 'options.purchaseEnqueued', productId, quantity);\n                        }\n                        protectCall(success, 'purchase.success');\n                    };\n                    const purchaseFailed = () => {\n                        const errMsg = 'Purchase failed: ' + productId;\n                        log(errMsg);\n                        if (typeof options.error === 'function') {\n                            protectCall(options.error, 'options.error', CdvPurchase.ErrorCode.PURCHASE, errMsg, { productId, quantity });\n                        }\n                        protectCall(error, 'purchase.error');\n                    };\n                    exec('purchase', [productId, quantity, applicationUsername, discount || {}], purchaseOk, purchaseFailed);\n                }\n                /**\n                 * Checks if device/user is allowed to make in-app purchases\n                 */\n                canMakePayments(success, error) {\n                    return exec(\"canMakePayments\", [], success, error);\n                }\n                /**\n                 * Asks the payment queue to restore previously completed purchases.\n                 *\n                 * The restored transactions are passed to the onRestored callback, so make sure you define a handler for that first.\n                 */\n                restore(callback) {\n                    this.needRestoreNotification = true;\n                    exec('restoreCompletedTransactions', [], callback, callback);\n                }\n                manageSubscriptions(callback) {\n                    exec('manageSubscriptions', [], callback, callback);\n                }\n                manageBilling(callback) {\n                    exec('manageBilling', [], callback, callback);\n                }\n                presentCodeRedemptionSheet(callback) {\n                    exec('presentCodeRedemptionSheet', [], callback, callback);\n                }\n                /**\n                 * Retrieves localized product data, including price (as localized\n                 * string), name, description of multiple products.\n                 *\n                 * @param {Array} productIds\n                 *   An array of product identifier strings.\n                 *\n                 * @param {Function} callback\n                 *   Called once with the result of the products request. Signature:\n                 *\n                 *     function(validProducts, invalidProductIds)\n                 *\n                 *   where validProducts receives an array of objects of the form:\n                 *\n                 *     {\n                 *       id: \"<productId>\",\n                 *       title: \"<localised title>\",\n                 *       description: \"<localised escription>\",\n                 *       price: \"<localised price>\"\n                 *     }\n                 *\n                 *  and invalidProductIds receives an array of product identifier\n                 *  strings which were rejected by the app store.\n                 */\n                load(productIds, success, error) {\n                    const options = this.options;\n                    if (typeof productIds === \"string\") {\n                        productIds = [productIds];\n                    }\n                    if (!productIds) {\n                        // Empty array, nothing to do.\n                        protectCall(success, 'load.success', [], []);\n                    }\n                    else if (!productIds.length) {\n                        // Empty array, nothing to do.\n                        protectCall(success, 'load.success', [], []);\n                    }\n                    else {\n                        if (typeof productIds[0] !== 'string') {\n                            const msg = 'invalid productIds given to store.load: ' + JSON.stringify(productIds);\n                            log(msg);\n                            protectCall(options.error, 'options.error', CdvPurchase.ErrorCode.LOAD, msg);\n                            protectCall(error, 'load.error', CdvPurchase.ErrorCode.LOAD, msg);\n                            return;\n                        }\n                        log('load ' + JSON.stringify(productIds));\n                        const loadOk = (array) => {\n                            const valid = array[0];\n                            const invalid = array[1];\n                            log('load ok: { valid:' + JSON.stringify(valid) + ' invalid:' + JSON.stringify(invalid) + ' }');\n                            protectCall(success, 'load.success', valid, invalid);\n                        };\n                        const loadFailed = (errMessage) => {\n                            log('load failed');\n                            log(errMessage);\n                            const message = 'Load failed: ' + errMessage;\n                            protectCall(options.error, 'options.error', CdvPurchase.ErrorCode.LOAD, message);\n                            protectCall(error, 'load.error', CdvPurchase.ErrorCode.LOAD, message);\n                        };\n                        this.registeredProducts = this.registeredProducts.concat(productIds);\n                        exec('load', [productIds], loadOk, loadFailed);\n                    }\n                }\n                /*\n                 * Finish an unfinished transaction.\n                 *\n                 * @param {String} transactionId\n                 *    Identifier of the transaction to finish.\n                 *\n                 * You have to call this method manually except when using the autoFinish option.\n                 */\n                finish(transactionId, success, error) {\n                    exec('finishTransaction', [transactionId], success, error);\n                }\n                finalizeTransactionUpdates() {\n                    for (let i = 0; i < this.pendingUpdates.length; ++i) {\n                        const args = this.pendingUpdates[i];\n                        this.transactionUpdated(args.state, args.errorCode, args.errorText, args.transactionIdentifier, args.productId, args.transactionReceipt, args.originalTransactionIdentifier, args.transactionDate, args.discountId);\n                    }\n                    this.pendingUpdates = [];\n                }\n                lastTransactionUpdated() {\n                    // no more pending transactions\n                }\n                // This is called from native.\n                //\n                // Note that it may eventually be called before initialization... unfortunately.\n                // In this case, we'll just keep pending updates in a list for later processing.\n                transactionUpdated(state, errorCode, errorText, transactionIdentifier, productId, transactionReceipt, originalTransactionIdentifier, transactionDate, discountId) {\n                    if (!this.initialized) {\n                        this.pendingUpdates.push({ state, errorCode, errorText, transactionIdentifier, productId, transactionReceipt, originalTransactionIdentifier, transactionDate, discountId });\n                        return;\n                    }\n                    log(\"transaction updated:\" + transactionIdentifier + \" state:\" + state + \" product:\" + productId);\n                    if (productId && transactionIdentifier) {\n                        if (this.transactionsForProduct[productId]) {\n                            this.transactionsForProduct[productId].push(transactionIdentifier);\n                        }\n                        else {\n                            this.transactionsForProduct[productId] = [transactionIdentifier];\n                        }\n                    }\n                    switch (state) {\n                        case \"PaymentTransactionStatePurchasing\":\n                            protectCall(this.options.purchasing, 'options.purchasing', productId);\n                            return;\n                        case \"PaymentTransactionStatePurchased\":\n                            protectCall(this.options.purchased, 'options.purchase', transactionIdentifier, productId, originalTransactionIdentifier, transactionDate, discountId);\n                            return;\n                        case \"PaymentTransactionStateDeferred\":\n                            protectCall(this.options.deferred, 'options.deferred', productId);\n                            return;\n                        case \"PaymentTransactionStateFailed\":\n                            protectCall(this.options.purchaseFailed, 'options.purchaseFailed', productId, errorCode || CdvPurchase.ErrorCode.UNKNOWN, errorText || 'ERROR');\n                            protectCall(this.options.error, 'options.error', errorCode || CdvPurchase.ErrorCode.UNKNOWN, errorText || 'ERROR', { productId });\n                            return;\n                        case \"PaymentTransactionStateRestored\":\n                            protectCall(this.options.restored, 'options.restore', transactionIdentifier, productId);\n                            return;\n                        case \"PaymentTransactionStateFinished\":\n                            protectCall(this.options.finished, 'options.finish', transactionIdentifier, productId);\n                            return;\n                    }\n                }\n                restoreCompletedTransactionsFinished() {\n                    if (!this.needRestoreNotification)\n                        return;\n                    this.needRestoreNotification = false;\n                    protectCall(this.options.restoreCompleted, 'options.restoreCompleted');\n                }\n                restoreCompletedTransactionsFailed(errorCode) {\n                    if (!this.needRestoreNotification)\n                        return;\n                    this.needRestoreNotification = false;\n                    protectCall(this.options.restoreFailed, 'options.restoreFailed', errorCode);\n                }\n                parseReceiptArgs(args) {\n                    const base64 = args[0];\n                    const bundleIdentifier = args[1];\n                    const bundleShortVersion = args[2];\n                    const bundleNumericVersion = args[3];\n                    const bundleSignature = args[4];\n                    log('infoPlist: ' + bundleIdentifier + \",\" + bundleShortVersion + \",\" + bundleNumericVersion + \",\" + bundleSignature);\n                    return {\n                        appStoreReceipt: base64,\n                        bundleIdentifier: bundleIdentifier,\n                        bundleShortVersion: bundleShortVersion,\n                        bundleNumericVersion: bundleNumericVersion,\n                        bundleSignature: bundleSignature\n                    };\n                }\n                refreshReceipts(successCb, errorCb) {\n                    const loaded = (args) => {\n                        const data = this.parseReceiptArgs(args);\n                        this.appStoreReceipt = data;\n                        protectCall(this.options.receiptsRefreshed, 'options.receiptsRefreshed', data);\n                        protectCall(successCb, \"refreshReceipts.success\", data);\n                    };\n                    const error = (errMessage) => {\n                        log('refresh receipt failed: ' + errMessage);\n                        if (errMessage.includes(\"(@AMSErrorDomain:100)\")) {\n                            log('authentication failed, indicated by the string \"(@AMSErrorDomain:100)\"');\n                        }\n                        protectCall(this.options.error, 'options.error', CdvPurchase.ErrorCode.REFRESH_RECEIPTS, 'Failed to refresh receipt: ' + errMessage);\n                        protectCall(errorCb, \"refreshReceipts.error\", CdvPurchase.ErrorCode.REFRESH_RECEIPTS, 'Failed to refresh receipt: ' + errMessage);\n                    };\n                    this.appStoreReceipt = null;\n                    log('refreshing appStoreReceipt');\n                    exec('appStoreRefreshReceipt', [], loaded, error);\n                }\n                loadReceipts(callback, errorCb) {\n                    const loaded = (args) => {\n                        const data = this.parseReceiptArgs(args);\n                        this.appStoreReceipt = data;\n                        protectCall(callback, 'loadReceipts.callback', data);\n                    };\n                    const error = (errMessage) => {\n                        // should not happen (native side never triggers an error)\n                        // log('load failed: ' + errMessage);\n                        // protectCall(this.options.error, 'options.error', ErrorCode.LOAD_RECEIPTS, 'Failed to load receipt: ' + errMessage);\n                        // protectCall(errorCb, 'loadReceipts.error', ErrorCode.LOAD_RECEIPTS, 'Failed to load receipt: ' + errMessage);\n                    };\n                    log('loading appStoreReceipt');\n                    exec('appStoreReceipt', [], loaded, error);\n                }\n            }\n            Bridge_1.Bridge = Bridge;\n        })(Bridge = AppleAppStore.Bridge || (AppleAppStore.Bridge = {}));\n    })(AppleAppStore = CdvPurchase.AppleAppStore || (CdvPurchase.AppleAppStore = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /**\n     * Apple AppStore adapter using StoreKit version 1\n     */\n    let AppleAppStore;\n    (function (AppleAppStore) {\n        /** @internal */\n        let Internal;\n        (function (Internal) {\n            class DiscountEligibilities {\n                constructor(request, response) {\n                    this.request = request;\n                    this.response = response;\n                }\n                isEligible(productId, discountType, discountId) {\n                    var _a;\n                    for (let i = 0; i < this.request.length; ++i) {\n                        const req = this.request[i];\n                        if (req.productId === productId && req.discountId === discountId && req.discountType === discountType) {\n                            return (_a = this.response[i]) !== null && _a !== void 0 ? _a : false;\n                        }\n                    }\n                    return false;\n                }\n            }\n            Internal.DiscountEligibilities = DiscountEligibilities;\n        })(Internal = AppleAppStore.Internal || (AppleAppStore.Internal = {}));\n    })(AppleAppStore = CdvPurchase.AppleAppStore || (CdvPurchase.AppleAppStore = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /**\n     * Apple AppStore adapter using StoreKit version 1\n     */\n    let AppleAppStore;\n    (function (AppleAppStore) {\n        AppleAppStore.DEFAULT_OFFER_ID = '$';\n        class SKOffer extends CdvPurchase.Offer {\n            constructor(options, decorator) {\n                super(options, decorator);\n                this.offerType = options.offerType;\n            }\n        }\n        AppleAppStore.SKOffer = SKOffer;\n        class SKProduct extends CdvPurchase.Product {\n            constructor(validProduct, p, decorator, eligibilities) {\n                super(p, decorator);\n                this.raw = validProduct;\n                this.refresh(validProduct, decorator, eligibilities);\n            }\n            removeIneligibleDiscounts(eligibilities) {\n                this.offers = this.offers.filter(offer => {\n                    const skOffer = offer;\n                    if (skOffer.offerType === 'Default')\n                        return true;\n                    return eligibilities.isEligible(this.id, skOffer.offerType, offer.id);\n                });\n            }\n            refresh(valid, decorator, eligibilities) {\n                var _a;\n                this.raw = valid;\n                this.title = valid.title;\n                this.description = valid.description;\n                this.countryCode = valid.countryCode;\n                if (valid.group)\n                    this.group = valid.group;\n                this.removeIneligibleDiscounts(eligibilities);\n                // default offer\n                const finalPhase = {\n                    price: valid.price,\n                    priceMicros: valid.priceMicros,\n                    currency: valid.currency,\n                    billingPeriod: formatBillingPeriod(valid.billingPeriod, valid.billingPeriodUnit),\n                    paymentMode: this.type === CdvPurchase.ProductType.PAID_SUBSCRIPTION ? CdvPurchase.PaymentMode.PAY_AS_YOU_GO : CdvPurchase.PaymentMode.UP_FRONT,\n                    recurrenceMode: this.type === CdvPurchase.ProductType.PAID_SUBSCRIPTION ? CdvPurchase.RecurrenceMode.INFINITE_RECURRING : CdvPurchase.RecurrenceMode.NON_RECURRING,\n                };\n                // intro price is now in the discounts array\n                // if (valid.introPrice && valid.introPriceMicros !== undefined) {\n                //     const introPrice: PricingPhase = {\n                //         price: valid.introPrice,\n                //         priceMicros: valid.introPriceMicros,\n                //         currency: valid.currency,\n                //         billingPeriod: formatBillingPeriod(valid.introPricePeriod, valid.introPricePeriodUnit),\n                //         paymentMode: valid.introPricePaymentMode,\n                //         recurrenceMode: RecurrenceMode.FINITE_RECURRING,\n                //         billingCycles: 1,\n                //     }\n                //     pricingPhases.push(introPrice);\n                // }\n                // discounts\n                (_a = valid.discounts) === null || _a === void 0 ? void 0 : _a.forEach(discount => {\n                    if (eligibilities.isEligible(valid.id, discount.type, discount.id)) {\n                        const pricingPhases = [];\n                        const numCycles = discount.paymentMode === CdvPurchase.PaymentMode.PAY_AS_YOU_GO ? discount.period : 1;\n                        const numPeriods = discount.paymentMode === CdvPurchase.PaymentMode.PAY_AS_YOU_GO ? 1 : discount.period;\n                        const discountPhase = {\n                            price: discount.price,\n                            priceMicros: discount.priceMicros,\n                            currency: valid.currency,\n                            billingPeriod: formatBillingPeriod(numPeriods, discount.periodUnit),\n                            billingCycles: numCycles,\n                            paymentMode: discount.paymentMode,\n                            recurrenceMode: CdvPurchase.RecurrenceMode.FINITE_RECURRING,\n                        };\n                        pricingPhases.push(discountPhase);\n                        pricingPhases.push(finalPhase);\n                        this.addOffer(new SKOffer({ id: discount.id, product: this, pricingPhases, offerType: discount.type }, decorator));\n                    }\n                });\n                if (!hasIntroductoryOffer(this)) {\n                    this.addOffer(new SKOffer({\n                        id: AppleAppStore.DEFAULT_OFFER_ID,\n                        product: this,\n                        pricingPhases: [finalPhase],\n                        offerType: 'Default',\n                    }, decorator));\n                }\n                function hasIntroductoryOffer(product) {\n                    return product.offers.filter(offer => {\n                        return offer.offerType === 'Introductory';\n                    }).length > 0;\n                }\n                /**\n                 * Return ISO form of an IPeriodUnit + number of periods\n                 */\n                function formatBillingPeriod(numPeriods, period) {\n                    if (numPeriods && period)\n                        return `P${numPeriods}${period[0]}`;\n                    else\n                        return undefined;\n                }\n            }\n        }\n        AppleAppStore.SKProduct = SKProduct;\n    })(AppleAppStore = CdvPurchase.AppleAppStore || (CdvPurchase.AppleAppStore = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let AppleAppStore;\n    (function (AppleAppStore) {\n        /**\n         * Transaction ID used for the application virtual transaction\n         */\n        AppleAppStore.APPLICATION_VIRTUAL_TRANSACTION_ID = 'appstore.application';\n        /**\n         * StoreKit 1 exposes a single receipt that contains all transactions.\n         */\n        class SKApplicationReceipt extends CdvPurchase.Receipt {\n            constructor(applicationReceipt, needApplicationReceipt, decorator) {\n                super(CdvPurchase.Platform.APPLE_APPSTORE, decorator);\n                this.nativeData = applicationReceipt;\n                this.refresh(this.nativeData, needApplicationReceipt, decorator);\n            }\n            refresh(nativeData, needApplicationReceipt, decorator) {\n                this.nativeData = nativeData;\n                if (needApplicationReceipt) {\n                    const existing = this.transactions.find(t => t.transactionId === AppleAppStore.APPLICATION_VIRTUAL_TRANSACTION_ID);\n                    if (existing) {\n                        return;\n                    }\n                    const t = new CdvPurchase.Transaction(CdvPurchase.Platform.APPLE_APPSTORE, this, decorator);\n                    t.transactionId = AppleAppStore.APPLICATION_VIRTUAL_TRANSACTION_ID;\n                    t.state = CdvPurchase.TransactionState.APPROVED;\n                    t.products.push({\n                        id: nativeData.bundleIdentifier,\n                    });\n                    this.transactions.push(t);\n                }\n            }\n        }\n        AppleAppStore.SKApplicationReceipt = SKApplicationReceipt;\n        /** StoreKit transaction */\n        class SKTransaction extends CdvPurchase.Transaction {\n            refresh(productId, originalTransactionIdentifier, transactionDate, discountId) {\n                if (productId)\n                    this.products = [{ id: productId, offerId: discountId }];\n                if (originalTransactionIdentifier)\n                    this.originalTransactionId = originalTransactionIdentifier;\n                if (transactionDate)\n                    this.purchaseDate = new Date(+transactionDate);\n            }\n        }\n        AppleAppStore.SKTransaction = SKTransaction;\n    })(AppleAppStore = CdvPurchase.AppleAppStore || (CdvPurchase.AppleAppStore = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let AppleAppStore;\n    (function (AppleAppStore) {\n        let VerifyReceipt;\n        (function (VerifyReceipt) {\n            /** The reason a subscription expired.\n             * https://developer.apple.com/documentation/appstorereceipts/expiration_intent\n             */\n            let AppleExpirationIntent;\n            (function (AppleExpirationIntent) {\n                /** The customer voluntarily canceled their subscription. */\n                AppleExpirationIntent[\"CANCELED\"] = \"1\";\n                /** Billing error; for example, the customer\"s payment information was no longer valid. */\n                AppleExpirationIntent[\"BILLING_ERROR\"] = \"2\";\n                /** The customer did not agree to a recent price increase. */\n                AppleExpirationIntent[\"PRICE_INCREASE\"] = \"3\";\n                /** The product was not available for purchase at the time of renewal. */\n                AppleExpirationIntent[\"PRODUCT_NOT_AVAILABLE\"] = \"4\";\n                /** Unknown error. */\n                AppleExpirationIntent[\"UNKNOWN\"] = \"5\";\n            })(AppleExpirationIntent = VerifyReceipt.AppleExpirationIntent || (VerifyReceipt.AppleExpirationIntent = {}));\n        })(VerifyReceipt = AppleAppStore.VerifyReceipt || (AppleAppStore.VerifyReceipt = {}));\n    })(AppleAppStore = CdvPurchase.AppleAppStore || (CdvPurchase.AppleAppStore = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Braintree;\n    (function (Braintree) {\n        // export type Nonce = {\n        //     type: PaymentMethod.THREE_D_SECURE;\n        //     value: string;\n        // };\n        // export type NonceProvider = (type: PaymentMethod, callback: Callback<Nonce | IError>) => void;\n        // export enum PaymentMethod {\n        //     THREE_D_SECURE = 'THREE_D_SECURE',\n        // }\n        class BraintreeReceipt extends CdvPurchase.Receipt {\n            constructor(paymentRequest, dropInResult, decorator) {\n                // Now we have to send this to the server + the request\n                // result.paymentDescription; // \"1111\"\n                // result.paymentMethodType; // \"VISA\"\n                // result.deviceData; // undefined\n                // result.paymentMethodNonce; // {\"isDefault\":false,\"nonce\":\"tokencc_bh_rdjmsc_76vjtq_9tzsv3_4467mg_tt4\"}\n                var _a, _b, _c;\n                super(CdvPurchase.Platform.BRAINTREE, decorator);\n                const transaction = new CdvPurchase.Transaction(CdvPurchase.Platform.BRAINTREE, this, decorator);\n                transaction.purchaseDate = new Date();\n                transaction.products = ((_a = paymentRequest.items) === null || _a === void 0 ? void 0 : _a.filter(p => p).map(product => ({ id: (product === null || product === void 0 ? void 0 : product.id) || '' }))) || [];\n                transaction.state = CdvPurchase.TransactionState.APPROVED;\n                transaction.transactionId = (_c = (_b = dropInResult.paymentMethodNonce) === null || _b === void 0 ? void 0 : _b.nonce) !== null && _c !== void 0 ? _c : `UNKNOWN_${dropInResult.paymentMethodType}_${dropInResult.paymentDescription}`;\n                this.transactions = [transaction];\n                this.dropInResult = dropInResult;\n                this.paymentRequest = paymentRequest;\n                this.refresh(paymentRequest, dropInResult, decorator);\n            }\n            refresh(paymentRequest, dropInResult, decorator) {\n                var _a, _b;\n                this.dropInResult = dropInResult;\n                this.paymentRequest = paymentRequest;\n                const transaction = new CdvPurchase.Transaction(CdvPurchase.Platform.BRAINTREE, this, decorator);\n                transaction.products = paymentRequest.items.filter(p => p).map(product => ({ id: (product === null || product === void 0 ? void 0 : product.id) || '' }));\n                transaction.state = CdvPurchase.TransactionState.APPROVED;\n                transaction.transactionId = (_b = (_a = dropInResult.paymentMethodNonce) === null || _a === void 0 ? void 0 : _a.nonce) !== null && _b !== void 0 ? _b : `UNKNOWN_${dropInResult.paymentMethodType}_${dropInResult.paymentDescription}`;\n                transaction.amountMicros = paymentRequest.amountMicros;\n                transaction.currency = paymentRequest.currency;\n                this.transactions = [transaction];\n            }\n        }\n        Braintree.BraintreeReceipt = BraintreeReceipt;\n        class Adapter {\n            constructor(context, options) {\n                this.id = CdvPurchase.Platform.BRAINTREE;\n                this.name = 'BrainTree';\n                this.ready = false;\n                this.products = [];\n                this._receipts = [];\n                this.context = context;\n                this.log = context.log.child(\"Braintree\");\n                this.options = options;\n            }\n            get receipts() { return this._receipts; }\n            get isSupported() {\n                return Braintree.IosBridge.Bridge.isSupported() || Braintree.AndroidBridge.Bridge.isSupported();\n            }\n            /**\n             * Initialize the Braintree Adapter.\n             */\n            initialize() {\n                return new Promise(resolve => {\n                    this.log.info(\"initialize()\");\n                    if (Braintree.IosBridge.Bridge.isSupported()) {\n                        this.log.info(\"instantiating ios bridge...\");\n                        this.iosBridge = new Braintree.IosBridge.Bridge(this.log, (callback) => {\n                            if (this.options.tokenizationKey)\n                                callback(this.options.tokenizationKey);\n                            else if (this.options.clientTokenProvider)\n                                this.options.clientTokenProvider(callback);\n                            else\n                                callback(CdvPurchase.storeError(CdvPurchase.ErrorCode.CLIENT_INVALID, 'Braintree iOS Bridge requires a clientTokenProvider or tokenizationKey'));\n                        }, this.options.applePay);\n                        this.iosBridge.initialize(this.context, resolve);\n                    }\n                    else if (Braintree.AndroidBridge.Bridge.isSupported() && !this.androidBridge) {\n                        this.log.info(\"instantiating android bridge...\");\n                        this.androidBridge = new Braintree.AndroidBridge.Bridge(this.log);\n                        this.log.info(\"calling android bridge -> initialize...\");\n                        const auth = this.options.tokenizationKey\n                            ? this.options.tokenizationKey\n                            : this.options.clientTokenProvider\n                                ? this.options.clientTokenProvider\n                                : '';\n                        this.androidBridge.initialize(auth, resolve);\n                    }\n                    else {\n                        this.log.info(\"platform not supported...\");\n                        resolve(undefined);\n                    }\n                    this.context.listener.receiptsReady(CdvPurchase.Platform.BRAINTREE);\n                });\n            }\n            async loadProducts(products) {\n                return products.map(p => CdvPurchase.storeError(CdvPurchase.ErrorCode.PRODUCT_NOT_AVAILABLE, 'N/A'));\n            }\n            async loadReceipts() {\n                this.context.listener.receiptsReady(CdvPurchase.Platform.BRAINTREE);\n                return [];\n            }\n            async order(offer) {\n                return CdvPurchase.storeError(CdvPurchase.ErrorCode.UNKNOWN, 'N/A: Not implemented with Braintree');\n            }\n            async finish(transaction) {\n                transaction.state = CdvPurchase.TransactionState.FINISHED;\n                this.context.listener.receiptsUpdated(CdvPurchase.Platform.TEST, [transaction.parentReceipt]);\n                return;\n            }\n            async manageSubscriptions() {\n                this.log.info('N/A: manageSubscriptions() is not available with Braintree');\n                return;\n            }\n            async manageBilling() {\n                this.log.info('N/A: manageBilling() is not available with Braintree');\n                return;\n            }\n            // async getNonce(paymentMethod: PaymentMethod): Promise<Nonce | IError> {\n            //     return new Promise(resolve => {\n            //         if (this.options.nonceProvider) {\n            //             this.options.nonceProvider(paymentMethod, resolve);\n            //         }\n            //         else {\n            //             resolve({\n            //                 code: ErrorCode.UNAUTHORIZED_REQUEST_DATA,\n            //                 message: 'Braintree requires a nonceProvider',\n            //             });\n            //         }\n            //     });\n            // }\n            async launchDropIn(paymentRequest, dropInRequest) {\n                if (this.androidBridge)\n                    return this.androidBridge.launchDropIn(dropInRequest);\n                if (this.iosBridge)\n                    return this.iosBridge.launchDropIn(paymentRequest, dropInRequest);\n                return CdvPurchase.storeError(CdvPurchase.ErrorCode.PURCHASE, 'Braintree is not available');\n            }\n            async requestPayment(paymentRequest, additionalData) {\n                var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n                this.log.info(\"requestPayment()\" + JSON.stringify(paymentRequest));\n                const dropInRequest = ((_a = additionalData === null || additionalData === void 0 ? void 0 : additionalData.braintree) === null || _a === void 0 ? void 0 : _a.dropInRequest) || {};\n                // Apple Pay\n                if (!await Braintree.IosBridge.ApplePayPlugin.isSupported(this.log)) {\n                    this.log.info(\"Apple Pay is not supported.\");\n                    dropInRequest.applePayDisabled = true;\n                }\n                // Google Pay\n                if (this.options.googlePay || dropInRequest.googlePayRequest) {\n                    const googlePay = Object.assign(Object.assign({}, ((_b = this.options.googlePay) !== null && _b !== void 0 ? _b : {})), ((_c = dropInRequest.googlePayRequest) !== null && _c !== void 0 ? _c : {}));\n                    if (!googlePay.transactionInfo) {\n                        googlePay.transactionInfo = {\n                            currencyCode: ((_d = paymentRequest.currency) !== null && _d !== void 0 ? _d : ''),\n                            totalPrice: ((_e = paymentRequest.amountMicros) !== null && _e !== void 0 ? _e : 0) / 1000000,\n                            totalPriceStatus: Braintree.GooglePay.TotalPriceStatus.FINAL,\n                        };\n                    }\n                    dropInRequest.googlePayRequest = googlePay;\n                }\n                // 3DS\n                if (this.options.threeDSecure || dropInRequest.threeDSecureRequest) {\n                    const threeDS = Object.assign(Object.assign({}, ((_f = this.options.threeDSecure) !== null && _f !== void 0 ? _f : {})), ((_g = dropInRequest.threeDSecureRequest) !== null && _g !== void 0 ? _g : {}));\n                    if (!threeDS.amount) {\n                        threeDS.amount = asDecimalString((_h = paymentRequest.amountMicros) !== null && _h !== void 0 ? _h : 0);\n                    }\n                    if (!threeDS.billingAddress && paymentRequest.billingAddress) {\n                        threeDS.billingAddress = {\n                            givenName: paymentRequest.billingAddress.givenName,\n                            surname: paymentRequest.billingAddress.surname,\n                            countryCodeAlpha2: paymentRequest.billingAddress.countryCode,\n                            postalCode: paymentRequest.billingAddress.postalCode,\n                            locality: paymentRequest.billingAddress.locality,\n                            streetAddress: paymentRequest.billingAddress.streetAddress1,\n                            extendedAddress: paymentRequest.billingAddress.streetAddress2,\n                            line3: paymentRequest.billingAddress.streetAddress3,\n                            phoneNumber: paymentRequest.billingAddress.phoneNumber,\n                            region: paymentRequest.billingAddress.region,\n                        };\n                    }\n                    if (!threeDS.email) {\n                        threeDS.email = paymentRequest.email;\n                    }\n                    dropInRequest.threeDSecureRequest = threeDS;\n                }\n                const response = await this.launchDropIn(paymentRequest, dropInRequest);\n                if (!dropInResponseIsOK(response))\n                    return dropInResponseError(this.log, response);\n                const dropInResult = response;\n                this.log.info(\"launchDropIn success: \" + JSON.stringify({ paymentRequest, dropInResult }));\n                if (!((_j = dropInResult.paymentMethodNonce) === null || _j === void 0 ? void 0 : _j.nonce)) {\n                    return CdvPurchase.storeError(CdvPurchase.ErrorCode.BAD_RESPONSE, 'launchDropIn returned no paymentMethodNonce');\n                }\n                let receipt = this._receipts.find(r => { var _a, _b; return ((_a = r.dropInResult.paymentMethodNonce) === null || _a === void 0 ? void 0 : _a.nonce) === ((_b = dropInResult.paymentMethodNonce) === null || _b === void 0 ? void 0 : _b.nonce); });\n                if (receipt) {\n                    receipt.refresh(paymentRequest, dropInResult, this.context.apiDecorators);\n                }\n                else {\n                    receipt = new BraintreeReceipt(paymentRequest, dropInResult, this.context.apiDecorators);\n                    this.receipts.push(receipt);\n                }\n                this.context.listener.receiptsUpdated(CdvPurchase.Platform.BRAINTREE, [receipt]);\n                return receipt.transactions[0];\n            }\n            async receiptValidationBody(receipt) {\n                var _a, _b, _c, _d, _e;\n                if (!isBraintreeReceipt(receipt)) {\n                    this.log.error(\"Unexpected error, expecting a BraintreeReceipt: \" + JSON.stringify(receipt));\n                    return;\n                }\n                this.log.info(\"create receiptValidationBody for: \" + JSON.stringify(receipt));\n                return {\n                    id: (_c = (_b = (_a = receipt.paymentRequest.items) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.id) !== null && _c !== void 0 ? _c : 'unknown',\n                    type: CdvPurchase.ProductType.CONSUMABLE,\n                    priceMicros: receipt.paymentRequest.amountMicros,\n                    currency: receipt.paymentRequest.currency,\n                    products: [],\n                    transaction: {\n                        type: CdvPurchase.Platform.BRAINTREE,\n                        deviceData: receipt.dropInResult.deviceData,\n                        id: 'nonce',\n                        paymentMethodNonce: (_e = (_d = receipt.dropInResult.paymentMethodNonce) === null || _d === void 0 ? void 0 : _d.nonce) !== null && _e !== void 0 ? _e : '',\n                        paymentDescription: receipt.dropInResult.paymentDescription,\n                        paymentMethodType: receipt.dropInResult.paymentMethodType,\n                    }\n                };\n            }\n            /**\n             * Handle a response from a receipt validation process.\n             *\n             * @param receipt The receipt being validated.\n             * @param response The response payload from the receipt validation process.\n             * @returns A promise that resolves when the response has been handled.\n             */\n            async handleReceiptValidationResponse(receipt, response) {\n                var _a;\n                this.log.info(\"receipt validation response: \" + JSON.stringify(response));\n                if ((response === null || response === void 0 ? void 0 : response.data) && ('transaction' in response.data)) {\n                    if (response.data.transaction.type === 'braintree') {\n                        const lCustomerId = (_a = response.data.transaction.data.transaction) === null || _a === void 0 ? void 0 : _a.customer.id;\n                        if (lCustomerId && !Braintree.customerId) {\n                            this.log.info(\"customerId updated: \" + lCustomerId);\n                            Braintree.customerId = lCustomerId;\n                        }\n                    }\n                }\n            }\n            checkSupport(functionality) {\n                return functionality === 'requestPayment';\n            }\n            async restorePurchases() {\n            }\n        }\n        Braintree.Adapter = Adapter;\n        function asDecimalString(amountMicros) {\n            const amountCents = '' + (amountMicros / 10000);\n            return (amountCents.slice(0, -2) || '0') + '.' + (amountCents.slice(-2, -1) || '0') + (amountCents.slice(-1) || '0');\n        }\n        function isBraintreeReceipt(receipt) {\n            return receipt.platform === CdvPurchase.Platform.BRAINTREE;\n        }\n        const dropInResponseIsOK = (response) => {\n            return (!!response) && !('code' in response && 'message' in response);\n        };\n        /**\n         * Returns the error response from Drop In\n         *\n         * If the \"error\" is that the user cancelled the payment, then returns undefined\n         * (as per the specification for requestPayment)\n         */\n        const dropInResponseError = (log, response) => {\n            if (!response) {\n                log.warn(\"launchDropIn failed: no response\");\n                return CdvPurchase.storeError(CdvPurchase.ErrorCode.BAD_RESPONSE, 'Braintree failed to launch drop in');\n            }\n            else {\n                // Failed\n                if (response.code === CdvPurchase.ErrorCode.PAYMENT_CANCELLED) {\n                    log.info(\"User cancelled the payment request\");\n                    return undefined;\n                }\n                log.warn(\"launchDropIn failed: \" + JSON.stringify(response));\n                return response;\n            }\n        };\n    })(Braintree = CdvPurchase.Braintree || (CdvPurchase.Braintree = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Braintree;\n    (function (Braintree) {\n        /**\n         * Cordova plugin ID for the braintree plugin.\n         */\n        const PLUGIN_ID = 'BraintreePlugin';\n        let AndroidBridge;\n        (function (AndroidBridge) {\n            /**\n             * Bridge to access native functions.\n             *\n             * This tries to export pretty raw functions from the underlying native SDKs.\n             */\n            class Bridge {\n                constructor(log) {\n                    this.log = log.child(\"AndroidBridge\");\n                }\n                /** Receive asynchronous messages from the native side */\n                listener(msg) {\n                    // Handle changes to purchase that are being notified\n                    // through the PurchasesUpdatedListener on the native side (android)\n                    this.log.debug('listener: ' + JSON.stringify(msg));\n                    if (!msg || !msg.type) {\n                        return;\n                    }\n                    if (msg.type === \"getClientToken\") {\n                        this.getClientToken();\n                    }\n                    else if (msg.type === \"ready\") {\n                    }\n                }\n                // Braintree reported an error\n                // private onError(message: string) {\n                //     this.log.warn(\"Braintree reported an error: \" + message);\n                //     // TODO - bubble that up to the client\n                // }\n                /*\n                 * Initialize the braintree client.\n                 *\n                 * @param clientTokenProvider Provide clientTokens to the SDK when it needs them.\n                 */\n                initialize(clientTokenProvider, callback) {\n                    try {\n                        // Set a listener (see \"listener()\" function above)\n                        if (typeof clientTokenProvider === 'string') {\n                            const token = clientTokenProvider;\n                            this.clientTokenProvider = (callback) => { callback(token); };\n                        }\n                        else {\n                            this.clientTokenProvider = clientTokenProvider;\n                        }\n                        this.log.info(\"exec.setListener()\");\n                        const listener = this.listener.bind(this);\n                        window.cordova.exec(listener, null, PLUGIN_ID, \"setListener\", []);\n                        callback(undefined);\n                    }\n                    catch (err) {\n                        this.log.warn(\"initialization failed: \" + (err === null || err === void 0 ? void 0 : err.message));\n                        callback(CdvPurchase.storeError(CdvPurchase.ErrorCode.SETUP, 'Failed to initialize Braintree Android Bridge: ' + (err === null || err === void 0 ? void 0 : err.message)));\n                    }\n                }\n                /**\n                 * Fetches a client token and sends it to the SDK.\n                 *\n                 * This method is called by the native side when the SDK requests a Client Token.\n                 */\n                getClientToken() {\n                    this.log.info(\"getClientToken()\");\n                    if (this.clientTokenProvider) {\n                        this.log.debug(\"clientTokenProvider set, calling.\");\n                        this.clientTokenProvider((value) => {\n                            if (typeof value === 'string') {\n                                window.cordova.exec(null, null, PLUGIN_ID, \"onClientTokenSuccess\", [value]);\n                            }\n                            else {\n                                window.cordova.exec(null, null, PLUGIN_ID, \"onClientTokenFailure\", [value.code, value.message]);\n                            }\n                        });\n                    }\n                    else {\n                        this.log.debug(\"clientTokenProvider not set, retrying later...\");\n                        setTimeout(() => this.getClientToken(), 1000); // retry after 1s (over and over)\n                    }\n                }\n                /** Returns true on Android, the only platform supported by this Braintree bridge */\n                static isSupported() {\n                    return window.cordova.platformId === 'android';\n                }\n                async isApplePaySupported() {\n                    return false;\n                }\n                launchDropIn(dropInRequest) {\n                    return new Promise(resolve => {\n                        window.cordova.exec((result) => {\n                            this.log.info(\"dropInSuccess: \" + JSON.stringify(result));\n                            resolve(result);\n                        }, (err) => {\n                            this.log.info(\"dropInFailure: \" + err);\n                            const errCode = err.split(\"|\")[0];\n                            const errMessage = err.split(\"|\").slice(1).join('');\n                            if (errCode === \"UserCanceledException\") {\n                                resolve(CdvPurchase.storeError(CdvPurchase.ErrorCode.PAYMENT_CANCELLED, errMessage));\n                            }\n                            else if (errCode === \"AuthorizationException\") {\n                                resolve(CdvPurchase.storeError(CdvPurchase.ErrorCode.UNAUTHORIZED_REQUEST_DATA, errMessage));\n                            }\n                            else {\n                                resolve(CdvPurchase.storeError(CdvPurchase.ErrorCode.UNKNOWN, err));\n                            }\n                        }, PLUGIN_ID, \"launchDropIn\", [dropInRequest]);\n                    });\n                }\n            }\n            AndroidBridge.Bridge = Bridge;\n            // /**\n            //  * Successful callback result for the presentDropInPaymentUI method.\n            //  */\n            // interface PaymentUIResult {\n            //     /**\n            //      * Indicates if the user used the cancel button to close the dialog without\n            //      * completing the payment.\n            //      */\n            //     userCancelled: boolean;\n            //     /**\n            //      * The nonce for the payment transaction (if a payment was completed).\n            //      */\n            //     nonce: string;\n            //     /**\n            //      * The payment type (if a payment was completed).\n            //      */\n            //     type: string;\n            //     /**\n            //      * A description of the payment method (if a payment was completed).\n            //      */\n            //     localizedDescription: string;\n            //     /**\n            //      * Information about the credit card used to complete a payment (if a credit card was used).\n            //      */\n            //     card: {\n            //         /**\n            //          * The last two digits of the credit card used.\n            //          */\n            //         lastTwo: string;\n            //         /**\n            //          * An enumerated value used to indicate the type of credit card used.\n            //          *\n            //          * Can be one of the following values:\n            //          *\n            //          * BTCardNetworkUnknown\n            //          * BTCardNetworkAMEX\n            //          * BTCardNetworkDinersClub\n            //          * BTCardNetworkDiscover\n            //          * BTCardNetworkMasterCard\n            //          * BTCardNetworkVisa\n            //          * BTCardNetworkJCB\n            //          * BTCardNetworkLaser\n            //          * BTCardNetworkMaestro\n            //          * BTCardNetworkUnionPay\n            //          * BTCardNetworkSolo\n            //          * BTCardNetworkSwitch\n            //          * BTCardNetworkUKMaestro\n            //          */\n            //         network: string;\n            //     };\n            //     /**\n            //      * Information about the PayPal account used to complete a payment (if a PayPal account was used).\n            //      */\n            //     payPalAccount: {\n            //         email: string;\n            //         firstName: string;\n            //         lastName: string;\n            //         phone: string;\n            //         billingAddress: string;\n            //         shippingAddress: string;\n            //         clientMetadataId: string;\n            //         payerId: string;\n            //     };\n            //     /**\n            //      * Information about the Apple Pay card used to complete a payment (if Apple Pay was used).\n            //      */\n            //     applePaycard: {\n            //     };\n            //     /**\n            //      * Information about 3D Secure card used to complete a payment (if 3D Secure was used).\n            //      */\n            //     threeDSecureInfo: {\n            //         liabilityShifted: boolean;\n            //         liabilityShiftPossible: boolean;\n            //     };\n            //     /**\n            //      * Information about Venmo account used to complete a payment (if a Venmo account was used).\n            //      */\n            //     venmoAccount: {\n            //         username: string;\n            //     };\n            // }\n        })(AndroidBridge = Braintree.AndroidBridge || (Braintree.AndroidBridge = {}));\n    })(Braintree = CdvPurchase.Braintree || (CdvPurchase.Braintree = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Braintree;\n    (function (Braintree) {\n        let IosBridge;\n        (function (IosBridge) {\n            /**\n             * Cordova plugin ID for the braintree-applepay plugin.\n             */\n            const PLUGIN_ID = 'BraintreeApplePayPlugin';\n            /**\n             * Bridge to the cordova-plugin-purchase-braintree-applepay plugin\n             */\n            class ApplePayPlugin {\n                /**\n                 * Retrieve the plugin definition.\n                 *\n                 * Useful to check if it is installed.\n                 */\n                static get() {\n                    return window.CdvPurchaseBraintreeApplePay;\n                }\n                /**\n                 * Initiate a payment with Apple Pay.\n                 */\n                static requestPayment(request) {\n                    return new Promise(resolve => {\n                        var _a;\n                        if (!((_a = ApplePayPlugin.get()) === null || _a === void 0 ? void 0 : _a.installed)) {\n                            return resolve(CdvPurchase.storeError(CdvPurchase.ErrorCode.SETUP, 'cordova-plugin-purchase-braintree-applepay does not appear to be installed.'));\n                        }\n                        else {\n                            const success = (result) => {\n                                resolve(result);\n                            };\n                            const failure = (err) => {\n                                const message = err !== null && err !== void 0 ? err : 'payment request failed';\n                                resolve(CdvPurchase.storeError(CdvPurchase.ErrorCode.PURCHASE, 'Braintree+ApplePay ERROR: ' + message));\n                            };\n                            window.cordova.exec(success, failure, PLUGIN_ID, 'presentDropInPaymentUI', [request]);\n                        }\n                    });\n                }\n                /**\n                 * Returns true if the device supports Apple Pay.\n                 *\n                 * This does not necessarily mean the user has a card setup already.\n                 */\n                static isSupported(log) {\n                    return new Promise(resolve => {\n                        var _a;\n                        if (window.cordova.platformId !== 'ios') {\n                            log.info('BraintreeApplePayPlugin is only available for ios.');\n                            return resolve(false);\n                        }\n                        if (!((_a = ApplePayPlugin.get()) === null || _a === void 0 ? void 0 : _a.installed)) {\n                            log.info('BraintreeApplePayPlugin does not appear to be installed.');\n                            return resolve(false);\n                        }\n                        try {\n                            window.cordova.exec((result) => {\n                                resolve(result);\n                            }, () => {\n                                log.info('BraintreeApplePayPlugin is not available.');\n                                resolve(false);\n                            }, PLUGIN_ID, \"isApplePaySupported\", []);\n                        }\n                        catch (err) {\n                            log.info('BraintreeApplePayPlugin is not installed.');\n                            resolve(false);\n                        }\n                    });\n                }\n            }\n            IosBridge.ApplePayPlugin = ApplePayPlugin;\n        })(IosBridge = Braintree.IosBridge || (Braintree.IosBridge = {}));\n    })(Braintree = CdvPurchase.Braintree || (CdvPurchase.Braintree = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Braintree;\n    (function (Braintree) {\n        /**\n         * Cordova plugin ID for the braintree ios plugin.\n         */\n        const PLUGIN_ID = 'BraintreePlugin';\n        let IosBridge;\n        (function (IosBridge) {\n            class Bridge {\n                constructor(log, clientTokenProvider, applePayOptions) {\n                    this.log = log.child(\"IosBridge\");\n                    this.clientTokenProvider = clientTokenProvider;\n                    this.applePayOptions = applePayOptions;\n                }\n                initialize(verbosity, callback) {\n                    window.cordova.exec(null, null, \"BraintreePlugin\", \"setVerbosity\", [verbosity.verbosity]);\n                    window.cordova.exec(message => this.log.debug('(Native) ' + message), null, \"BraintreePlugin\", \"setLogger\", []);\n                    setTimeout(() => callback(undefined), 0);\n                }\n                async continueDropInForApplePay(paymentRequest, DropInRequest, dropInResult) {\n                    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n                    const request = ((_b = (_a = this.applePayOptions) === null || _a === void 0 ? void 0 : _a.preparePaymentRequest) === null || _b === void 0 ? void 0 : _b.call(_a, paymentRequest)) || {\n                        merchantCapabilities: [CdvPurchase.ApplePay.MerchantCapability.ThreeDS],\n                    };\n                    if (!request.paymentSummaryItems) {\n                        const items = paymentRequest.items.filter(p => p).map((product, index) => {\n                            var _a, _b, _c;\n                            return ({\n                                type: 'final',\n                                label: (product === null || product === void 0 ? void 0 : product.title) || (product === null || product === void 0 ? void 0 : product.id) || `Item #${index + 1}`,\n                                amount: `${Math.round(((_c = (_b = (_a = product === null || product === void 0 ? void 0 : product.pricing) === null || _a === void 0 ? void 0 : _a.priceMicros) !== null && _b !== void 0 ? _b : paymentRequest.amountMicros) !== null && _c !== void 0 ? _c : 0) / 10000) / 100}`,\n                            });\n                        });\n                        const total = {\n                            type: 'final',\n                            label: (_d = (_c = this.applePayOptions) === null || _c === void 0 ? void 0 : _c.companyName) !== null && _d !== void 0 ? _d : 'Total',\n                            amount: `${Math.round(((_e = paymentRequest.amountMicros) !== null && _e !== void 0 ? _e : 0) / 10000) / 100}`,\n                        };\n                        request.paymentSummaryItems = [...items, total];\n                    }\n                    const result = await IosBridge.ApplePayPlugin.requestPayment(request);\n                    this.log.info('Result from Apple Pay: ' + JSON.stringify(result));\n                    if ('isError' in result)\n                        return result;\n                    if (result.userCancelled) {\n                        return CdvPurchase.storeError(CdvPurchase.ErrorCode.PAYMENT_CANCELLED, 'User cancelled the payment request');\n                    }\n                    return {\n                        paymentMethodNonce: {\n                            isDefault: false,\n                            nonce: (_g = (_f = result.applePayCardNonce) === null || _f === void 0 ? void 0 : _f.nonce) !== null && _g !== void 0 ? _g : '',\n                            type: (_j = (_h = result.applePayCardNonce) === null || _h === void 0 ? void 0 : _h.type) !== null && _j !== void 0 ? _j : '',\n                        },\n                        paymentMethodType: dropInResult.paymentMethodType,\n                        deviceData: dropInResult.deviceData,\n                        paymentDescription: dropInResult.paymentDescription,\n                    };\n                }\n                launchDropIn(paymentRequest, dropInRequest) {\n                    return new Promise(async (resolve) => {\n                        const onSuccess = (result) => {\n                            this.log.info(\"dropInSuccess: \" + JSON.stringify(result));\n                            if (result.paymentMethodType === Braintree.DropIn.PaymentMethod.APPLE_PAY) {\n                                this.log.info(\"it's an ApplePay request, we have to process it.\");\n                                this.continueDropInForApplePay(paymentRequest, dropInRequest, result).then(resolve);\n                            }\n                            else {\n                                resolve(result);\n                            }\n                        };\n                        const onError = (errorString) => {\n                            this.log.info(\"dropInFailure: \" + errorString);\n                            const [errCode, errMessage] = errorString.split('|');\n                            if (errCode === \"UserCanceledException\") {\n                                resolve(CdvPurchase.storeError(CdvPurchase.ErrorCode.PAYMENT_CANCELLED, errMessage));\n                            }\n                            else {\n                                resolve(CdvPurchase.storeError(CdvPurchase.ErrorCode.UNKNOWN, 'ERROR ' + errCode + ': ' + errMessage));\n                            }\n                        };\n                        this.clientTokenProvider((clientToken) => {\n                            if (typeof clientToken === 'string')\n                                window.cordova.exec(onSuccess, onError, \"BraintreePlugin\", \"launchDropIn\", [clientToken, dropInRequest]);\n                            else // failed to get token\n                                resolve(clientToken);\n                        });\n                    });\n                }\n                braintreePlugin() {\n                    return window.CdvPurchaseBraintree;\n                }\n                static isSupported() {\n                    return window.cordova.platformId === 'ios';\n                }\n            }\n            IosBridge.Bridge = Bridge;\n        })(IosBridge = Braintree.IosBridge || (Braintree.IosBridge = {}));\n    })(Braintree = CdvPurchase.Braintree || (CdvPurchase.Braintree = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Braintree;\n    (function (Braintree) {\n        let DropIn;\n        (function (DropIn) {\n            /** How a field will behave in CardForm. */\n            let CardFormFieldStatus;\n            (function (CardFormFieldStatus) {\n                CardFormFieldStatus[CardFormFieldStatus[\"DISABLED\"] = 0] = \"DISABLED\";\n                CardFormFieldStatus[CardFormFieldStatus[\"OPTIONAL\"] = 1] = \"OPTIONAL\";\n                CardFormFieldStatus[CardFormFieldStatus[\"REQUIRED\"] = 2] = \"REQUIRED\";\n            })(CardFormFieldStatus = DropIn.CardFormFieldStatus || (DropIn.CardFormFieldStatus = {}));\n        })(DropIn = Braintree.DropIn || (Braintree.DropIn = {}));\n    })(Braintree = CdvPurchase.Braintree || (CdvPurchase.Braintree = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Braintree;\n    (function (Braintree) {\n        let DropIn;\n        (function (DropIn) {\n            /** Payment method used or selected by the user. */\n            let PaymentMethod;\n            (function (PaymentMethod) {\n                /** Google only */\n                PaymentMethod[\"GOOGLE_PAY\"] = \"GOOGLE_PAY\";\n                /** ios only */\n                PaymentMethod[\"LASER\"] = \"LASER\";\n                /** ios only */\n                PaymentMethod[\"UK_MAESTRO\"] = \"UK_MAESTRO\";\n                /** ios only */\n                PaymentMethod[\"SWITCH\"] = \"SWITCH\";\n                /** ios only */\n                PaymentMethod[\"SOLOR\"] = \"SOLO\";\n                /** ios only */\n                PaymentMethod[\"APPLE_PAY\"] = \"APPLE_PAY\";\n                PaymentMethod[\"AMEX\"] = \"AMEX\";\n                PaymentMethod[\"DINERS_CLUB\"] = \"DINERS_CLUB\";\n                PaymentMethod[\"DISCOVER\"] = \"DISCOVER\";\n                PaymentMethod[\"JCB\"] = \"JCB\";\n                PaymentMethod[\"MAESTRO\"] = \"MAESTRO\";\n                PaymentMethod[\"MASTERCARD\"] = \"MASTERCARD\";\n                PaymentMethod[\"PAYPAL\"] = \"PAYPAL\";\n                PaymentMethod[\"VISA\"] = \"VISA\";\n                PaymentMethod[\"VENMO\"] = \"VENMO\";\n                PaymentMethod[\"UNIONPAY\"] = \"UNIONPAY\";\n                PaymentMethod[\"HIPER\"] = \"HIPER\";\n                PaymentMethod[\"HIPERCARD\"] = \"HIPERCARD\";\n                PaymentMethod[\"UNKNOWN\"] = \"UNKNOWN\";\n            })(PaymentMethod = DropIn.PaymentMethod || (DropIn.PaymentMethod = {}));\n        })(DropIn = Braintree.DropIn || (Braintree.DropIn = {}));\n    })(Braintree = CdvPurchase.Braintree || (CdvPurchase.Braintree = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Braintree;\n    (function (Braintree) {\n        let GooglePay;\n        (function (GooglePay) {\n            /**\n             * The Google Pay API will collect the billing address for you if required\n             */\n            let BillingAddressFormat;\n            (function (BillingAddressFormat) {\n                /**\n                 * When this format is used, the billing address returned will only contain the minimal info, including name, country code, and postal code.\n                 *\n                 * Note that some countries do not use postal codes, so the postal code field will be empty in those countries.\n                 */\n                BillingAddressFormat[BillingAddressFormat[\"MIN\"] = 0] = \"MIN\";\n                /**\n                 * When this format is used, the billing address returned will be the full address.\n                 *\n                 * Only select this format when it's required to process the order since it can increase friction during the checkout process and can lead to a lower conversion rate.\n                 */\n                BillingAddressFormat[BillingAddressFormat[\"FULL\"] = 1] = \"FULL\";\n            })(BillingAddressFormat = GooglePay.BillingAddressFormat || (GooglePay.BillingAddressFormat = {}));\n            /**\n             * This enum represents the status of the total price of a transaction.\n             *\n             * It can take on one of the following values:\n             * - TotalPriceStatus.NOT_CURRENTLY_KNOWN: The total price is not currently known.\n             * - TotalPriceStatus.ESTIMATED: The total price is an estimate.\n             * - TotalPriceStatus.FINAL: The total price is final.\n             */\n            let TotalPriceStatus;\n            (function (TotalPriceStatus) {\n                /** The total price is not currently known. */\n                TotalPriceStatus[TotalPriceStatus[\"NOT_CURRENTLY_KNOWN\"] = 1] = \"NOT_CURRENTLY_KNOWN\";\n                /** The total price is an estimate. */\n                TotalPriceStatus[TotalPriceStatus[\"ESTIMATED\"] = 2] = \"ESTIMATED\";\n                /** The total price is final. */\n                TotalPriceStatus[TotalPriceStatus[\"FINAL\"] = 3] = \"FINAL\";\n            })(TotalPriceStatus = GooglePay.TotalPriceStatus || (GooglePay.TotalPriceStatus = {}));\n        })(GooglePay = Braintree.GooglePay || (Braintree.GooglePay = {}));\n    })(Braintree = CdvPurchase.Braintree || (CdvPurchase.Braintree = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Braintree;\n    (function (Braintree) {\n        let ThreeDSecure;\n        (function (ThreeDSecure) {\n            /** The account type */\n            let AccountType;\n            (function (AccountType) {\n                AccountType[\"UNSPECIFIED\"] = \"00\";\n                AccountType[\"CREDIT\"] = \"01\";\n                AccountType[\"DEBIT\"] = \"02\";\n            })(AccountType = ThreeDSecure.AccountType || (ThreeDSecure.AccountType = {}));\n            /** The shipping method */\n            let ShippingMethod;\n            (function (ShippingMethod) {\n                /** Unspecified */\n                ShippingMethod[ShippingMethod[\"UNSPECIFIED\"] = 0] = \"UNSPECIFIED\";\n                /** Same say */\n                ShippingMethod[ShippingMethod[\"SAME_DAY\"] = 1] = \"SAME_DAY\";\n                /** Overnight / Expedited */\n                ShippingMethod[ShippingMethod[\"EXPEDITED\"] = 2] = \"EXPEDITED\";\n                /** Priority */\n                ShippingMethod[ShippingMethod[\"PRIORITY\"] = 3] = \"PRIORITY\";\n                /** Ground */\n                ShippingMethod[ShippingMethod[\"GROUND\"] = 4] = \"GROUND\";\n                /** Electronic delivery */\n                ShippingMethod[ShippingMethod[\"ELECTRONIC_DELIVERY\"] = 5] = \"ELECTRONIC_DELIVERY\";\n                /** Ship to store */\n                ShippingMethod[ShippingMethod[\"SHIP_TO_STORE\"] = 6] = \"SHIP_TO_STORE\";\n            })(ShippingMethod = ThreeDSecure.ShippingMethod || (ThreeDSecure.ShippingMethod = {}));\n            let Version;\n            (function (Version) {\n                /** 3DS 1.0 */\n                Version[Version[\"V1\"] = 0] = \"V1\";\n                /** 3DS 2.0 */\n                Version[Version[\"V2\"] = 1] = \"V2\";\n            })(Version = ThreeDSecure.Version || (ThreeDSecure.Version = {}));\n        })(ThreeDSecure = Braintree.ThreeDSecure || (Braintree.ThreeDSecure = {}));\n    })(Braintree = CdvPurchase.Braintree || (CdvPurchase.Braintree = {}));\n})(CdvPurchase || (CdvPurchase = {}));\n/// <reference path=\"../../receipt.ts\" />\n/// <reference path=\"../../transaction.ts\" />\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let GooglePlay;\n    (function (GooglePlay) {\n        class Transaction extends CdvPurchase.Transaction {\n            constructor(purchase, parentReceipt, decorator) {\n                super(CdvPurchase.Platform.GOOGLE_PLAY, parentReceipt, decorator);\n                this.nativePurchase = purchase;\n                this.refresh(purchase);\n            }\n            static toState(state, isAcknowledged) {\n                switch (state) {\n                    case GooglePlay.Bridge.PurchaseState.PENDING:\n                        return CdvPurchase.TransactionState.INITIATED;\n                    case GooglePlay.Bridge.PurchaseState.PURCHASED:\n                        // if (isAcknowledged)\n                        // return TransactionState.FINISHED; (this prevents receipt validation...)\n                        // else\n                        return CdvPurchase.TransactionState.APPROVED;\n                    case GooglePlay.Bridge.PurchaseState.UNSPECIFIED_STATE:\n                        return CdvPurchase.TransactionState.UNKNOWN_STATE;\n                }\n            }\n            /**\n             * Refresh the value in the transaction based on the native purchase update\n             */\n            refresh(purchase) {\n                this.nativePurchase = purchase;\n                this.transactionId = `${purchase.orderId || purchase.purchaseToken}`;\n                this.purchaseId = `${purchase.purchaseToken}`;\n                this.products = purchase.productIds.map(productId => ({ id: productId }));\n                if (purchase.purchaseTime)\n                    this.purchaseDate = new Date(purchase.purchaseTime);\n                this.isPending = (purchase.getPurchaseState === GooglePlay.Bridge.PurchaseState.PENDING);\n                if (typeof purchase.acknowledged !== 'undefined')\n                    this.isAcknowledged = purchase.acknowledged;\n                if (typeof purchase.autoRenewing !== 'undefined')\n                    this.renewalIntent = purchase.autoRenewing ? CdvPurchase.RenewalIntent.RENEW : CdvPurchase.RenewalIntent.LAPSE;\n                this.state = Transaction.toState(purchase.getPurchaseState, purchase.acknowledged);\n            }\n        }\n        GooglePlay.Transaction = Transaction;\n        class Receipt extends CdvPurchase.Receipt {\n            /** @internal */\n            constructor(purchase, decorator) {\n                super(CdvPurchase.Platform.GOOGLE_PLAY, decorator);\n                this.transactions = [new Transaction(purchase, this, decorator)];\n                this.purchaseToken = purchase.purchaseToken;\n                this.orderId = purchase.orderId;\n            }\n            /** Refresh the content of the purchase based on the native BridgePurchase */\n            refreshPurchase(purchase) {\n                var _a;\n                (_a = this.transactions[0]) === null || _a === void 0 ? void 0 : _a.refresh(purchase);\n                this.orderId = purchase.orderId;\n            }\n        }\n        GooglePlay.Receipt = Receipt;\n        class Adapter {\n            constructor(context, autoRefreshIntervalMillis = 1000 * 3600 * 24) {\n                /** Adapter identifier */\n                this.id = CdvPurchase.Platform.GOOGLE_PLAY;\n                /** Adapter name */\n                this.name = 'GooglePlay';\n                /** Has the adapter been successfully initialized */\n                this.ready = false;\n                this._receipts = [];\n                /** The GooglePlay bridge */\n                this.bridge = new GooglePlay.Bridge.Bridge();\n                /** Prevent double initialization */\n                this.initialized = false;\n                /** Used to retry failed commands */\n                this.retry = new CdvPurchase.Internal.Retry();\n                this.autoRefreshIntervalMillis = 0;\n                if (Adapter._instance)\n                    throw new Error('GooglePlay adapter already initialized');\n                this._products = new GooglePlay.Products(context.apiDecorators);\n                this.autoRefreshIntervalMillis = autoRefreshIntervalMillis;\n                this.context = context;\n                this.log = context.log.child('GooglePlay');\n                Adapter._instance = this;\n            }\n            /** List of products managed by the GooglePlay adapter */\n            get products() { return this._products.products; }\n            get receipts() { return this._receipts; }\n            /** Returns true on Android, the only platform supported by this adapter */\n            get isSupported() {\n                return window.cordova.platformId === 'android';\n            }\n            async initialize() {\n                this.log.info(\"Initialize\");\n                if (this.initializationPromise)\n                    return this.initializationPromise;\n                return this.initializationPromise = new Promise((resolve) => {\n                    const bridgeLogger = this.log.child('Bridge');\n                    const iabOptions = {\n                        onSetPurchases: this.onSetPurchases.bind(this),\n                        onPurchasesUpdated: this.onPurchasesUpdated.bind(this),\n                        onPurchaseConsumed: this.onPurchaseConsumed.bind(this),\n                        showLog: this.context.verbosity >= CdvPurchase.LogLevel.DEBUG ? true : false,\n                        log: (msg) => bridgeLogger.info(msg),\n                    };\n                    const iabReady = () => {\n                        this.log.debug(\"Ready\");\n                        // Auto-refresh every 24 hours (or autoRefreshIntervalMillis)\n                        if (this.autoRefreshIntervalMillis > 0) {\n                            window.setInterval(() => this.getPurchases(), this.autoRefreshIntervalMillis);\n                        }\n                        resolve(undefined);\n                    };\n                    const iabError = (err) => {\n                        this.initialized = false;\n                        this.context.error(CdvPurchase.storeError(CdvPurchase.ErrorCode.SETUP, \"Init failed - \" + err));\n                        this.retry.retry(() => this.initialize());\n                    };\n                    this.bridge.init(iabReady, iabError, iabOptions);\n                });\n            }\n            /** Prepare the list of SKUs sorted by type */\n            getSkusOf(products) {\n                const inAppSkus = [];\n                const subsSkus = [];\n                for (const product of products) {\n                    if (product.type === CdvPurchase.ProductType.PAID_SUBSCRIPTION)\n                        subsSkus.push(product.id);\n                    else\n                        inAppSkus.push(product.id);\n                }\n                return { inAppSkus, subsSkus };\n            }\n            /** @inheritdoc */\n            loadReceipts() {\n                return new Promise((resolve) => {\n                    // let's also refresh purchases\n                    this.getPurchases()\n                        .then(err => {\n                        resolve(this._receipts);\n                    });\n                });\n            }\n            /** @inheritDoc */\n            loadProducts(products) {\n                return new Promise((resolve) => {\n                    this.log.debug(\"Load: \" + JSON.stringify(products));\n                    /** Called when a list of product definitions have been loaded */\n                    const iabLoaded = (validProducts) => {\n                        this.log.debug(\"Loaded: \" + JSON.stringify(validProducts));\n                        const ret = products.map(registeredProduct => {\n                            const validProduct = validProducts.find(vp => vp.productId === registeredProduct.id);\n                            if (validProduct && validProduct.productId) {\n                                return this._products.addProduct(registeredProduct, validProduct);\n                            }\n                            else {\n                                return CdvPurchase.storeError(CdvPurchase.ErrorCode.INVALID_PRODUCT_ID, `Product with id ${registeredProduct.id} not found.`);\n                            }\n                        });\n                        resolve(ret);\n                    };\n                    /** Start loading products */\n                    const go = () => {\n                        const { inAppSkus, subsSkus } = this.getSkusOf(products);\n                        this.log.debug(\"getAvailableProducts: \" + JSON.stringify(inAppSkus) + \" | \" + JSON.stringify(subsSkus));\n                        this.bridge.getAvailableProducts(inAppSkus, subsSkus, iabLoaded, (err) => {\n                            // failed to load products, retry later.\n                            this.retry.retry(go);\n                            this.context.error(CdvPurchase.storeError(CdvPurchase.ErrorCode.LOAD, 'Loading product info failed - ' + err + ' - retrying later...'));\n                        });\n                    };\n                    go();\n                });\n            }\n            /** @inheritDoc */\n            finish(transaction) {\n                return new Promise(resolve => {\n                    const onSuccess = () => {\n                        if (transaction.state !== CdvPurchase.TransactionState.FINISHED) {\n                            transaction.state = CdvPurchase.TransactionState.FINISHED;\n                            this.context.listener.receiptsUpdated(CdvPurchase.Platform.GOOGLE_PLAY, [transaction.parentReceipt]);\n                        }\n                        resolve(undefined);\n                    };\n                    const onFailure = (message, code) => resolve(CdvPurchase.storeError(code || CdvPurchase.ErrorCode.UNKNOWN, message));\n                    const firstProduct = transaction.products[0];\n                    if (!firstProduct)\n                        return resolve(CdvPurchase.storeError(CdvPurchase.ErrorCode.FINISH, 'Cannot finish a transaction with no product'));\n                    const product = this._products.getProduct(firstProduct.id);\n                    if (!product)\n                        return resolve(CdvPurchase.storeError(CdvPurchase.ErrorCode.FINISH, 'Cannot finish transaction, unknown product ' + firstProduct.id));\n                    const receipt = this._receipts.find(r => r.hasTransaction(transaction));\n                    if (!receipt)\n                        return resolve(CdvPurchase.storeError(CdvPurchase.ErrorCode.FINISH, 'Cannot finish transaction, linked receipt not found.'));\n                    if (!receipt.purchaseToken)\n                        return resolve(CdvPurchase.storeError(CdvPurchase.ErrorCode.FINISH, 'Cannot finish transaction, linked receipt contains no purchaseToken.'));\n                    if (product.type === CdvPurchase.ProductType.NON_RENEWING_SUBSCRIPTION || product.type === CdvPurchase.ProductType.CONSUMABLE) {\n                        if (!transaction.isConsumed)\n                            return this.bridge.consumePurchase(onSuccess, onFailure, receipt.purchaseToken);\n                    }\n                    else { // subscription and non-consumable\n                        if (!transaction.isAcknowledged)\n                            return this.bridge.acknowledgePurchase(onSuccess, onFailure, receipt.purchaseToken);\n                    }\n                    // nothing to do\n                    resolve(undefined);\n                });\n            }\n            /** Called by the bridge when a purchase has been consumed */\n            onPurchaseConsumed(purchase) {\n                this.log.debug(\"onPurchaseConsumed: \" + purchase.orderId);\n                purchase.acknowledged = true; // consumed is the equivalent of acknowledged for consumables\n                this.onPurchasesUpdated([purchase]);\n            }\n            /** Called when the platform reports update for some purchases */\n            onPurchasesUpdated(purchases) {\n                this.log.debug(\"onPurchaseUpdated: \" + purchases.map(p => p.orderId).join(', '));\n                // GooglePlay generates one receipt for each purchase\n                purchases.forEach(purchase => {\n                    const existingReceipt = this.receipts.find(r => r.purchaseToken === purchase.purchaseToken);\n                    if (existingReceipt) {\n                        existingReceipt.refreshPurchase(purchase);\n                        this.context.listener.receiptsUpdated(CdvPurchase.Platform.GOOGLE_PLAY, [existingReceipt]);\n                    }\n                    else {\n                        const newReceipt = new Receipt(purchase, this.context.apiDecorators);\n                        this.receipts.push(newReceipt);\n                        this.context.listener.receiptsUpdated(CdvPurchase.Platform.GOOGLE_PLAY, [newReceipt]);\n                    }\n                });\n            }\n            /** Called when the platform reports some purchases */\n            onSetPurchases(purchases) {\n                this.log.debug(\"onSetPurchases: \" + JSON.stringify(purchases));\n                this.onPurchasesUpdated(purchases);\n                this.context.listener.receiptsReady(CdvPurchase.Platform.GOOGLE_PLAY);\n            }\n            onPriceChangeConfirmationResult(result) {\n            }\n            /** Refresh purchases from GooglePlay */\n            getPurchases() {\n                return new Promise(resolve => {\n                    this.log.debug('getPurchases');\n                    const success = () => {\n                        this.log.debug('getPurchases success');\n                        setTimeout(() => resolve(undefined), 0);\n                    };\n                    const failure = (message, code) => {\n                        this.log.warn('getPurchases failed: ' + message + ' (' + code + ')');\n                        setTimeout(() => resolve(CdvPurchase.storeError(code || CdvPurchase.ErrorCode.UNKNOWN, message)), 0);\n                    };\n                    this.bridge.getPurchases(success, failure);\n                });\n            }\n            /** @inheritDoc */\n            async order(offer, additionalData) {\n                return new Promise(resolve => {\n                    this.log.info(\"Order - \" + JSON.stringify(offer));\n                    const buySuccess = () => resolve(undefined);\n                    const buyFailed = (message, code) => {\n                        this.log.warn('Order failed: ' + JSON.stringify({ message, code }));\n                        resolve(CdvPurchase.storeError(code !== null && code !== void 0 ? code : CdvPurchase.ErrorCode.UNKNOWN, message));\n                    };\n                    if (offer.productType === CdvPurchase.ProductType.PAID_SUBSCRIPTION) {\n                        const idAndToken = offer.id; // offerId contains the productId and token (format productId@offerToken)\n                        // find if the user already owns a product in the same group\n                        const oldPurchaseToken = this.findOldPurchaseToken(offer.productId, offer.productGroup);\n                        if (oldPurchaseToken) {\n                            if (!additionalData.googlePlay)\n                                additionalData.googlePlay = { oldPurchaseToken };\n                            else if (!additionalData.googlePlay.oldPurchaseToken) {\n                                additionalData.googlePlay.oldPurchaseToken = oldPurchaseToken;\n                            }\n                        }\n                        this.bridge.subscribe(buySuccess, buyFailed, idAndToken, additionalData);\n                    }\n                    else {\n                        this.bridge.buy(buySuccess, buyFailed, offer.productId, additionalData);\n                    }\n                });\n            }\n            /**\n             * Find a purchaseToken for an owned product in the same group as the requested one.\n             *\n             * @param productId - The product identifier to request matching purchaseToken for.\n             * @param productGroup - The group of the product to request matching purchaseToken for.\n             *\n             * @return A purchaseToken, undefined if none have been found.\n             */\n            findOldPurchaseToken(productId, productGroup) {\n                if (!productGroup)\n                    return undefined;\n                const oldReceipt = this._receipts.find(r => {\n                    return !!r.transactions.find(t => {\n                        return !!t.products.find(p => {\n                            const product = this._products.getProduct(p.id);\n                            if (!product)\n                                return false;\n                            if (!CdvPurchase.Internal.LocalReceipts.isOwned([r], product))\n                                return false;\n                            return (p.id === productId) || (productGroup && product.group === productGroup);\n                        });\n                    });\n                });\n                return oldReceipt === null || oldReceipt === void 0 ? void 0 : oldReceipt.purchaseToken;\n            }\n            /**\n             * Prepare for receipt validation\n             */\n            async receiptValidationBody(receipt) {\n                var _a;\n                const transaction = receipt.transactions[0];\n                if (!transaction)\n                    return;\n                const productId = (_a = transaction.products[0]) === null || _a === void 0 ? void 0 : _a.id;\n                if (!productId)\n                    return;\n                const product = this._products.getProduct(productId);\n                if (!product)\n                    return;\n                const purchase = transaction.nativePurchase;\n                return {\n                    id: productId,\n                    type: product.type,\n                    offers: product.offers,\n                    products: this._products.products,\n                    transaction: {\n                        type: CdvPurchase.Platform.GOOGLE_PLAY,\n                        id: receipt.transactions[0].transactionId,\n                        purchaseToken: purchase.purchaseToken,\n                        signature: purchase.signature,\n                        receipt: purchase.receipt,\n                    }\n                };\n            }\n            async handleReceiptValidationResponse(receipt, response) {\n                var _a;\n                if (response === null || response === void 0 ? void 0 : response.ok) {\n                    const transaction = (_a = response === null || response === void 0 ? void 0 : response.data) === null || _a === void 0 ? void 0 : _a.transaction;\n                    if ((transaction === null || transaction === void 0 ? void 0 : transaction.type) !== CdvPurchase.Platform.GOOGLE_PLAY)\n                        return;\n                    switch (transaction.kind) {\n                        case 'androidpublisher#productPurchase':\n                            break;\n                        case 'androidpublisher#subscriptionPurchase':\n                            break;\n                        case 'androidpublisher#subscriptionPurchaseV2':\n                            transaction;\n                            break;\n                        case 'fovea#subscriptionGone':\n                            // the transaction doesn't exist anymore\n                            break;\n                    }\n                }\n                return; // Nothing specific to do on GooglePlay\n            }\n            async requestPayment(payment, additionalData) {\n                return CdvPurchase.storeError(CdvPurchase.ErrorCode.UNKNOWN, 'requestPayment not supported');\n            }\n            async manageSubscriptions() {\n                this.bridge.manageSubscriptions();\n                return;\n            }\n            async manageBilling() {\n                this.bridge.manageBilling();\n                return;\n            }\n            checkSupport(functionality) {\n                const supported = [\n                    'order', 'manageBilling', 'manageSubscriptions'\n                ];\n                return supported.indexOf(functionality) >= 0;\n            }\n            restorePurchases() {\n                return new Promise(resolve => {\n                    this.bridge.getPurchases(resolve, (message, code) => {\n                        this.log.warn('getPurchases() failed: ' + (code !== null && code !== void 0 ? code : 'ERROR') + ': ' + message);\n                        resolve();\n                    });\n                });\n            }\n        }\n        GooglePlay.Adapter = Adapter;\n    })(GooglePlay = CdvPurchase.GooglePlay || (CdvPurchase.GooglePlay = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let GooglePlay;\n    (function (GooglePlay) {\n        let Bridge;\n        (function (Bridge) {\n            /* export namespace V11 {\n                export interface Subscription {\n                    product_format: \"v11.0\";\n                    productId: string;\n                    title: string;\n                    name: string;\n                    billing_period: string;\n                    billing_period_unit: string;\n                    description: string;\n                    price: string;\n                    price_amount_micros: string;\n                    price_currency_code: string;\n                    trial_period: string;\n                    trial_period_unit: string;\n                    formatted_price: string;\n                    freeTrialPeriod: string;\n                    introductoryPrice: string;\n                    introductoryPriceAmountMicros: string;\n                    introductoryPriceCycles: string;\n                    introductoryPricePeriod: string;\n                    subscriptionPeriod: string;\n                }\n            } */\n            let RecurrenceMode;\n            (function (RecurrenceMode) {\n                RecurrenceMode[\"FINITE_RECURRING\"] = \"FINITE_RECURRING\";\n                RecurrenceMode[\"INFINITE_RECURRING\"] = \"INFINITE_RECURRING\";\n                RecurrenceMode[\"NON_RECURRING\"] = \"NON_RECURRING\";\n            })(RecurrenceMode = Bridge.RecurrenceMode || (Bridge.RecurrenceMode = {}));\n        })(Bridge = GooglePlay.Bridge || (GooglePlay.Bridge = {}));\n    })(GooglePlay = CdvPurchase.GooglePlay || (CdvPurchase.GooglePlay = {}));\n})(CdvPurchase || (CdvPurchase = {}));\n/*\n * Copyright (C) 2012-2013 by Guillaume Charhon\n * Modifications 10/16/2013 by Brian Thurlow\n */\n/*global cordova */\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let GooglePlay;\n    (function (GooglePlay) {\n        /** Replace SKU ProrationMode.\n         *\n         * See https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.ProrationMode */\n        let ProrationMode;\n        (function (ProrationMode) {\n            /** Replacement takes effect immediately, and the remaining time will be prorated and credited to the user. */\n            ProrationMode[\"IMMEDIATE_WITH_TIME_PRORATION\"] = \"IMMEDIATE_WITH_TIME_PRORATION\";\n            /** Replacement takes effect immediately, and the billing cycle remains the same. */\n            ProrationMode[\"IMMEDIATE_AND_CHARGE_PRORATED_PRICE\"] = \"IMMEDIATE_AND_CHARGE_PRORATED_PRICE\";\n            /** Replacement takes effect immediately, and the new price will be charged on next recurrence time. */\n            ProrationMode[\"IMMEDIATE_WITHOUT_PRORATION\"] = \"IMMEDIATE_WITHOUT_PRORATION\";\n            /** Replacement takes effect when the old plan expires, and the new price will be charged at the same time. */\n            ProrationMode[\"DEFERRED\"] = \"DEFERRED\";\n            /** Replacement takes effect immediately, and the user is charged full price of new plan and is given a full billing cycle of subscription, plus remaining prorated time from the old plan. */\n            ProrationMode[\"IMMEDIATE_AND_CHARGE_FULL_PRICE\"] = \"IMMEDIATE_AND_CHARGE_FULL_PRICE\";\n        })(ProrationMode = GooglePlay.ProrationMode || (GooglePlay.ProrationMode = {}));\n        let Bridge;\n        (function (Bridge_2) {\n            let log = function log(msg) {\n                console.log(\"InAppBilling[js]: \" + msg);\n            };\n            let PurchaseState;\n            (function (PurchaseState) {\n                PurchaseState[PurchaseState[\"UNSPECIFIED_STATE\"] = 0] = \"UNSPECIFIED_STATE\";\n                PurchaseState[PurchaseState[\"PURCHASED\"] = 1] = \"PURCHASED\";\n                PurchaseState[PurchaseState[\"PENDING\"] = 2] = \"PENDING\";\n            })(PurchaseState = Bridge_2.PurchaseState || (Bridge_2.PurchaseState = {}));\n            class Bridge {\n                constructor() {\n                    this.options = {};\n                }\n                init(success, fail, options) {\n                    if (!options)\n                        options = {};\n                    if (options.log)\n                        log = options.log;\n                    this.options = {\n                        showLog: options.showLog !== false,\n                        onPurchaseConsumed: options.onPurchaseConsumed,\n                        onPurchasesUpdated: options.onPurchasesUpdated,\n                        onSetPurchases: options.onSetPurchases,\n                    };\n                    if (this.options.showLog) {\n                        log('setup ok');\n                    }\n                    // Set a listener (see \"listener()\" function above)\n                    const listener = this.listener.bind(this);\n                    window.cordova.exec(listener, function (err) { }, \"InAppBillingPlugin\", \"setListener\", []);\n                    window.cordova.exec(success, errorCb(fail), \"InAppBillingPlugin\", \"init\", []);\n                }\n                load(success, fail, skus, inAppSkus, subsSkus) {\n                    var hasSKUs = false;\n                    // Optional Load SKUs to Inventory.\n                    if (typeof skus !== \"undefined\") {\n                        if (typeof skus === \"string\") {\n                            skus = [skus];\n                        }\n                        if (skus.length > 0) {\n                            if (typeof skus[0] !== 'string') {\n                                var msg = 'invalid productIds: ' + JSON.stringify(skus);\n                                if (this.options.showLog) {\n                                    log(msg);\n                                }\n                                fail(msg, CdvPurchase.ErrorCode.INVALID_PRODUCT_ID);\n                                return;\n                            }\n                            if (this.options.showLog) {\n                                log('load ' + JSON.stringify(skus));\n                            }\n                            hasSKUs = true;\n                        }\n                    }\n                    window.cordova.exec(success, errorCb(fail), \"InAppBillingPlugin\", \"load\", [skus, inAppSkus, subsSkus]);\n                }\n                listener(msg) {\n                    // Handle changes to purchase that are being notified\n                    // through the PurchasesUpdatedListener on the native side (android)\n                    if (this.options.showLog) {\n                        log('listener: ' + JSON.stringify(msg));\n                    }\n                    if (!msg || !msg.type) {\n                        return;\n                    }\n                    if (msg.type === \"setPurchases\" && this.options.onSetPurchases) {\n                        this.options.onSetPurchases(msg.data.purchases);\n                    }\n                    if (msg.type === \"purchasesUpdated\" && this.options.onPurchasesUpdated) {\n                        this.options.onPurchasesUpdated(msg.data.purchases);\n                    }\n                    if (msg.type === \"purchaseConsumed\" && this.options.onPurchaseConsumed) {\n                        this.options.onPurchaseConsumed(msg.data.purchase);\n                    }\n                    if (msg.type === \"onPriceChangeConfirmationResultOK\" && this.options.onPriceChangeConfirmationResult) {\n                        this.options.onPriceChangeConfirmationResult(\"OK\");\n                    }\n                    if (msg.type === \"onPriceChangeConfirmationResultUserCanceled\" && this.options.onPriceChangeConfirmationResult) {\n                        this.options.onPriceChangeConfirmationResult(\"UserCanceled\");\n                    }\n                    if (msg.type === \"onPriceChangeConfirmationResultUnknownSku\" && this.options.onPriceChangeConfirmationResult) {\n                        this.options.onPriceChangeConfirmationResult(\"UnknownProduct\");\n                    }\n                }\n                getPurchases(success, fail) {\n                    if (this.options.showLog) {\n                        log('getPurchases()');\n                    }\n                    return window.cordova.exec(success, errorCb(fail), \"InAppBillingPlugin\", \"getPurchases\", [\"null\"]);\n                }\n                buy(success, fail, productId, additionalData) {\n                    if (this.options.showLog) {\n                        log('buy()');\n                    }\n                    return window.cordova.exec(success, errorCb(fail), \"InAppBillingPlugin\", \"buy\", [\n                        productId, extendAdditionalData(additionalData)\n                    ]);\n                }\n                subscribe(success, fail, productId, additionalData) {\n                    var _a;\n                    if (this.options.showLog) {\n                        log('subscribe()');\n                    }\n                    if (((_a = additionalData.googlePlay) === null || _a === void 0 ? void 0 : _a.oldPurchaseToken) && this.options.showLog) {\n                        log('subscribe() -> upgrading from an old purchase');\n                    }\n                    return window.cordova.exec(success, errorCb(fail), \"InAppBillingPlugin\", \"subscribe\", [\n                        productId, extendAdditionalData(additionalData)\n                    ]);\n                }\n                consumePurchase(success, fail, purchaseToken) {\n                    if (this.options.showLog) {\n                        log('consumePurchase()');\n                    }\n                    return window.cordova.exec(success, errorCb(fail), \"InAppBillingPlugin\", \"consumePurchase\", [purchaseToken]);\n                }\n                acknowledgePurchase(success, fail, purchaseToken) {\n                    if (this.options.showLog) {\n                        log('acknowledgePurchase()');\n                    }\n                    return window.cordova.exec(success, errorCb(fail), \"InAppBillingPlugin\", \"acknowledgePurchase\", [purchaseToken]);\n                }\n                getAvailableProducts(inAppSkus, subsSkus, success, fail) {\n                    if (this.options.showLog) {\n                        log('getAvailableProducts()');\n                    }\n                    return window.cordova.exec(success, errorCb(fail), \"InAppBillingPlugin\", \"getAvailableProducts\", [inAppSkus, subsSkus]);\n                }\n                manageSubscriptions() {\n                    return window.cordova.exec(function () { }, function () { }, \"InAppBillingPlugin\", \"manageSubscriptions\", []);\n                }\n                manageBilling() {\n                    return window.cordova.exec(function () { }, function () { }, \"InAppBillingPlugin\", \"manageBilling\", []);\n                }\n                launchPriceChangeConfirmationFlow(productId) {\n                    return window.cordova.exec(function () { }, function () { }, \"InAppBillingPlugin\", \"launchPriceChangeConfirmationFlow\", [productId]);\n                }\n            }\n            Bridge_2.Bridge = Bridge;\n            // Generates a `fail` function that accepts an optional error code\n            // in the first part of the error string.\n            //\n            // format: `code|message`\n            //\n            // `fail` function will be called with `message` as a first argument\n            // and `code` as a second argument (or undefined). This ensures\n            // backward compatibility with legacy code\n            function errorCb(fail) {\n                return function (error) {\n                    if (!fail)\n                        return;\n                    const tokens = typeof error === 'string' ? error.split('|') : [];\n                    if (tokens.length > 1 && /^[-+]?(\\d+)$/.test(tokens[0])) {\n                        var code = tokens[0];\n                        var message = tokens[1];\n                        fail(message, +code);\n                    }\n                    else {\n                        fail(error);\n                    }\n                };\n            }\n            function ensureObject(obj) {\n                return !!obj && obj.constructor === Object ? obj : {};\n            }\n            function extendAdditionalData(ad) {\n                const additionalData = ensureObject(ad === null || ad === void 0 ? void 0 : ad.googlePlay);\n                if (!additionalData.accountId && (ad === null || ad === void 0 ? void 0 : ad.applicationUsername)) {\n                    additionalData.accountId = CdvPurchase.Utils.md5(ad.applicationUsername);\n                }\n                return additionalData;\n            }\n        })(Bridge = GooglePlay.Bridge || (GooglePlay.Bridge = {}));\n    })(GooglePlay = CdvPurchase.GooglePlay || (CdvPurchase.GooglePlay = {}));\n})(CdvPurchase || (CdvPurchase = {}));\n/// <reference path=\"../../offer.ts\" />\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let GooglePlay;\n    (function (GooglePlay) {\n        class GProduct extends CdvPurchase.Product {\n        }\n        GooglePlay.GProduct = GProduct;\n        class InAppOffer extends CdvPurchase.Offer {\n            constructor() {\n                super(...arguments);\n                this.type = 'inapp';\n            }\n        }\n        GooglePlay.InAppOffer = InAppOffer;\n        class SubscriptionOffer extends CdvPurchase.Offer {\n            constructor(options, decorator) {\n                super(options, decorator);\n                this.type = 'subs';\n                this.tags = options.tags;\n                this.token = options.token;\n            }\n        }\n        GooglePlay.SubscriptionOffer = SubscriptionOffer;\n        class Products {\n            constructor(decorator) {\n                /** List of products managed by the GooglePlay adapter */\n                this.products = [];\n                /** List of offers managed by the GooglePlay adapter */\n                this.offers = [];\n                this.decorator = decorator;\n            }\n            getProduct(id) {\n                return this.products.find(p => p.id === id);\n            }\n            getOffer(id) {\n                return this.offers.find(p => p.id === id);\n            }\n            /**  */\n            addProduct(registeredProduct, vp) {\n                const existingProduct = this.getProduct(registeredProduct.id);\n                const p = existingProduct !== null && existingProduct !== void 0 ? existingProduct : new GProduct(registeredProduct, this.decorator);\n                p.title = vp.title || vp.name || p.title;\n                p.description = vp.description || p.description;\n                // Process the product depending on the format\n                if ('product_format' in vp && vp.product_format === \"v12.0\") {\n                    if (vp.product_type === \"subs\")\n                        this.onSubsV12Loaded(p, vp);\n                    else\n                        this.onInAppLoaded(p, vp);\n                }\n                // else if ('billing_period_unit' in vp) {\n                //     return this.iabSubsV11Loaded(p, vp);\n                // }\n                else {\n                    this.onInAppLoaded(p, vp);\n                }\n                if (!existingProduct) {\n                    this.products.push(p);\n                }\n                return p;\n            }\n            onSubsV12Loaded(product, vp) {\n                // console.log('iabSubsV12Loaded: ' + JSON.stringify(vp));\n                vp.offers.forEach((productOffer) => {\n                    const offer = this.iabSubsOfferV12Loaded(product, vp, productOffer);\n                    product.addOffer(offer);\n                });\n                /*\n                var firstOffer = vp.offers[0];\n                if (firstOffer && firstOffer.pricing_phases.length > 0) {\n                    const attributes = {\n                        state: store.VALID,\n                        title: vp.name,\n                        description: vp.description,\n                        offers: vp.offers.map(function (offer) {\n                            return vp.productId + '@' + offer.token;\n                        }),\n                    };\n                    this.iabSubsAddV12Attributes(attributes, firstOffer);\n                    const p = this.getProduct(vp.productId);\n                    p.set(attributes);\n                    p.trigger(\"loaded\");\n                }\n                */\n                return product;\n            }\n            iabSubsOfferV12Loaded(product, vp, productOffer) {\n                const offerId = vp.productId + '@' + productOffer.token;\n                const existingOffer = this.getOffer(offerId);\n                const pricingPhases = productOffer.pricing_phases.map(p => this.toPricingPhase(p));\n                if (existingOffer) {\n                    existingOffer.pricingPhases = pricingPhases;\n                    return existingOffer;\n                }\n                else {\n                    const offer = new SubscriptionOffer({ id: offerId, product, pricingPhases, token: productOffer.token, tags: productOffer.tags }, this.decorator);\n                    this.offers.push(offer);\n                    return offer;\n                }\n                /*\n                // Backward compatibility (might be incomplete if user have complex pricing models, but might as well be complete...)\n                if (productOffer.pricing_phases.length > 0) {\n                    iabSubsAddV12Attributes(offerAttributes, productOffer);\n                }\n                var offerP = store.get(offerAttributes.id);\n                if (!offerP) {\n                    store.register(offerAttributes);\n                    offerP = store.get(offerAttributes.id);\n                }\n                offerP.set(offerAttributes);\n                offerP.trigger(\"loaded\");\n                */\n            }\n            /*\n            private iabSubsV11Loaded(p: Product, vp: SubscriptionV11): Product {\n                // console.log('iabSubsV11Loaded: ' + JSON.stringify(vp));\n                var p = store.products.byId[vp.productId];\n                var attributes = {\n                    state: store.VALID,\n                    title: vp.name || trimTitle(vp.title),\n                    description: vp.description,\n                };\n                var currency = vp.price_currency_code || \"\";\n                var price = vp.formatted_price || vp.price;\n                var priceMicros = vp.price_amount_micros;\n                var subscriptionPeriod = vp.subscriptionPeriod ? vp.subscriptionPeriod : \"\";\n                var introPriceSubscriptionPeriod = vp.introductoryPricePeriod ? vp.introductoryPricePeriod : \"\";\n                var introPriceNumberOfPeriods = vp.introductoryPriceCycles ? vp.introductoryPriceCycles : 0;\n                var introPricePeriodUnit = normalizeISOPeriodUnit(introPriceSubscriptionPeriod);\n                var introPricePeriodCount = normalizeISOPeriodCount(introPriceSubscriptionPeriod);\n                var introPricePeriod = (introPriceNumberOfPeriods || 1) * (introPricePeriodCount || 1);\n                var introPriceMicros = vp.introductoryPriceAmountMicros ? vp.introductoryPriceAmountMicros : \"\";\n                var introPrice = vp.introductoryPrice ? vp.introductoryPrice : \"\";\n                var introPricePaymentMode;\n\n                if (vp.freeTrialPeriod) {\n                    introPricePaymentMode = 'FreeTrial';\n                    try {\n                        introPricePeriodUnit = normalizeISOPeriodUnit(vp.freeTrialPeriod);\n                        introPricePeriodCount = normalizeISOPeriodCount(vp.freeTrialPeriod);\n                        introPricePeriod = introPricePeriodCount;\n                    }\n                    catch (e) {\n                        store.log.warn('Failed to parse free trial period: ' + vp.freeTrialPeriod);\n                    }\n                }\n                else if (vp.introductoryPrice) {\n                    if (vp.introductoryPrice < vp.price && subscriptionPeriod === introPriceSubscriptionPeriod) {\n                        introPricePaymentMode = 'PayAsYouGo';\n                    }\n                    else if (introPriceNumberOfPeriods === 1) {\n                        introPricePaymentMode = 'UpFront';\n                    }\n                }\n\n                if (!introPricePaymentMode) {\n                    introPricePeriod = null;\n                    introPricePeriodUnit = null;\n                }\n\n                var parsedSubscriptionPeriod = {};\n                if (subscriptionPeriod) {\n                    parsedSubscriptionPeriod.unit = normalizeISOPeriodUnit(subscriptionPeriod);\n                    parsedSubscriptionPeriod.count = normalizeISOPeriodCount(subscriptionPeriod);\n                }\n\n                var trialPeriod = vp.trial_period || null;\n                var trialPeriodUnit = vp.trial_period_unit || null;\n                var billingPeriod = parsedSubscriptionPeriod.count || vp.billing_period || null;\n                var billingPeriodUnit = parsedSubscriptionPeriod.unit || vp.billing_period_unit || null;\n\n                var pricingPhases = [];\n                if (trialPeriod) {\n                    pricingPhases.push({\n                        paymentMode: 'FreeTrial',\n                        recurrenceMode: store.FINITE_RECURRING,\n                        period: vp.freeTrialPeriod || toISO8601Duration(trialPeriodUnit, trialPeriod),\n                        cycles: 1,\n                        price: null,\n                        priceMicros: 0,\n                        currency: currency,\n                    });\n                }\n                else if (introPricePeriod) {\n                    pricingPhases.push({\n                        paymentMode: 'PayAsYouGo',\n                        recurrenceMode: store.FINITE_RECURRING,\n                        period: vp.introPriceSubscriptionPeriod || toISO8601Duration(introPricePeriodUnit, introPricePeriodCount),\n                        cycles: vp.introductoryPriceCycles || 1,\n                        price: null, // formatted price not available\n                        priceMicros: introPriceMicros,\n                        currency: currency,\n                    });\n                }\n\n                pricingPhases.push({\n                    paymentMode: 'PayAsYouGo',\n                    recurrenceMode: store.INFINITE_RECURRING,\n                    period: vp.subscriptionPeriod || toISO8601Duration(billingPeriodUnit, billingPeriod), // ISO8601 duration\n                    cycles: 0,\n                    price: price,\n                    priceMicros: priceMicros,\n                    currency: currency,\n                });\n                attributes.pricingPhases = pricingPhases;\n\n                if (store.compatibility > 0 && store.compatibility < 11.999) {\n                    Object.assign(attributes, {\n                        price: price,\n                        priceMicros: priceMicros,\n                        currency: currency,\n                        trialPeriod: trialPeriod,\n                        trialPeriodUnit: trialPeriodUnit,\n                        billingPeriod: billingPeriod,\n                        billingPeriodUnit: billingPeriodUnit,\n                        introPrice: introPrice,\n                        introPriceMicros: introPriceMicros,\n                        introPricePeriod: introPricePeriod,\n                        introPricePeriodUnit: introPricePeriodUnit,\n                        introPricePaymentMode: introPricePaymentMode,\n                    });\n                }\n\n                if (store.compatibility > 0 && store.compatibility < 9.999) {\n                    Object.assign(attributes, {\n                        introPriceNumberOfPeriods: introPricePeriod,\n                        introPriceSubscriptionPeriod: introPricePeriodUnit,\n                    });\n                }\n\n                p.set(attributes);\n                p.trigger(\"loaded\");\n            }\n            */\n            onInAppLoaded(p, vp) {\n                var _a, _b, _c, _d;\n                // console.log('iabInAppLoaded: ' + JSON.stringify(vp));\n                const existingOffer = this.getOffer(vp.productId);\n                const pricingPhases = [{\n                        price: (_b = (_a = vp.formatted_price) !== null && _a !== void 0 ? _a : vp.price) !== null && _b !== void 0 ? _b : `${((_c = vp.price_amount_micros) !== null && _c !== void 0 ? _c : 0) / 1000000} ${vp.price_currency_code}`,\n                        priceMicros: (_d = vp.price_amount_micros) !== null && _d !== void 0 ? _d : 0,\n                        currency: vp.price_currency_code,\n                        recurrenceMode: CdvPurchase.RecurrenceMode.NON_RECURRING,\n                    }];\n                if (existingOffer) {\n                    // state: store.VALID,\n                    // title: vp.name || trimTitle(vp.title),\n                    // description: vp.description,\n                    // currency: vp.price_currency_code || \"\",\n                    // price: vp.formatted_price || vp.price,\n                    // priceMicros: vp.price_amount_micros,\n                    existingOffer.pricingPhases = pricingPhases;\n                    p.offers = [existingOffer];\n                }\n                else {\n                    const newOffer = new InAppOffer({ id: vp.productId, product: p, pricingPhases }, this.decorator);\n                    this.offers.push(newOffer);\n                    p.offers = [newOffer];\n                }\n                // p.set({\n                //     state: store.VALID,\n                //     title: vp.name || trimTitle(vp.title),\n                //     description: vp.description,\n                //     currency: vp.price_currency_code || \"\",\n                //     price: vp.formatted_price || vp.price,\n                //     priceMicros: vp.price_amount_micros,\n                // });\n                // p.trigger(\"loaded\");\n                return p;\n            }\n            toPaymentMode(phase) {\n                return phase.price_amount_micros === 0\n                    ? CdvPurchase.PaymentMode.FREE_TRIAL\n                    : phase.recurrence_mode === GooglePlay.Bridge.RecurrenceMode.NON_RECURRING\n                        ? CdvPurchase.PaymentMode.UP_FRONT\n                        : CdvPurchase.PaymentMode.PAY_AS_YOU_GO;\n            }\n            toRecurrenceMode(mode) {\n                switch (mode) {\n                    case GooglePlay.Bridge.RecurrenceMode.FINITE_RECURRING: return CdvPurchase.RecurrenceMode.FINITE_RECURRING;\n                    case GooglePlay.Bridge.RecurrenceMode.INFINITE_RECURRING: return CdvPurchase.RecurrenceMode.INFINITE_RECURRING;\n                    case GooglePlay.Bridge.RecurrenceMode.NON_RECURRING: return CdvPurchase.RecurrenceMode.NON_RECURRING;\n                }\n            }\n            toPricingPhase(phase) {\n                return {\n                    price: phase.formatted_price,\n                    priceMicros: phase.price_amount_micros,\n                    currency: phase.price_currency_code,\n                    billingPeriod: phase.billing_period,\n                    billingCycles: phase.billing_cycle_count,\n                    recurrenceMode: this.toRecurrenceMode(phase.recurrence_mode),\n                    paymentMode: this.toPaymentMode(phase),\n                };\n            }\n        }\n        GooglePlay.Products = Products;\n    })(GooglePlay = CdvPurchase.GooglePlay || (CdvPurchase.GooglePlay = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let GooglePlay;\n    (function (GooglePlay) {\n        let PublisherAPI;\n        (function (PublisherAPI) {\n            let GoogleErrorReason;\n            (function (GoogleErrorReason) {\n                /** The subscription purchase is no longer available for query because it has been expired for too long. */\n                GoogleErrorReason[\"SUBSCRIPTION_NO_LONGER_AVAILABLE\"] = \"subscriptionPurchaseNoLongerAvailable\";\n                /** The purchase token is no longer valid. */\n                GoogleErrorReason[\"PURCHASE_TOKEN_NO_LONGER_VALID\"] = \"purchaseTokenNoLongerValid\";\n            })(GoogleErrorReason = PublisherAPI.GoogleErrorReason || (PublisherAPI.GoogleErrorReason = {}));\n            /**\n           * Those are actually HTTP status codes.\n           *\n           * Duplicated here for documentation purposes.\n           */\n            let ErrorCode;\n            (function (ErrorCode) {\n                /** The subscription purchase is no longer available for query because it has been expired for too long. */\n                ErrorCode[ErrorCode[\"GONE\"] = 410] = \"GONE\";\n            })(ErrorCode = PublisherAPI.ErrorCode || (PublisherAPI.ErrorCode = {}));\n        })(PublisherAPI = GooglePlay.PublisherAPI || (GooglePlay.PublisherAPI = {}));\n    })(GooglePlay = CdvPurchase.GooglePlay || (CdvPurchase.GooglePlay = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /**\n     * Test Adapter and related classes.\n     */\n    let Test;\n    (function (Test) {\n        const platform = CdvPurchase.Platform.TEST;\n        let verifiedPurchases = [];\n        function updateVerifiedPurchases(tr) {\n            tr.products.forEach(p => {\n                var _a, _b, _c, _d;\n                const existing = verifiedPurchases.find(v => p.id === v.id);\n                const attributes = {\n                    id: p.id,\n                    purchaseDate: (_a = tr.purchaseDate) === null || _a === void 0 ? void 0 : _a.getTime(),\n                    expiryDate: (_b = tr.expirationDate) === null || _b === void 0 ? void 0 : _b.getTime(),\n                    lastRenewalDate: (_c = tr.lastRenewalDate) === null || _c === void 0 ? void 0 : _c.getTime(),\n                    renewalIntent: tr.renewalIntent,\n                    renewalIntentChangeDate: (_d = tr.renewalIntentChangeDate) === null || _d === void 0 ? void 0 : _d.getTime(),\n                };\n                if (existing) {\n                    Object.assign(existing, attributes);\n                }\n                else {\n                    verifiedPurchases.push(attributes);\n                }\n            });\n        }\n        /**\n         * Test Adapter used for local testing with mock products.\n         *\n         * This adapter simulates a payment platform that supports both In-App Products and Payment Requests.\n         *\n         * The list of supported In-App Products\n         *\n         * @see {@link Test.TEST_PRODUCTS}\n         */\n        class Adapter {\n            constructor(context) {\n                this.id = CdvPurchase.Platform.TEST;\n                this.name = 'Test';\n                this.ready = false;\n                this.products = [];\n                this.receipts = [];\n                this.context = context;\n                this.log = context.log.child(\"Test\");\n            }\n            get isSupported() {\n                return true;\n            }\n            async initialize() { return; }\n            async loadReceipts() {\n                return new Promise((resolve) => {\n                    setTimeout(() => {\n                        this.context.listener.receiptsReady(CdvPurchase.Platform.TEST);\n                        resolve(this.receipts);\n                    }, 600);\n                });\n            }\n            async loadProducts(products) {\n                return products.map(registerProduct => {\n                    if (!Test.testProductsArray.find(p => p.id === registerProduct.id && p.type === registerProduct.type)) {\n                        return CdvPurchase.storeError(CdvPurchase.ErrorCode.PRODUCT_NOT_AVAILABLE, 'This product is not available');\n                    }\n                    // Ensure it's not been loaded already.\n                    const existingProduct = this.products.find(p => p.id === registerProduct.id);\n                    if (existingProduct)\n                        return existingProduct;\n                    // Enable the active subscription if loaded by the user.\n                    if (registerProduct.id === Test.testProducts.PAID_SUBSCRIPTION_ACTIVE.id) {\n                        setTimeout(() => {\n                            this.reportActiveSubscription();\n                        }, 500); // it'll get reported in 500ms\n                    }\n                    const product = Test.initTestProduct(registerProduct.id, this.context.apiDecorators);\n                    if (!product)\n                        return CdvPurchase.storeError(CdvPurchase.ErrorCode.PRODUCT_NOT_AVAILABLE, 'Could not load this product');\n                    this.products.push(product);\n                    this.context.listener.productsUpdated(CdvPurchase.Platform.TEST, [product]);\n                    return product;\n                });\n            }\n            async order(offer) {\n                // Purchasing products with \"-fail-\" in the id will fail.\n                if (offer.id.indexOf(\"-fail-\") > 0) {\n                    return CdvPurchase.storeError(CdvPurchase.ErrorCode.PURCHASE, 'Purchase failed.');\n                }\n                const product = this.products.find(p => p.id === offer.productId);\n                if (!CdvPurchase.Internal.LocalReceipts.canPurchase(this.receipts, product)) {\n                    return CdvPurchase.storeError(CdvPurchase.ErrorCode.PURCHASE, 'Product already owned');\n                }\n                // a receipt containing a transaction with the given product.\n                const response = prompt(`Do you want to purchase ${offer.productId} for ${offer.pricingPhases[0].price}?\\nEnter \"Y\" to confirm.\\nEnter \"E\" to fail with an error.\\Anything else to cancel.`);\n                if ((response === null || response === void 0 ? void 0 : response.toUpperCase()) === 'E')\n                    return CdvPurchase.storeError(CdvPurchase.ErrorCode.PURCHASE, 'Purchase failed');\n                if ((response === null || response === void 0 ? void 0 : response.toUpperCase()) !== 'Y')\n                    return CdvPurchase.storeError(CdvPurchase.ErrorCode.PAYMENT_CANCELLED, 'Purchase flow has been cancelled by the user');\n                // purchase succeeded, let's generate a mock receipt.\n                const receipt = new CdvPurchase.Receipt(platform, this.context.apiDecorators);\n                const tr = new CdvPurchase.Transaction(platform, receipt, this.context.apiDecorators);\n                receipt.transactions = [tr];\n                tr.products = [{\n                        id: offer.productId,\n                        offerId: offer.id,\n                    }];\n                tr.state = CdvPurchase.TransactionState.APPROVED;\n                tr.purchaseDate = new Date();\n                tr.transactionId = offer.productId + '-' + (new Date().getTime());\n                tr.isAcknowledged = false;\n                updateVerifiedPurchases(tr);\n                this.receipts.push(receipt);\n                this.context.listener.receiptsUpdated(CdvPurchase.Platform.TEST, [receipt]);\n            }\n            finish(transaction) {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        transaction.state = CdvPurchase.TransactionState.FINISHED;\n                        transaction.isAcknowledged = true;\n                        updateVerifiedPurchases(transaction);\n                        const product = this.products.find(p => transaction.products[0].id === p.id);\n                        if ((product === null || product === void 0 ? void 0 : product.type) === CdvPurchase.ProductType.CONSUMABLE)\n                            transaction.isConsumed = true;\n                        const receipts = this.receipts.filter(r => r.hasTransaction(transaction));\n                        this.context.listener.receiptsUpdated(platform, receipts);\n                        resolve(undefined);\n                    }, 500);\n                });\n            }\n            async receiptValidationBody(receipt) {\n                return;\n            }\n            async handleReceiptValidationResponse(receipt, response) {\n                return;\n            }\n            /**\n             * This function simulates a payment process by prompting the user to confirm the payment.\n             *\n             * It creates a `Receipt` and `Transaction` object and returns the `Transaction` object if the user enters \"Y\" in the prompt.\n             *\n             * @param paymentRequest - An object containing information about the payment, such as the amount and currency.\n             * @param additionalData - Additional data to be included in the receipt.\n             *\n             * @returns A promise that resolves to either an error object (if the user enters \"E\" in the prompt),\n             * a `Transaction` object (if the user confirms the payment), or `undefined` (if the user does not confirm the payment).\n             *\n             * @example\n             *\n             * const paymentRequest = {\n             *   amountMicros: 1000000,\n             *   currency: \"USD\",\n             *   items: [{ id: \"product-1\" }, { id: \"product-2\" }]\n             * };\n             * const result = await requestPayment(paymentRequest);\n             * if (result?.isError) {\n             *   console.error(`Error: ${result.message}`);\n             * } else if (result) {\n             *   console.log(`Transaction approved: ${result.transactionId}`);\n             * } else {\n             *   console.log(\"Payment cancelled by user\");\n             * }\n             */\n            async requestPayment(paymentRequest, additionalData) {\n                var _a;\n                await CdvPurchase.Utils.asyncDelay(100); // maybe app has some UI to update... and \"prompt\" prevents that\n                const response = prompt(`Mock payment of ${((_a = paymentRequest.amountMicros) !== null && _a !== void 0 ? _a : 0) / 1000000} ${paymentRequest.currency}. Enter \"Y\" to confirm. Enter \"E\" to trigger an error.`);\n                if ((response === null || response === void 0 ? void 0 : response.toUpperCase()) === 'E')\n                    return CdvPurchase.storeError(CdvPurchase.ErrorCode.PAYMENT_NOT_ALLOWED, 'Payment not allowed');\n                if ((response === null || response === void 0 ? void 0 : response.toUpperCase()) !== 'Y')\n                    return;\n                const receipt = new CdvPurchase.Receipt(platform, this.context.apiDecorators);\n                const transaction = new CdvPurchase.Transaction(CdvPurchase.Platform.TEST, receipt, this.context.apiDecorators);\n                transaction.purchaseDate = new Date();\n                transaction.products = paymentRequest.items.filter(p => p).map(product => ({ id: (product === null || product === void 0 ? void 0 : product.id) || '' })),\n                    transaction.state = CdvPurchase.TransactionState.APPROVED;\n                transaction.transactionId = 'payment-' + new Date().getTime();\n                transaction.amountMicros = paymentRequest.amountMicros;\n                transaction.currency = paymentRequest.currency;\n                receipt.transactions = [transaction];\n                this.receipts.push(receipt);\n                setTimeout(() => {\n                    this.context.listener.receiptsUpdated(platform, [receipt]);\n                }, 400);\n                return transaction;\n            }\n            async manageSubscriptions() {\n                alert('Pseudo subscription management interface. Close it when you are done.');\n                return;\n            }\n            async manageBilling() {\n                alert('Pseudo billing management interface. Close it when you are done.');\n                return;\n            }\n            reportActiveSubscription() {\n                if (this.receipts.find(r => r.transactions[0].transactionId === transactionId(1))) {\n                    // already reported\n                    return;\n                }\n                const RENEWS_EVERY_MS = 2 * 60000; // 2 minutes\n                const receipt = new CdvPurchase.Receipt(platform, this.context.apiDecorators);\n                const makeTransaction = (n) => {\n                    var _a, _b;\n                    const tr = new CdvPurchase.Transaction(platform, receipt, this.context.apiDecorators);\n                    tr.products = [{\n                            id: Test.testProducts.PAID_SUBSCRIPTION_ACTIVE.id,\n                            offerId: Test.testProducts.PAID_SUBSCRIPTION_ACTIVE.extra.offerId,\n                        }];\n                    tr.state = CdvPurchase.TransactionState.APPROVED;\n                    tr.transactionId = transactionId(n);\n                    tr.isAcknowledged = n == 1;\n                    tr.renewalIntent = CdvPurchase.RenewalIntent.RENEW;\n                    const firstPurchase = +(((_b = (_a = receipt === null || receipt === void 0 ? void 0 : receipt.transactions) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.purchaseDate) || new Date());\n                    tr.purchaseDate = new Date(firstPurchase);\n                    tr.lastRenewalDate = new Date(firstPurchase + RENEWS_EVERY_MS * (n - 1));\n                    tr.expirationDate = new Date(firstPurchase + RENEWS_EVERY_MS * n);\n                    updateVerifiedPurchases(tr);\n                    return tr;\n                };\n                receipt.transactions.push(makeTransaction(1));\n                this.receipts.push(receipt);\n                this.context.listener.receiptsUpdated(CdvPurchase.Platform.TEST, [receipt]);\n                function transactionId(n) {\n                    return 'test-active-subscription-transaction-' + n;\n                }\n                let transactionNumber = 1;\n                setInterval(() => {\n                    this.log.info('auto-renewing the mock subscription');\n                    transactionNumber += 1;\n                    receipt.transactions.push(makeTransaction(transactionNumber));\n                    this.context.listener.receiptsUpdated(CdvPurchase.Platform.TEST, [receipt]);\n                }, RENEWS_EVERY_MS);\n            }\n            static verify(receipt, callback) {\n                setTimeout(() => {\n                    var _a, _b;\n                    callback({\n                        receipt,\n                        payload: {\n                            ok: true,\n                            data: {\n                                id: (_b = (_a = receipt.transactions[0]) === null || _a === void 0 ? void 0 : _a.products[0]) === null || _b === void 0 ? void 0 : _b.id,\n                                latest_receipt: true,\n                                transaction: { type: 'test' },\n                                collection: verifiedPurchases,\n                            }\n                        }\n                    });\n                }, 500);\n            }\n            checkSupport(functionality) {\n                return true;\n            }\n            async restorePurchases() {\n            }\n        }\n        Test.Adapter = Adapter;\n    })(Test = CdvPurchase.Test || (CdvPurchase.Test = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Test;\n    (function (Test) {\n        const platform = CdvPurchase.Platform.TEST;\n        /**\n         * Definition of the test products.\n         */\n        Test.testProducts = {\n            /**\n             * A valid consumable product.\n             *\n             * - id: \"test-consumable\"\n             * - type: ProductType.CONSUMABLE\n             */\n            CONSUMABLE: {\n                platform,\n                id: 'test-consumable',\n                type: CdvPurchase.ProductType.CONSUMABLE,\n            },\n            /**\n             * A consumable product for which the purchase will always fail.\n             *\n             * - id: \"test-consumable-fail\"\n             * - type: ProductType.CONSUMABLE\n             */\n            CONSUMABLE_FAILING: {\n                platform,\n                id: 'test-consumable-fail',\n                type: CdvPurchase.ProductType.CONSUMABLE,\n            },\n            /**\n             * A valid non-consumable product.\n             *\n             * - id: \"test-non-consumable\"\n             * - type: ProductType.NON_CONSUMABLE\n             */\n            NON_CONSUMABLE: {\n                platform,\n                id: 'test-non-consumable',\n                type: CdvPurchase.ProductType.NON_CONSUMABLE,\n            },\n            /**\n             * A paid-subscription that auto-renews for the duration of the session.\n             *\n             * This subscription has a free trial period, that renews every week, 3 times.\n             * It then costs $4.99 per month.\n             *\n             * - id: \"test-subscription\"\n             * - type: ProductType.PAID_SUBSCRIPTION\n             */\n            PAID_SUBSCRIPTION: {\n                platform,\n                id: 'test-subscription',\n                type: CdvPurchase.ProductType.PAID_SUBSCRIPTION,\n            },\n            /**\n             * A paid-subscription that is already active when the app starts.\n             *\n             * It behaves as if the user subscribed on a different device. It will renew forever.\n             *\n             * - id: \"test-subscription-active\"\n             * - type: ProductType.PAID_SUBSCRIPTION\n             */\n            PAID_SUBSCRIPTION_ACTIVE: {\n                platform,\n                id: 'test-subscription-active',\n                type: CdvPurchase.ProductType.PAID_SUBSCRIPTION,\n                /** @internal */\n                extra: {\n                    offerId: 'test-paid-subscription-active-offer1',\n                }\n            },\n        };\n        /**\n         * List of test products definitions as an array.\n         */\n        Test.testProductsArray = Object.values(Test.testProducts);\n        /**\n         * Initialize a test product.\n         *\n         * @internal\n         */\n        function initTestProduct(productId, decorator) {\n            const key = Object.keys(Test.testProducts).find(key => Test.testProducts[key] && Test.testProducts[key].id === productId);\n            if (!key)\n                return;\n            const product = new CdvPurchase.Product(Test.testProducts[key], decorator);\n            switch (key) {\n                case 'CONSUMABLE':\n                    product.title = 'Test Consumable';\n                    product.description = 'A consumable product that you can purchase';\n                    product.addOffer(new CdvPurchase.Offer({\n                        id: 'test-consumable-offer1',\n                        pricingPhases: [{\n                                price: '$4.99',\n                                currency: 'USD',\n                                priceMicros: 4990000,\n                                paymentMode: CdvPurchase.PaymentMode.UP_FRONT,\n                                recurrenceMode: CdvPurchase.RecurrenceMode.NON_RECURRING,\n                            }],\n                        product,\n                    }, decorator));\n                    break;\n                case 'CONSUMABLE_FAILING':\n                    product.title = 'Failing Consumable';\n                    product.description = 'A consumable product that cannot be purchased';\n                    product.addOffer(new CdvPurchase.Offer({\n                        id: 'test-consumable-fail-offer1',\n                        pricingPhases: [{\n                                price: '$1.99',\n                                currency: 'USD',\n                                priceMicros: 1990000,\n                                paymentMode: CdvPurchase.PaymentMode.UP_FRONT,\n                                recurrenceMode: CdvPurchase.RecurrenceMode.NON_RECURRING,\n                            }],\n                        product,\n                    }, decorator));\n                    break;\n                case 'NON_CONSUMABLE':\n                    product.title = 'Non Consumable';\n                    product.description = 'A non consumable product';\n                    product.addOffer(new CdvPurchase.Offer({\n                        id: 'test-non-consumable-offer1',\n                        pricingPhases: [{\n                                price: '$9.99',\n                                currency: 'USD',\n                                priceMicros: 9990000,\n                                paymentMode: CdvPurchase.PaymentMode.UP_FRONT,\n                                recurrenceMode: CdvPurchase.RecurrenceMode.NON_RECURRING,\n                            }],\n                        product,\n                    }, decorator));\n                    break;\n                case 'PAID_SUBSCRIPTION':\n                    product.title = 'A subscription product';\n                    product.description = 'An auto-renewing paid subscription with a trial period';\n                    product.addOffer(new CdvPurchase.Offer({\n                        id: 'test-paid-subscription-offer1',\n                        product,\n                        pricingPhases: [{\n                                price: '$0.00',\n                                currency: 'USD',\n                                priceMicros: 0,\n                                paymentMode: CdvPurchase.PaymentMode.FREE_TRIAL,\n                                recurrenceMode: CdvPurchase.RecurrenceMode.FINITE_RECURRING,\n                                billingCycles: 3,\n                                billingPeriod: 'P1W',\n                            }, {\n                                price: '$4.99',\n                                currency: 'USD',\n                                priceMicros: 4990000,\n                                paymentMode: CdvPurchase.PaymentMode.PAY_AS_YOU_GO,\n                                recurrenceMode: CdvPurchase.RecurrenceMode.INFINITE_RECURRING,\n                                billingPeriod: 'P1M',\n                            }],\n                    }, decorator));\n                    break;\n                case 'PAID_SUBSCRIPTION_ACTIVE':\n                    product.title = 'An owned subscription product';\n                    product.description = 'An active paid subscription';\n                    product.addOffer(new CdvPurchase.Offer({\n                        id: Test.testProducts.PAID_SUBSCRIPTION_ACTIVE.extra.offerId,\n                        product,\n                        pricingPhases: [{\n                                price: '$19.99',\n                                currency: 'USD',\n                                priceMicros: 19990000,\n                                paymentMode: CdvPurchase.PaymentMode.PAY_AS_YOU_GO,\n                                recurrenceMode: CdvPurchase.RecurrenceMode.INFINITE_RECURRING,\n                                billingPeriod: 'P1Y',\n                            }],\n                    }, decorator));\n                    break;\n                default:\n                    const unhandledSwitchCase = key;\n                    throw new Error(`Unhandled enum case: ${unhandledSwitchCase}`);\n            }\n            return product;\n        }\n        Test.initTestProduct = initTestProduct;\n    })(Test = CdvPurchase.Test || (CdvPurchase.Test = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let WindowsStore;\n    (function (WindowsStore) {\n        class Adapter {\n            constructor() {\n                this.id = CdvPurchase.Platform.WINDOWS_STORE;\n                this.name = 'WindowsStore';\n                this.ready = false;\n                this.products = [];\n                this.receipts = [];\n            }\n            async initialize() { return; }\n            get isSupported() {\n                return false;\n            }\n            async loadProducts(products) {\n                return products.map(p => CdvPurchase.storeError(CdvPurchase.ErrorCode.PRODUCT_NOT_AVAILABLE, 'TODO'));\n            }\n            async loadReceipts() {\n                return [];\n            }\n            async order(offer) {\n                return CdvPurchase.storeError(CdvPurchase.ErrorCode.UNKNOWN, 'TODO: Not implemented');\n            }\n            async finish(transaction) {\n                return CdvPurchase.storeError(CdvPurchase.ErrorCode.UNKNOWN, 'TODO: Not implemented');\n            }\n            async handleReceiptValidationResponse(receipt, response) {\n                return;\n            }\n            async receiptValidationBody(receipt) {\n                return;\n            }\n            async requestPayment(payment, additionalData) {\n                return CdvPurchase.storeError(CdvPurchase.ErrorCode.UNKNOWN, 'requestPayment not supported');\n            }\n            async manageSubscriptions() {\n                return CdvPurchase.storeError(CdvPurchase.ErrorCode.UNKNOWN, 'manageSubscriptions not supported');\n            }\n            async manageBilling() {\n                return CdvPurchase.storeError(CdvPurchase.ErrorCode.UNKNOWN, 'manageBilling not supported');\n            }\n            checkSupport(functionality) {\n                return false;\n            }\n            async restorePurchases() {\n            }\n        }\n        WindowsStore.Adapter = Adapter;\n    })(WindowsStore = CdvPurchase.WindowsStore || (CdvPurchase.WindowsStore = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Utils;\n    (function (Utils) {\n        let Ajax;\n        (function (Ajax) {\n            /** HTTP status returned when a request times out */\n            Ajax.HTTP_REQUEST_TIMEOUT = 408;\n        })(Ajax = Utils.Ajax || (Utils.Ajax = {}));\n        /**\n         * Simplified version of jQuery's ajax method based on XMLHttpRequest.\n         *\n         * Uses cordova's http plugin when installed.\n         *\n         * Only supports JSON requests.\n         */\n        function ajax(log, options) {\n            if (typeof window !== 'undefined' && window.cordova && window.cordova.plugin && window.cordova.plugin.http) {\n                return ajaxWithHttpPlugin(log, options);\n            }\n            var doneCb = function () { };\n            var xhr = new XMLHttpRequest();\n            if (options.timeout) {\n                xhr.timeout = options.timeout;\n                xhr.ontimeout = function ( /*event*/) {\n                    log.warn(\"ajax -> request to \" + options.url + \" timeout\");\n                    Utils.callExternal(log, 'ajax.error', options.error, Ajax.HTTP_REQUEST_TIMEOUT, \"Timeout\");\n                };\n            }\n            xhr.open(options.method || 'POST', options.url, true);\n            xhr.onreadystatechange = function ( /*event*/) {\n                try {\n                    if (xhr.readyState === 4) {\n                        if (xhr.status === 200) {\n                            Utils.callExternal(log, 'ajax.success', options.success, JSON.parse(xhr.responseText));\n                        }\n                        else {\n                            log.warn(\"ajax -> request to \" + options.url + \" failed with status \" + xhr.status + \" (\" + xhr.statusText + \")\");\n                            Utils.callExternal(log, 'ajax.error', options.error, xhr.status, xhr.statusText);\n                        }\n                    }\n                }\n                catch (e) {\n                    log.warn(\"ajax -> request to \" + options.url + \" failed with an exception: \" + e.message);\n                    if (options.error)\n                        options.error(417, e.message, null);\n                }\n                if (xhr.readyState === 4)\n                    Utils.callExternal(log, 'ajax.done', doneCb);\n            };\n            const customHeaders = options.customHeaders;\n            if (customHeaders) {\n                Object.keys(customHeaders).forEach(function (header) {\n                    log.debug('ajax -> adding custom header: ' + header);\n                    xhr.setRequestHeader(header, customHeaders[header]);\n                });\n            }\n            xhr.setRequestHeader(\"Accept\", \"application/json\");\n            log.debug('ajax -> send request to ' + options.url);\n            if (options.data) {\n                xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n                xhr.send(JSON.stringify(options.data));\n            }\n            else {\n                xhr.send();\n            }\n            return {\n                done: function (cb) { doneCb = cb; return this; }\n            };\n        }\n        Utils.ajax = ajax;\n        /**\n         * Simplified version of jQuery's ajax method based on XMLHttpRequest.\n         *\n         * Uses the http plugin.\n         */\n        function ajaxWithHttpPlugin(log, options) {\n            let doneCb = function () { };\n            const ajaxOptions = {\n                method: (options.method || 'get').toLowerCase(),\n                data: options.data,\n                serializer: 'json',\n                // responseType: 'json',\n            };\n            if (options.customHeaders) {\n                log.debug('ajax[http] -> adding custom headers: ' + JSON.stringify(options.customHeaders));\n                ajaxOptions.headers = options.customHeaders;\n            }\n            log.debug('ajax[http] -> send request to ' + options.url);\n            const ajaxDone = (response) => {\n                try {\n                    if (response.status == 200) {\n                        Utils.callExternal(log, 'ajax.success', options.success, JSON.parse(response.data));\n                    }\n                    else {\n                        log.warn(\"ajax[http] -> request to \" + options.url + \" failed with status \" + response.status + \" (\" + response.error + \")\");\n                        Utils.callExternal(log, 'ajax.error', options.error, response.status, response.error);\n                    }\n                }\n                catch (e) {\n                    log.warn(\"ajax[http] -> request to \" + options.url + \" failed with an exception: \" + e.message);\n                    if (options.error)\n                        Utils.callExternal(log, 'ajax.error', options.error, 417, e.message);\n                }\n                Utils.callExternal(log, 'ajax.done', doneCb);\n            };\n            window.cordova.plugin.http.sendRequest(options.url, ajaxOptions, ajaxDone, ajaxDone);\n            return {\n                done: function (cb) { doneCb = cb; return this; }\n            };\n        }\n    })(Utils = CdvPurchase.Utils || (CdvPurchase.Utils = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Utils;\n    (function (Utils) {\n        /**\n         * Calls an user-registered callback.\n         *\n         * Won't throw exceptions, only logs errors.\n         *\n         * @param name a short string describing the callback\n         * @param callback the callback to call (won't fail if undefined)\n         *\n         * @example\n         * ```js\n         * Utils.callExternal(store.log, \"ajax.error\", options.error, 404, \"Not found\");\n         * ```\n         *\n         * @internal\n         */\n        function callExternal(log, name, callback, ...args) {\n            try {\n                const args = Array.prototype.slice.call(arguments, 3);\n                // store.log.debug(\"calling \" + name + \"(\" + JSON.stringify(args2) + \")\");\n                if (callback)\n                    callback.apply(CdvPurchase.store, args);\n            }\n            catch (e) {\n                log.logCallbackException(name, e);\n            }\n        }\n        Utils.callExternal = callExternal;\n    })(Utils = CdvPurchase.Utils || (CdvPurchase.Utils = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Utils;\n    (function (Utils) {\n        /** @internal */\n        function delay(fn, milliseconds) {\n            return setTimeout(fn, milliseconds);\n        }\n        Utils.delay = delay;\n        /** @internal */\n        function debounce(fn, milliseconds) {\n            let timeout = null;\n            const later = function (context, args) {\n                timeout = null;\n                fn();\n            };\n            const debounced = function () {\n                if (timeout)\n                    window.clearTimeout(timeout);\n                timeout = setTimeout(later, milliseconds);\n            };\n            return debounced;\n        }\n        Utils.debounce = debounce;\n        function asyncDelay(milliseconds) {\n            return new Promise(resolve => setTimeout(resolve, milliseconds));\n        }\n        Utils.asyncDelay = asyncDelay;\n    })(Utils = CdvPurchase.Utils || (CdvPurchase.Utils = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Utils;\n    (function (Utils) {\n        /**\n         * Generate a plain english version of the billing cycle in a pricing phase.\n         *\n         * Example outputs:\n         *\n         * - \"3x 1 month\": for `FINITE_RECURRING`, 3 cycles, period \"P1M\"\n         * - \"for 1 year\": for `NON_RECURRING`, period \"P1Y\"\n         * - \"every week\": for `INFINITE_RECURRING, period \"P1W\"\n         *\n         * @example\n         * Utils.formatBillingCycleEN(offer.pricingPhases[0])\n         */\n        function formatBillingCycleEN(pricingPhase) {\n            switch (fixedRecurrenceMode(pricingPhase)) {\n                case CdvPurchase.RecurrenceMode.FINITE_RECURRING:\n                    return `${pricingPhase.billingCycles}x ${Utils.formatDurationEN(pricingPhase.billingPeriod)}`;\n                case CdvPurchase.RecurrenceMode.NON_RECURRING:\n                    return 'for ' + Utils.formatDurationEN(pricingPhase.billingPeriod);\n                default: // INFINITE_RECURRING\n                    return 'every ' + Utils.formatDurationEN(pricingPhase.billingPeriod, { omitOne: true });\n            }\n        }\n        Utils.formatBillingCycleEN = formatBillingCycleEN;\n        /**\n         * FINITE_RECURRING with billingCycles=1 is like NON_RECURRING\n         * FINITE_RECURRING with billingCycles=0 is like INFINITE_RECURRING\n         */\n        function fixedRecurrenceMode(pricingPhase) {\n            var _a;\n            const cycles = (_a = pricingPhase.billingCycles) !== null && _a !== void 0 ? _a : 0;\n            if (pricingPhase.recurrenceMode === CdvPurchase.RecurrenceMode.FINITE_RECURRING) {\n                if (cycles == 1)\n                    return CdvPurchase.RecurrenceMode.NON_RECURRING;\n                if (cycles <= 0)\n                    return CdvPurchase.RecurrenceMode.INFINITE_RECURRING;\n            }\n            return pricingPhase.recurrenceMode;\n        }\n    })(Utils = CdvPurchase.Utils || (CdvPurchase.Utils = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Utils;\n    (function (Utils) {\n        /**\n         * Format a simple ISO 8601 duration to plain English.\n         *\n         * This works for non-composite durations, i.e. that have a single unit with associated amount. For example: \"P1Y\" or \"P3W\".\n         *\n         * See https://en.wikipedia.org/wiki/ISO_8601#Durations\n         *\n         * This method is provided as a utility for getting simple things done quickly. In your application, you'll probably\n         * need some other method that supports multiple locales.\n         *\n         * @param iso - Duration formatted in IS0 8601\n         * @return The duration in plain english. Example: \"1 year\" or \"3 weeks\".\n         */\n        function formatDurationEN(iso, options) {\n            if (!iso)\n                return '';\n            const l = iso.length;\n            const n = iso.slice(1, l - 1);\n            if (n === '1') {\n                if (options === null || options === void 0 ? void 0 : options.omitOne) {\n                    return ({ 'D': 'day', 'W': 'week', 'M': 'month', 'Y': 'year', }[iso[l - 1]]) || iso[l - 1];\n                }\n                else {\n                    return ({ 'D': '1 day', 'W': '1 week', 'M': '1 month', 'Y': '1 year', }[iso[l - 1]]) || iso[l - 1];\n                }\n            }\n            else {\n                const u = ({ 'D': 'days', 'W': 'weeks', 'M': 'months', 'Y': 'years', }[iso[l - 1]]) || iso[l - 1];\n                return `${n} ${u}`;\n            }\n        }\n        Utils.formatDurationEN = formatDurationEN;\n    })(Utils = CdvPurchase.Utils || (CdvPurchase.Utils = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Utils;\n    (function (Utils) {\n        const HEX2STR = \"0123456789abcdef\".split(\"\");\n        function toHexString(r) {\n            for (var n = \"\", e = 0; e < 4; e++)\n                n += HEX2STR[r >> 8 * e + 4 & 15] + HEX2STR[r >> 8 * e & 15];\n            return n;\n        }\n        function hexStringFromArray(array) {\n            const out = [];\n            for (var arrayLength = array.length, i = 0; i < arrayLength; i++)\n                out.push(toHexString(array[i]));\n            return out.join(\"\");\n        }\n        function add32(r, n) {\n            return r + n & 4294967295;\n        }\n        function complexShift(r, n, e, t, o, u, shiftFunction) {\n            function shiftAdd32(op0, op1, v1) {\n                return add32(op0 << op1 | op0 >>> 32 - op1, v1);\n            }\n            function add32x4(i0, i1, j0, j1) {\n                return add32(add32(i1, i0), add32(j0, j1));\n            }\n            return shiftAdd32(add32x4(r, n, t, u), o, e);\n        }\n        var step1Function = function (shiftFunction, n, e, t, o, u, f, a) { return complexShift(e & t | ~e & o, n, e, u, f, a, shiftFunction); };\n        var step2Function = function (shiftFunction, n, e, t, o, u, f, a) { return complexShift(e & o | t & ~o, n, e, u, f, a, shiftFunction); };\n        var step3Function = function (shiftFunction, n, e, t, o, u, f, a) { return complexShift(e ^ t ^ o, n, e, u, f, a, shiftFunction); };\n        var step4Function = function (shiftFunction, n, e, t, o, u, f, a) { return complexShift(t ^ (e | ~o), n, e, u, f, a, shiftFunction); };\n        function hashStep(inOutVec4, strAsInts, shiftFunction) {\n            if (!shiftFunction)\n                shiftFunction = add32;\n            let v0 = inOutVec4[0];\n            let v1 = inOutVec4[1];\n            let v2 = inOutVec4[2];\n            let v3 = inOutVec4[3];\n            var step1 = step1Function.bind(null, shiftFunction);\n            v0 = step1(v0, v1, v2, v3, strAsInts[0], 7, -680876936);\n            v3 = step1(v3, v0, v1, v2, strAsInts[1], 12, -389564586);\n            v2 = step1(v2, v3, v0, v1, strAsInts[2], 17, 606105819);\n            v1 = step1(v1, v2, v3, v0, strAsInts[3], 22, -1044525330);\n            v0 = step1(v0, v1, v2, v3, strAsInts[4], 7, -176418897);\n            v3 = step1(v3, v0, v1, v2, strAsInts[5], 12, 1200080426);\n            v2 = step1(v2, v3, v0, v1, strAsInts[6], 17, -1473231341);\n            v1 = step1(v1, v2, v3, v0, strAsInts[7], 22, -45705983);\n            v0 = step1(v0, v1, v2, v3, strAsInts[8], 7, 1770035416);\n            v3 = step1(v3, v0, v1, v2, strAsInts[9], 12, -1958414417);\n            v2 = step1(v2, v3, v0, v1, strAsInts[10], 17, -42063);\n            v1 = step1(v1, v2, v3, v0, strAsInts[11], 22, -1990404162);\n            v0 = step1(v0, v1, v2, v3, strAsInts[12], 7, 1804603682);\n            v3 = step1(v3, v0, v1, v2, strAsInts[13], 12, -40341101);\n            v2 = step1(v2, v3, v0, v1, strAsInts[14], 17, -1502002290);\n            v1 = step1(v1, v2, v3, v0, strAsInts[15], 22, 1236535329);\n            var step2 = step2Function.bind(null, shiftFunction);\n            v0 = step2(v0, v1, v2, v3, strAsInts[1], 5, -165796510);\n            v3 = step2(v3, v0, v1, v2, strAsInts[6], 9, -1069501632);\n            v2 = step2(v2, v3, v0, v1, strAsInts[11], 14, 643717713);\n            v1 = step2(v1, v2, v3, v0, strAsInts[0], 20, -373897302);\n            v0 = step2(v0, v1, v2, v3, strAsInts[5], 5, -701558691);\n            v3 = step2(v3, v0, v1, v2, strAsInts[10], 9, 38016083);\n            v2 = step2(v2, v3, v0, v1, strAsInts[15], 14, -660478335);\n            v1 = step2(v1, v2, v3, v0, strAsInts[4], 20, -405537848);\n            v0 = step2(v0, v1, v2, v3, strAsInts[9], 5, 568446438);\n            v3 = step2(v3, v0, v1, v2, strAsInts[14], 9, -1019803690);\n            v2 = step2(v2, v3, v0, v1, strAsInts[3], 14, -187363961);\n            v1 = step2(v1, v2, v3, v0, strAsInts[8], 20, 1163531501);\n            v0 = step2(v0, v1, v2, v3, strAsInts[13], 5, -1444681467);\n            v3 = step2(v3, v0, v1, v2, strAsInts[2], 9, -51403784);\n            v2 = step2(v2, v3, v0, v1, strAsInts[7], 14, 1735328473);\n            v1 = step2(v1, v2, v3, v0, strAsInts[12], 20, -1926607734);\n            var step3 = step3Function.bind(null, shiftFunction);\n            v0 = step3(v0, v1, v2, v3, strAsInts[5], 4, -378558);\n            v3 = step3(v3, v0, v1, v2, strAsInts[8], 11, -2022574463);\n            v2 = step3(v2, v3, v0, v1, strAsInts[11], 16, 1839030562);\n            v1 = step3(v1, v2, v3, v0, strAsInts[14], 23, -35309556);\n            v0 = step3(v0, v1, v2, v3, strAsInts[1], 4, -1530992060);\n            v3 = step3(v3, v0, v1, v2, strAsInts[4], 11, 1272893353);\n            v2 = step3(v2, v3, v0, v1, strAsInts[7], 16, -155497632);\n            v1 = step3(v1, v2, v3, v0, strAsInts[10], 23, -1094730640);\n            v0 = step3(v0, v1, v2, v3, strAsInts[13], 4, 681279174);\n            v3 = step3(v3, v0, v1, v2, strAsInts[0], 11, -358537222);\n            v2 = step3(v2, v3, v0, v1, strAsInts[3], 16, -722521979);\n            v1 = step3(v1, v2, v3, v0, strAsInts[6], 23, 76029189);\n            v0 = step3(v0, v1, v2, v3, strAsInts[9], 4, -640364487);\n            v3 = step3(v3, v0, v1, v2, strAsInts[12], 11, -421815835);\n            v2 = step3(v2, v3, v0, v1, strAsInts[15], 16, 530742520);\n            v1 = step3(v1, v2, v3, v0, strAsInts[2], 23, -995338651);\n            var step4 = step4Function.bind(null, shiftFunction);\n            v0 = step4(v0, v1, v2, v3, strAsInts[0], 6, -198630844);\n            v3 = step4(v3, v0, v1, v2, strAsInts[7], 10, 1126891415);\n            v2 = step4(v2, v3, v0, v1, strAsInts[14], 15, -1416354905);\n            v1 = step4(v1, v2, v3, v0, strAsInts[5], 21, -57434055);\n            v0 = step4(v0, v1, v2, v3, strAsInts[12], 6, 1700485571);\n            v3 = step4(v3, v0, v1, v2, strAsInts[3], 10, -1894986606);\n            v2 = step4(v2, v3, v0, v1, strAsInts[10], 15, -1051523);\n            v1 = step4(v1, v2, v3, v0, strAsInts[1], 21, -2054922799);\n            v0 = step4(v0, v1, v2, v3, strAsInts[8], 6, 1873313359);\n            v3 = step4(v3, v0, v1, v2, strAsInts[15], 10, -30611744);\n            v2 = step4(v2, v3, v0, v1, strAsInts[6], 15, -1560198380);\n            v1 = step4(v1, v2, v3, v0, strAsInts[13], 21, 1309151649);\n            v0 = step4(v0, v1, v2, v3, strAsInts[4], 6, -145523070);\n            v3 = step4(v3, v0, v1, v2, strAsInts[11], 10, -1120210379);\n            v2 = step4(v2, v3, v0, v1, strAsInts[2], 15, 718787259);\n            v1 = step4(v1, v2, v3, v0, strAsInts[9], 21, -343485551);\n            inOutVec4[0] = shiftFunction(v0, inOutVec4[0]);\n            inOutVec4[1] = shiftFunction(v1, inOutVec4[1]);\n            inOutVec4[2] = shiftFunction(v2, inOutVec4[2]);\n            inOutVec4[3] = shiftFunction(v3, inOutVec4[3]);\n        }\n        ;\n        function stringToIntArray(r) {\n            for (var ret = [], e = 0; e < 64; e += 4)\n                ret[e >> 2] = r.charCodeAt(e) + (r.charCodeAt(e + 1) << 8) + (r.charCodeAt(e + 2) << 16) + (r.charCodeAt(e + 3) << 24);\n            return ret;\n        }\n        function computeMD5(str, shiftFunction) {\n            let lastCharIndex;\n            const strLength = str.length;\n            const vec4 = [1732584193, -271733879, -1732584194, 271733878];\n            for (lastCharIndex = 64; lastCharIndex <= strLength; lastCharIndex += 64)\n                hashStep(vec4, stringToIntArray(str.substring(lastCharIndex - 64, lastCharIndex)), shiftFunction);\n            const vec16 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            const reminderLength = (str = str.substring(lastCharIndex - 64)).length;\n            // process by batch of 64\n            let vec16Index;\n            for (vec16Index = 0; vec16Index < reminderLength; vec16Index++)\n                vec16[vec16Index >> 2] |= str.charCodeAt(vec16Index) << (vec16Index % 4 << 3);\n            vec16[vec16Index >> 2] |= 128 << (vec16Index % 4 << 3);\n            if (vec16Index > 55) {\n                hashStep(vec4, vec16, shiftFunction);\n                for (vec16Index = 16; vec16Index--;)\n                    vec16[vec16Index] = 0;\n            }\n            vec16[14] = 8 * strLength;\n            hashStep(vec4, vec16, shiftFunction);\n            return vec4;\n        }\n        ;\n        /**\n         * Returns the MD5 hash-value of the passed string.\n         *\n         * Based on the work of Jeff Mott, who did a pure JS implementation of the MD5 algorithm that was published by Ronald L. Rivest in 1991.\n         * Code was imported from https://github.com/pvorb/node-md5\n         *\n         * I cleaned up the all-including minified version of it.\n         */\n        function md5(str) {\n            if (!str)\n                return '';\n            let shiftFunction;\n            if (\"5d41402abc4b2a76b9719d911017c592\" !== hexStringFromArray(computeMD5(\"hello\")))\n                shiftFunction = function (r, n) {\n                    const e = (65535 & r) + (65535 & n);\n                    return (r >> 16) + (n >> 16) + (e >> 16) << 16 | 65535 & e;\n                };\n            return hexStringFromArray(computeMD5(str, shiftFunction));\n        }\n        Utils.md5 = md5;\n    })(Utils = CdvPurchase.Utils || (CdvPurchase.Utils = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Utils;\n    (function (Utils) {\n        /**\n         * Return a safer version of a callback that runs inside a try/catch block.\n         *\n         * @param logger - Used to log errors.\n         * @param className - Type of callback, helps debugging when a function failed.\n         * @param callback - The callback function is turn into a safer version.\n         */\n        function safeCallback(logger, className, callback) {\n            return function (value) {\n                safeCall(logger, className, callback, value);\n            };\n        }\n        Utils.safeCallback = safeCallback;\n        /**\n         * Run a callback inside a try/catch block.\n         *\n         * @param logger - Used to log errors.\n         * @param className - Type of callback, helps debugging when a function failed.\n         * @param callback - The callback function is turn into a safer version.\n         * @param value - Value passed to the callback.\n         */\n        function safeCall(logger, className, callback, value) {\n            setTimeout(() => {\n                try {\n                    logger.debug(`Calling callback: type=${className} name=${callback.name}`);\n                    callback(value);\n                }\n                catch (error) {\n                    logger.error(`Error in callback: type=${className} name=${callback.name}`);\n                    const errorAsError = error;\n                    if ('message' in errorAsError)\n                        logger.error(errorAsError.message);\n                    if ('fileName' in error)\n                        logger.error('in ' + error.fileName + ':' + error.lineNumber);\n                    if ('stack' in errorAsError)\n                        logger.error(errorAsError.stack);\n                }\n            }, 0);\n        }\n        Utils.safeCall = safeCall;\n    })(Utils = CdvPurchase.Utils || (CdvPurchase.Utils = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Utils;\n    (function (Utils) {\n        function getCryptoExtension() {\n            return (window.crypto || window.msCrypto);\n        }\n        /** Returns an UUID v4. Uses `window.crypto` internally to generate random values. */\n        function uuidv4() {\n            // @ts-ignore\n            return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, function (c) {\n                return (c ^ getCryptoExtension().getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\n            });\n        }\n        Utils.uuidv4 = uuidv4;\n    })(Utils = CdvPurchase.Utils || (CdvPurchase.Utils = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Validator;\n    (function (Validator) {\n        /**\n         * @internal\n         */\n        let Internal;\n        (function (Internal) {\n            function isArray(arg) {\n                return Object.prototype.toString.call(arg) === '[object Array]';\n            }\n            function isObject(arg) {\n                return Object.prototype.toString.call(arg) === '[object Object]';\n            }\n            // List of functions allowed by store.validator_privacy_policy\n            function getPrivacyPolicy(store) {\n                if (typeof store.validator_privacy_policy === 'string')\n                    return store.validator_privacy_policy.split(',');\n                else if (isArray(store.validator_privacy_policy))\n                    return store.validator_privacy_policy;\n                else // default: no tracking\n                    return ['analytics', 'support', 'fraud'];\n            }\n            function getDeviceInfo(store) {\n                const privacyPolicy = getPrivacyPolicy(store); // string[]\n                function allowed(policy) {\n                    return privacyPolicy.indexOf(policy) >= 0;\n                }\n                // Different versions of the plugin use different response fields.\n                // Sending this information allows the validator to reply with only expected information.\n                const ret = {\n                    plugin: 'cordova-plugin-purchase/' + CdvPurchase.PLUGIN_VERSION,\n                };\n                const wdw = window;\n                // the cordova-plugin-device global object\n                const device = isObject(wdw.device) ? wdw.device : {};\n                // Send the receipt validator information about the device.\n                // This will allow to make vendor or device specific fixes and detect class\n                // of devices with issues.\n                // Knowing running version of OS and libraries also required for handling\n                // support requests.\n                if (allowed('analytics') || allowed('support')) {\n                    // Version of ionic (if applicable)\n                    const ionic = wdw.Ionic || wdw.ionic;\n                    if (ionic && ionic.version)\n                        ret.ionic = ionic.version;\n                    // Information from the cordova-plugin-device (if installed)\n                    if (device.cordova)\n                        ret.cordova = device.cordova; // Version of cordova\n                    if (device.model)\n                        ret.model = device.model; // Device model\n                    if (device.platform)\n                        ret.platform = device.platform; // OS\n                    if (device.version)\n                        ret.version = device.version; // OS version\n                    if (device.manufacturer)\n                        ret.manufacturer = device.manufacturer; // Device manufacturer\n                }\n                // Device identifiers are used for tracking users across services\n                // It is sometimes required for support requests too, but I choose to\n                // keep this out.\n                if (allowed('tracking')) {\n                    if (device.serial)\n                        ret.serial = device.serial; // Hardware serial number\n                    if (device.uuid)\n                        ret.uuid = device.uuid; // Device UUID\n                }\n                // Running from a simulator is an error condition for in-app purchases.\n                // Since only developers run in a simulator, let's always report that.\n                if (device.isVirtual)\n                    ret.isVirtual = device.isVirtual; // Simulator\n                // Probably nobody wants to disable fraud discovery.\n                // A fingerprint of the device identifiers is used for fraud discovery.\n                // An alert should be triggered by the validator when a lot of devices\n                // share a single receipt.\n                if (allowed('fraud')) {\n                    // For fraud discovery, we only need a fingerprint of the device.\n                    var fingerprint = '';\n                    if (device.serial)\n                        fingerprint = 'serial:' + device.serial; // Hardware serial number\n                    else if (device.uuid)\n                        fingerprint = 'uuid:' + device.uuid; // Device UUID\n                    else {\n                        // Using only model and manufacturer, we might end-up with many\n                        // users sharing the same fingerprint, which is fine for fraud discovery.\n                        if (device.model)\n                            fingerprint += '/' + device.model;\n                        if (device.manufacturer)\n                            fingerprint = '/' + device.manufacturer;\n                    }\n                    // Fingerprint is hashed to keep required level of privacy.\n                    if (fingerprint)\n                        ret.fingerprint = CdvPurchase.Utils.md5(fingerprint);\n                }\n                return ret;\n            }\n            Internal.getDeviceInfo = getDeviceInfo;\n        })(Internal = Validator.Internal || (Validator.Internal = {}));\n    })(Validator = CdvPurchase.Validator || (CdvPurchase.Validator = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    let Validator;\n    (function (Validator) {\n        let Request;\n        (function (Request) {\n            ;\n        })(Request = Validator.Request || (Validator.Request = {}));\n    })(Validator = CdvPurchase.Validator || (CdvPurchase.Validator = {}));\n})(CdvPurchase || (CdvPurchase = {}));\nvar CdvPurchase;\n(function (CdvPurchase) {\n    /** Receipt data as validated by the receipt validation server */\n    class VerifiedReceipt {\n        /**\n         * @internal\n         */\n        constructor(receipt, response, decorator) {\n            var _a;\n            /** @internal */\n            this.className = 'VerifiedReceipt';\n            this.id = response.id;\n            this.sourceReceipt = receipt;\n            this.collection = (_a = response.collection) !== null && _a !== void 0 ? _a : [];\n            this.latestReceipt = response.latest_receipt;\n            this.nativeTransactions = [response.transaction];\n            this.warning = response.warning;\n            Object.defineProperty(this, 'raw', { 'enumerable': false, get() { return response; } });\n            Object.defineProperty(this, 'finish', { 'enumerable': false, get() { return () => decorator.finish(this); } });\n        }\n        /** Platform this receipt originated from */\n        get platform() { return this.sourceReceipt.platform; }\n        /** Get raw response data from the receipt validation request */\n        get raw() { return {}; } // actual implementation as \"defineProperty\" in constructor.\n        /**\n         * Update the receipt content\n         *\n         * @internal\n         */\n        set(receipt, response) {\n            var _a;\n            this.id = response.id;\n            this.sourceReceipt = receipt;\n            this.collection = (_a = response.collection) !== null && _a !== void 0 ? _a : [];\n            this.latestReceipt = response.latest_receipt;\n            this.nativeTransactions = [response.transaction];\n            this.warning = response.warning;\n        }\n        /** Finish all transactions in the receipt */\n        async finish() { }\n    }\n    CdvPurchase.VerifiedReceipt = VerifiedReceipt;\n})(CdvPurchase || (CdvPurchase = {}));\n","// `Symbol.prototype.description` getter\n// https://tc39.es/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar toString = require('../internals/to-string');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\nvar SymbolPrototype = NativeSymbol && NativeSymbol.prototype;\n\nif (DESCRIPTORS && isCallable(NativeSymbol) && (!('description' in SymbolPrototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString(arguments[0]);\n    var result = isPrototypeOf(SymbolPrototype, this)\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  SymbolWrapper.prototype = SymbolPrototype;\n  SymbolPrototype.constructor = SymbolWrapper;\n\n  var NATIVE_SYMBOL = String(NativeSymbol('test')) == 'Symbol(test)';\n  var thisSymbolValue = uncurryThis(SymbolPrototype.valueOf);\n  var symbolDescriptiveString = uncurryThis(SymbolPrototype.toString);\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  var replace = uncurryThis(''.replace);\n  var stringSlice = uncurryThis(''.slice);\n\n  defineBuiltInAccessor(SymbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = thisSymbolValue(this);\n      if (hasOwn(EmptyStringDescriptionStore, symbol)) return '';\n      var string = symbolDescriptiveString(symbol);\n      var desc = NATIVE_SYMBOL ? stringSlice(string, 7, -1) : replace(string, regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, constructor: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n","<template>\n  <ion-modal\n    :is-open=\"isOpen\"\n    @ionModalDidDismiss=\"dismissedModal\"\n    @ionModalWillPresent=\"ionModalWillPresent\"\n    :initial-breakpoint=\"1\"\n    :breakpoints=\"[0, 1]\"\n    class=\"custom-modal slideup-modal\"\n  >\n    <ion-content>\n      <CustomModalLayout hideFooter>\n        <template #header>\n          <ion-toolbar>\n            <ion-buttons slot=\"start\">\n              <ion-text class=\"text-bold\">쿠폰보관함</ion-text>\n            </ion-buttons>\n            <ion-buttons slot=\"end\">\n              <ion-text @click=\"dismissedModal\"> 닫기</ion-text>\n            </ion-buttons>\n          </ion-toolbar>\n        </template>\n        <template #content>\n          <ion-list lines=\"none\">\n            <StoreCouponListItem\n              v-for=\"(item, index) in couponList\"\n              :key=\"index\"\n              :item=\"item\"\n              :icon=\"heartIcon\"\n            />\n          </ion-list>\n        </template>\n      </CustomModalLayout>\n    </ion-content>\n  </ion-modal>\n</template>\n<script>\nimport StoreCouponListItem from \"@/components/Store/StoreCouponListItem.vue\";\nimport { getData } from \"@/assets/js/common\";\nimport IconHeart from \"@/assets/img/icon/icon_store_heart.svg\";\n\nexport default {\n  name: \"StoreCouponModal\",\n  components: {\n    StoreCouponListItem\n  },\n  props: {\n    isOpen: {\n      type: Boolean\n    },\n    icon: {\n      type: String\n    }\n  },\n  data() {\n    return {\n      heartIcon: IconHeart,\n      couponList: []\n\n    };\n  },\n  methods: {\n    dismissedModal() {\n      this.$emit(\"dismissedModal\");\n    },\n    ionModalWillPresent() {\n      getData({\n        url: \"/getUserCurrentCouponList\",\n        param: {},\n        then: (data) => {\n          this.couponList = data;\n        }\n      });\n    }\n  }\n\n};\n</script>\n<style lang=\"scss\" scoped>\nion-modal {\n  --height: 80%;\n}\n</style>\n","<template>\n  <ion-item>\n    <ion-icon slot=\"start\" v-if=\"icon\" :icon=\"icon\"></ion-icon>\n    <ion-label>\n      <ion-text color=\"light\" class=\"text-bold text-md\">{{\n        item.couponNm\n      }}</ion-text>\n    </ion-label>\n    <ion-label slot=\"end\">\n      <ion-text color=\"light\" class=\"text-bold text-md\"\n        >{{ item.quantity }} 개</ion-text\n      >\n    </ion-label>\n  </ion-item>\n</template>\n<script>\nexport default {\n  name: 'StoreCouponListItem',\n  props: {\n    item: {\n      type: Object\n    },\n    icon: {\n      type: String\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\nion-item {\n  --padding-start: 0;\n  --inner-padding-end: 0;\n  ion-icon {\n    width: 36px;\n    height: 36px;\n  }\n}\n</style>\n","import { render } from \"./StoreCouponListItem.vue?vue&type=template&id=72fd9904&scoped=true\"\nimport script from \"./StoreCouponListItem.vue?vue&type=script&lang=js\"\nexport * from \"./StoreCouponListItem.vue?vue&type=script&lang=js\"\n\nimport \"./StoreCouponListItem.vue?vue&type=style&index=0&id=72fd9904&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-72fd9904\"]])\n\nexport default __exports__","import { render } from \"./StoreCouponModal.vue?vue&type=template&id=4b588fca&scoped=true\"\nimport script from \"./StoreCouponModal.vue?vue&type=script&lang=js\"\nexport * from \"./StoreCouponModal.vue?vue&type=script&lang=js\"\n\nimport \"./StoreCouponModal.vue?vue&type=style&index=0&id=4b588fca&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4b588fca\"]])\n\nexport default __exports__","<template>\n  <ion-item lines=\"none\">\n    <ion-icon\n      :icon=\"checkIcon\"\n      size=\"large\"\n      :color=\"subscribedItem === 'GOLD_PASS' ? 'warning' : 'light'\"\n    ></ion-icon>\n    <ion-text\n      :color=\"\n        index === 0 || (index === 1 && subscribedItem === 'GOLD_PASS')\n          ? 'danger'\n          : 'light'\n      \"\n      class=\"text-bold text-sm\"\n    >\n      {{ item }}\n    </ion-text>\n  </ion-item>\n</template>\n<script>\nimport IconCheck from '@/assets/img/icon/icon_check.svg';\nexport default {\n  name: 'SubscriptionDescItem',\n  props: {\n    item: {\n      type: Object\n    },\n    index: {\n      type: Number\n    },\n    subscribedItem: {\n      type: String\n    }\n  },\n  data() {\n    return {\n      checkIcon: IconCheck\n    };\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\nion-item {\n  --padding-top: 0;\n  --padding-bottom: 0;\n  --padding-start: 0;\n  &::part(native) {\n    min-height: 0;\n  }\n}\n</style>\n","import { render } from \"./SubscriptionDescItem.vue?vue&type=template&id=89403e14&scoped=true\"\nimport script from \"./SubscriptionDescItem.vue?vue&type=script&lang=js\"\nexport * from \"./SubscriptionDescItem.vue?vue&type=script&lang=js\"\n\nimport \"./SubscriptionDescItem.vue?vue&type=style&index=0&id=89403e14&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-89403e14\"]])\n\nexport default __exports__","<template>\n  <ion-page>\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <BackButton />\n        </ion-buttons>\n        <ion-title>Store</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content>\n      <div class=\"sticky-top segment-round\">\n        <ion-segment\n          v-model=\"categoryCd\"\n          mode=\"md\"\n          :scrollable=\"true\"\n          class=\"segment-round-button\"\n        >\n          <ion-segment-button\n            v-show=\"categoryList != null\"\n            v-for=\"item in categoryList\"\n            :value=\"item.categoryCd\"\n            @click=\"categoryBtn(item)\"\n            :key=\"item.categoryCd\"\n          >\n            {{ item.categoryNm }}\n          </ion-segment-button>\n          <ion-segment-button\n            v-show=\"categoryList == null\"\n          ></ion-segment-button>\n        </ion-segment>\n      </div>\n      <div class=\"ion-padding\">\n        <div class=\"row-box\">\n          <ion-toolbar style=\"--min-height: 40px\">\n            <ion-buttons slot=\"start\" class=\"my-point\">\n              <ion-icon :icon=\"heartIcon\" size=\"large\"></ion-icon>\n              <ion-chip color=\"light\" class=\"shape-round text-sm\">\n                <strong class=\"text-bold\">{{\n                  userPoint ? userPoint : 0\n                }}</strong>\n              </ion-chip>\n            </ion-buttons>\n            <ion-buttons slot=\"end\">\n              <ion-chip\n                color=\"light\"\n                class=\"shape-round text-sm\"\n                @click=\"modalOpen = true\"\n                >쿠폰보관함\n              </ion-chip>\n            </ion-buttons>\n          </ion-toolbar>\n        </div>\n        <!--        <div class=\"row-box\" v-if=\"bannerList.length > 0\">-->\n        <!--          <StoreBanner :bannerList=\"bannerList\" @storeCategory=\"storeCategory\" />-->\n        <!--        </div>-->\n        <div class=\"row-box\">\n          <!--@click=\"heartConfirmBtn(item)\"-->\n\n          <ion-list lines=\"none\" v-if=\"categoryCd === 'HEART'\">\n            <ion-list-header>\n              <ion-text color=\"light\">충전하기</ion-text>\n            </ion-list-header>\n            <StorePurchaseListItem\n              v-for=\"(item, index) in storeItemList\"\n              :key=\"index\"\n              :icon=\"heartIcon\"\n              :item=\"item\"\n              :index=\"index\"\n              @click=\"startInAppPurchase(item)\"\n            />\n          </ion-list>\n          <ion-list lines=\"none\" v-if=\"categoryCd === 'ITEM'\">\n            <ion-list-header>\n              <ion-text color=\"light\">기간한정</ion-text>\n            </ion-list-header>\n            <template v-if=\"storeVoteFilteredList.length > 0\">\n              <div\n                v-for=\"(list, index) in storeVoteFilteredList\"\n                :key=\"index\"\n                class=\"row-box\"\n              >\n                <StoreVoteList\n                  :item-list=\"list.values\"\n                  :title=\"list.title\"\n                  @itemConfirmBtn=\"itemConfirmBtn\"\n                />\n              </div>\n            </template>\n\n            <div\n              v-for=\"(list, index) in storeFilteredList\"\n              :key=\"index\"\n              class=\"row-box\"\n            >\n              <StoreListHeader\n                :item=\"list\"\n                :title=\"list.title\"\n                :icon=\"storeIconList[list.key]\"\n              />\n              <ion-grid class=\"gap-md\">\n                <ion-row>\n                  <ion-col\n                    size=\"6\"\n                    v-for=\"(item, index2) in list.values\"\n                    :key=\"index2\"\n                    style=\"padding: 8px 3px 8px 3px\"\n                  >\n                    <StoreListItem\n                      :item=\"item\"\n                      :title=\"list.title\"\n                      @click=\"itemConfirmBtn(item, 'USE')\"\n                    >\n                    </StoreListItem>\n                  </ion-col>\n                </ion-row>\n              </ion-grid>\n            </div>\n          </ion-list>\n          <ion-list lines=\"none\" v-if=\"categoryCd === 'SUBSCRIBE'\">\n            <StoreSubscribedListItem\n              v-for=\"(item, index) in storeItemList\"\n              :key=\"index\"\n              :selected=\"selected\"\n              :item=\"item\"\n              @click=\"startInAppPurchase(item)\"\n            />\n          </ion-list>\n          <ion-list lines=\"none\" v-if=\"categoryCd === 'PACKAGE'\">\n            <!--@click=\"itemConfirmBtn(item, 'BUY')\"-->\n            <StoreListItem\n              v-for=\"(item, index) in storeItemList\"\n              :key=\"index\"\n              @click=\"itemConfirmBtn(item, 'BUY')\"\n            >\n              <template #content>\n                <div>\n                  <ion-text color=\"light\" class=\"text-bold text-lg\"\n                    >{{ item.itemNm }}\n                  </ion-text>\n                  <br />\n                  <ion-text color=\"warning\" class=\"text-xs\">\n                    {{ item.description }}\n                  </ion-text>\n                </div>\n              </template>\n              <template #price>\n                <ion-text color=\"light\" class=\"text-md text-bold\"\n                  >{{ item.priceWon }} 원\n                </ion-text>\n              </template>\n            </StoreListItem>\n          </ion-list>\n        </div>\n      </div>\n    </ion-content>\n    <ion-footer>\n      <div class=\"row-box\" v-if=\"categoryCd === 'SUBSCRIBE'\">\n        <ion-text color=\"light\" class=\"text-sm\">\n          구독 서비스는 회원님이 앱스토어 설정에서 직접 취소할 때까지 <br />\n          동일한 패키지 기간, 동일한 가격으로 자동 갱신되며,<br />\n          \"네이비\" 이용약관에 동의하게 됩니다.\n        </ion-text>\n      </div>\n      <div class=\"text-center\">\n        <ion-text color=\"light\" class=\"text-sm\">\n          <span @click.stop=\"terms('a')\">이용약관</span> /\n          <span @click.stop=\"terms('b')\">개인정보 취급방침</span> /\n          <span @click.stop=\"purchaseRecovery()\">구매복구</span>\n        </ion-text>\n      </div>\n    </ion-footer>\n    <!--  modal    -->\n    <StoreCouponModal\n      :is-open=\"modalOpen\"\n      @dismissedModal=\"modalOpen = false\"\n    />\n    <TermsModal\n      :is-open=\"termModalOpen\"\n      :termsTitle=\"termsTitle\"\n      :termsType=\"termsType\"\n      @ionModalDidDismiss=\"termModalOpen = false\"\n    />\n  </ion-page>\n</template>\n\n<script>\nimport { getData, storeMap, storeMapFn } from '@/assets/js/common';\nimport StoreListHeader from '@/components/Store/StoreListHeader.vue';\nimport StoreListItem from '@/components/Store/StoreListItem.vue';\nimport StorePurchaseListItem from '@/components/Store/StorePurchaseListItem.vue';\nimport StoreSubscribedListItem from '@/components/Store/StoreSubscribedListItem.vue';\nimport StoreVoteList from '@/components/Store/StoreVoteList.vue';\nimport StoreCouponModal from '@/components/Store/StoreCouponModal.vue';\nimport StoreBanner from '@/components/Store/StoreBanner.vue';\nimport TermsModal from '@/components/Modal/TermsModal.vue';\n\nimport IconHeart from '@/assets/img/icon/icon_store_heart.svg';\nimport IconSuperLike from '@/assets/img/store/superlike.svg';\n\nimport 'cordova-plugin-purchase';\n\nimport { Capacitor } from '@capacitor/core';\n\nexport default {\n  name: 'Store',\n  inject: ['alertController', 'loadingController'],\n  components: {\n    StoreCouponModal,\n    StoreListHeader,\n    StoreListItem,\n    StorePurchaseListItem,\n    StoreSubscribedListItem,\n    StoreVoteList,\n    TermsModal,\n    StoreBanner\n  },\n  computed: {\n    storeFilteredList() {\n      // TODO : 아이템별 배열 추출\n      const result = [];\n      const itemCdRegex = /^([A-Za-z0-9]+)_/;\n      for (const item of this.storeItemList) {\n        /** 보여줄 아이템 체크 **/\n        if (item.showYn === 'Y') {\n          const match = itemCdRegex.exec(item.itemCd);\n          if (match) {\n            const key = match[1];\n            const title = item.itemNm.split('(')[0]; // 아이템별 타이틀 추출\n            const existingEntry = result.find((entry) => entry.key === key);\n            if (existingEntry) {\n              existingEntry.values.push(item);\n            } else {\n              result.push({ key, title, values: [item] });\n            }\n          }\n        }\n      }\n      console.log('result', result);\n      return result;\n    },\n    storeVoteFilteredList() {\n      // TODO : 아이템별 배열 추출\n      const result = [];\n      const itemCdRegex = /^([A-Za-z0-9]+)_/;\n      for (const item of this.storeItemList) {\n        /** 보여줄 아이템 체크 **/\n        if (item.contestYn === 'Y') {\n          const match = itemCdRegex.exec(item.itemCd);\n          if (match) {\n            const key = match[1];\n            const title = item.itemNm.split('(')[0]; // 아이템별 타이틀 추출\n            const existingEntry = result.find((entry) => entry.key === key);\n            if (existingEntry) {\n              existingEntry.values.push(item);\n            } else {\n              result.push({ key, title, values: [item] });\n            }\n          }\n        }\n      }\n      console.log('result', result);\n      return result;\n    },\n    userPoint() {\n      return this.$store.state.userPoint;\n    }\n  },\n  data() {\n    return {\n      heartIcon: IconHeart,\n      storeIconList: {\n        // TODO :  아이템 리스트별 아이콘\n        IT001: IconSuperLike\n      },\n      segmentValue: 'light',\n\n      categoryCd: '',\n      categoryList: [],\n      storeItemList: [],\n\n      heartCd: '',\n      heartSum: '',\n      type: '',\n\n      termsTitle: '',\n      termsType: '',\n      termModalOpen: false,\n\n      modalOpen: false,\n      bannerList: [],\n      selected: null,\n\n      subscribedPlan: 'NAVY_PLUS'\n    };\n  },\n  ionViewWillEnter() {\n    // 진입할 때 호출\n    // this.getCategoryList();\n    this.getCategoryList();\n    this.getUserLastPoint();\n    this.getBannerList();\n  },\n  ionViewDidLeave() {\n    // 떠날 때 호출\n    storeMapFn({});\n  },\n  mounted() {\n    if (Capacitor.getPlatform() !== 'web') {\n      if (\n        !CdvPurchase.store.get(\n          'navy_heart_item60',\n          Capacitor.getPlatform() == 'ios'\n            ? CdvPurchase.Platform.APPLE_APPSTORE\n            : CdvPurchase.Platform.GOOGLE_PLAY\n        )\n      ) {\n        //alert('없음');\n        this.initStore();\n      } else {\n        //alert('있음');\n      }\n    }\n  },\n  methods: {\n    initStore() {\n      //alert('init');\n\n      //const iaptic = new\n      //CdvPurchase.store.compatibility = 11;\n\n      //const store = CdvPurchase.store;\n      //const { ProductType, Platform, LogLevel, Product, VerifiedReceipt } =\n      //  CdvPurchase; // shortcuts\n\n      getData({\n        url: '/getStoreInitList',\n        param: {},\n        then: (dataList) => {\n          /*if(InAppPurchase2.get(dataList[0]['productId'])){\n            alert('이미 있음');\n            return;\n          }*/\n\n          for (let idx in dataList) {\n            console.log('등록 시작! [' + idx + ']');\n            if (dataList[idx]['buyType'] == 'subscribe') {\n              //구독 셋팅\n              CdvPurchase.store.register({\n                id: dataList[idx]['productId'],\n                type: CdvPurchase.ProductType.PAID_SUBSCRIPTION,\n                platform:\n                  Capacitor.getPlatform() == 'ios'\n                    ? CdvPurchase.Platform.APPLE_APPSTORE\n                    : CdvPurchase.Platform.GOOGLE_PLAY\n              });\n            } else {\n              //소모성 셋팅\n              CdvPurchase.store.register({\n                id: dataList[idx]['productId'],\n                type: CdvPurchase.ProductType.CONSUMABLE,\n                platform:\n                  Capacitor.getPlatform() == 'ios'\n                    ? CdvPurchase.Platform.APPLE_APPSTORE\n                    : CdvPurchase.Platform.GOOGLE_PLAY\n              });\n            }\n          }\n          //CdvPurchase.store.refresh();\n          const iaptic = new CdvPurchase.Iaptic({\n            appName: 'cmdg.navy.client',\n            apiKey: 'c83df663-2e86-4db5-98f7-5e0657d7f537'\n          });\n          CdvPurchase.store.validator = iaptic.validator;\n          CdvPurchase.store.applicationUsername = () => 'demo-user';\n\n          CdvPurchase.store\n            .when()\n            .approved((transaction) => {\n              console.log(\"approved : \" +transaction);\n\n              if(transaction.products[0]['id'] != 'cmdg.navy.client' || transaction.state != 'finished') {\n                alert(' approved :: ' + JSON.stringify(transaction));\n              }\n\n              transaction.verify();\n            })\n            .verified((receipt) => {\n\n              console.log(\"verified : \"+receipt);\n\n              //if(receipt.id != 'cmdg.navy.client' || receipt.transaction[0]['state'] != 'finished'){\n                alert(' verified :: ' + JSON.stringify(receipt));\n              //}\n\n              receipt.finish();\n              /*if (receipt.id != 'cmdg.navy.client' && receipt != null) {\n                let url = '/purchase';\n                let param = {};\n\n                if (Capacitor.getPlatform == 'ios') {\n                  url += '/apple';\n                  param = {\n                    receiptData:\n                      receipt.sourceReceipt.nativeData.appStoreReceipt\n                  };\n                } else if (Capacitor.getPlatform == 'android') {\n                  url += '/google';\n                  param = { productId: receipt.id };\n                }\n\n                getData({\n                  url: url,\n                  param: param,\n                  then: (data) => {\n                    if (data.successYn != 'Y') {\n                      alert(data.message);\n                    } else {\n                      if (data.lastPoint != undefined) {\n                        this.$store.state.userPoint = data.lastPoint;\n                      }\n                    }\n                    this.selected = null; // 선택 초기화\n                    this.$store.state.loading.dismiss();\n                  }\n                });\n              } else {\n                this.$store.state.loading.dismiss();\n                CdvPurchase.store.verify(receipt);\n              }*/\n\n              //CdvPurchase.store.finish(receipt);\n            })\n            .finished((transaction) => {\n              //alert(\" finished :: \" + JSON.stringify(transaction));\n              alert('finished' + JSON.stringify(transaction));\n            })\n            .pending((p) => {\n              alert('pending' + JSON.stringify(p));\n            })\n            .unverified((p) => {\n              alert('unverified' + JSON.stringify(p));\n            })\n            .receiptsReady((p) => {\n              //alert('receiptsReady' + JSON.stringify(p));\n            })\n            .receiptsVerified((p) => {\n              //alert('receiptsVerified' + JSON.stringify(p));\n            })\n            .receiptUpdated((r) => {\n              //r.finish();\n            })\n            .productUpdated((p) => {\n              //alert(\" productUpdated :: \" + JSON.stringify(p));\n            });\n\n          /*CdvPurchase.store.when('product')\n            .approved( (transaction) => {\n              console.log(transaction);\n              alert(Capacitor.getPlatform() + \" transaction :: \" + JSON.stringify(transaction));*/\n\n          /* const produitVerification = CdvPurchase.store.get(transaction.products[0]['id'], (Capacitor.getPlatform() == \"ios\")? CdvPurchase.Platform.APPLE_APPSTORE : CdvPurchase.Platform.GOOGLE_PLAY);\n              const transactionVerification = CdvPurchase.store.findInLocalReceipts(produitVerification);\n\n\n\n              alert(JSON.stringify(transactionVerification));*/\n\n          /* CdvPurchase.store.verify(transaction);\n              //transaction.verify();\n            })\n            .verified(receipt => {\n              alert(Capacitor.getPlatform() + \" receipt :: \" + JSON.stringify(receipt));\n              //CdvPurchase.store.finish(receipt);\n\n              receipt.finish();\n            });\n*/\n          /*CdvPurchase.store.when('product')\n            .approved((p) => {\n\n             if(p.id != \"cmdg.navy.client\" && p.transaction != null){\n               let url = '/purchase';\n               let param = {};\n\n               if (Capacitor.getPlatform == 'ios') {\n                 url += '/apple';\n                 param = {receiptData: p.transaction.appStoreReceipt};\n               } else if (Capacitor.getPlatform == 'android') {\n                 alert(p);\n                 url += '/google';\n               }\n\n               getData({\n                 url: url,\n                 param: param,\n                 then: (data) => {\n                   if(data.successYn != 'Y'){\n                     alert(data.message);\n                   } else {\n                     if(data.lastPoint != undefined){\n                       this.$store.state.userPoint = data.lastPoint;\n                     }\n                   }\n                   this.selected = null; // 선택 초기화\n                   this.$store.state.loading.dismiss();\n                 }\n               });\n\n             } else {\n               this.$store.state.loading.dismiss();\n               p.finish();\n             }\n\n              //p.verify();\n\n\n            })\n            .verified((p) => {\n              p.finish();\n            });\n          CdvPurchase.store.when('product').cancelled(() => {\n            this.$store.state.loading.dismiss();\n          });\n\n          CdvPurchase.store.error((err) => {\n            this.$store.state.loading.dismiss();\n            alert('Store Error ' + JSON.stringify(err));\n          });*/\n          /*[\n            CdvPurchase.Platform.APPLE_APPSTORE,\n            CdvPurchase.Platform.GOOGLE_PLAY\n          ]*/\n          CdvPurchase.store.initialize([\n            {\n              platform: CdvPurchase.Platform.APPLE_APPSTORE,\n              options: {\n                needAppReceipt: true,\n                discountEligibilityDeterminer:\n                  iaptic.appStoreDiscountEligibilityDeterminer\n              }\n            },\n            CdvPurchase.Platform.GOOGLE_PLAY\n          ]);\n          // CdvPurchase.store.refresh();\n        }\n      });\n    },\n\n    orderOffer(platform, productId, offerId) {\n      const store = CdvPurchase.store;\n      const offer = store.get(productId, platform)?.getOffer(offerId);\n      if (offer) store.order(offer);\n    },\n\n    startInAppPurchase(item) {\n      let self = this;\n      let productId = item.productId;\n\n      console.log('구매시작 : ' + productId);\n\n      //InAppPurchase2.refresh();\n\n      //alert('구매시작: '+ productId)\n\n      if (Capacitor.getPlatform() === 'web') {\n        alert('웹에서는 구매할 수 없습니다.');\n        //this.$store.state.loading.dismiss();\n        return;\n      }\n\n      //this.orderOffer(CdvPurchase.Platform.APPLE_APPSTORE, productId, CdvPurchase.Product.offers.id);\n\n      CdvPurchase.store.ready(() => {\n        /** 로딩 **/\n        //this.showLoadingStore();\n\n        const product = CdvPurchase.store.get(\n          productId,\n          Capacitor.getPlatform() == 'ios'\n            ? CdvPurchase.Platform.APPLE_APPSTORE\n            : CdvPurchase.Platform.GOOGLE_PLAY\n        );\n\n        //console.log(product);\n\n        if (product.canPurchase) {\n          CdvPurchase.store.order(product.getOffer());\n        }\n      });\n\n      /*const offer = CdvPurchase.store.get(productId, CdvPurchase.Platform.APPLE_APPSTORE)?.getOffer(offerId)\n      if (offer) CdvPurchase.store.order(offer)*/\n      //플랫폼에 따른 분기 ? 제품코드가 동일하면 괜찮음\n      //InAppPurchase2.refresh();\n\n      /* CdvPurchase.store.order(productId)\n          .then(() => {\n            //주문시작\n\n          })\n          .catch(() => {\n            alert(\n              '구매중 오류가 발생하였습니다. 다시 시도하여 주시기 바랍니다.'\n            );\n            this.$store.state.loading.dismiss();\n            this.selected = null; // 선택 초기화\n          });*/\n    },\n\n    //하트구매처리\n    setHartBuyToFinish(item) {\n      //this.showLoading();\n      getData({\n        url: '/setBuyHeart',\n        param: this.setItemBuyForm(item, 'BUY'),\n        then: (data) => {\n          if (data.successYn === 'N') {\n            alert(data.message);\n            //this.warningAlert();\n          } else {\n            //this.warningAlert(data.message);\n            this.$store.state.userPoint = data.lastPoint;\n          }\n          this.$store.state.loading.dismiss();\n        }\n      });\n    },\n\n    getStoreItemListForm() {\n      var resultObj = {};\n      resultObj.categoryCd = this.categoryCd;\n      return resultObj;\n    },\n\n    setItemBuyForm(item, pointCd) {\n      var resultObj = {};\n      resultObj.itemCd = item.itemCd;\n      resultObj.pointCd = pointCd;\n      //구독전용\n      resultObj.subscribeCd = item.itemCd;\n      return resultObj;\n    },\n\n    getCategoryList() {\n      getData({\n        url: '/getStoreCategoryList',\n        param: {},\n        then: (data) => {\n          this.categoryList = data;\n          // 카테고리 초기화 막아버리기\n          if (this.categoryCd === '') {\n            if (data.length > 0) {\n              this.categoryCd = data[0].categoryCd; // 처음 선택값\n              if (\n                storeMap.subscribeYn != undefined &&\n                storeMap.subscribeYn != null\n              ) {\n                this.categoryCd = 'SUBSCRIBE';\n              }\n              if (storeMap.categoryType == 'item') {\n                this.categoryCd = 'ITEM';\n              }\n            }\n          }\n          this.$nextTick(() => {\n            this.getItemList();\n          });\n        }\n      });\n    },\n\n    getItemList() {\n      this.storeItemList = [];\n      getData({\n        url: '/getStoreItemList',\n        param: this.getStoreItemListForm(),\n        then: (data) => {\n          this.storeItemList = data;\n          /*this.$nextTick(() => {\n            this.initStore(data);\n          });*/\n        }\n      });\n    },\n\n    getUserLastPoint() {\n      getData({\n        url: '/getUserLastPoint',\n        param: {},\n        then: (data) => {\n          this.$store.state.userPoint = data.lastPoint;\n        }\n      });\n    },\n    // TODO : 배너 type 변경 필요\n\n    getBannerList() {\n      getData({\n        url: '/getBannerList',\n        param: { bannerType: 'HOME' },\n        then: (data) => {\n          this.$nextTick(() => {\n            this.bannerList = data;\n          });\n        }\n      });\n    },\n\n    storeCategory() {\n      this.categoryCd = 'SUBSCRIBE';\n    },\n\n    /** 하트 구매  **/\n    async heartConfirmBtn(heart) {\n      const alert = await this.alertController.create({\n        //cssClass: 'my-custom-class',\n        header: '',\n        message: '하트 ' + heart.sumPayment + ' 개를 정말 구매하시겠습니까?',\n        buttons: [\n          {\n            text: '취소',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {}\n          },\n          {\n            text: '구매',\n            handler: () => {\n              this.showLoading();\n              getData({\n                url: '/setBuyHeart',\n                param: this.setItemBuyForm(heart, 'BUY'),\n                then: (data) => {\n                  if (data.successYn === 'N') {\n                    this.warningAlert(data.message);\n                  } else {\n                    this.warningAlert(data.message);\n                    this.userPoint = data.lastPoint;\n                  }\n                  this.loading.dismiss();\n                }\n              });\n            }\n          }\n        ]\n      });\n      return alert.present();\n    },\n\n    /** 구독 완료 처리 **/\n    finishSubscribe(item) {\n      //this.showLoading();\n      getData({\n        url: '/buySubscribeComplete',\n        param: this.setItemBuyForm(item, 'BUY'),\n        then: (data) => {\n          if (data.successYn === 'NE') {\n            this.warningAlert(data.message);\n          } else if (data.successYn === 'NH') {\n            //this.heartPageConfirmBtn(data);\n          } else {\n            this.warningAlert(data.message);\n            if (data.lastPoint != undefined) {\n              //this.userPoint = data.lastPoint;\n            }\n          }\n\n          this.$store.state.loading.dismiss();\n        }\n      });\n    },\n\n    /** 아이템, 패키지 구매  **/\n    async itemConfirmBtn(item, heartType) {\n      let url = '';\n      if (this.categoryCd === 'ITEM') {\n        url = '/setBuyItem';\n      } else if (this.categoryCd === 'PACKAGE') {\n        url = '/setBuyPackage';\n      } else if (this.categoryCd === 'SUBSCRIBE') {\n        url = '/buySubscribeComplete';\n      }\n\n      const alert = await this.alertController.create({\n        //cssClass: 'my-custom-class',\n        header: '',\n        message: item.itemNm + ' 을 정말 구매하시겠습니까?',\n        buttons: [\n          {\n            text: '취소',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {}\n          },\n          {\n            text: '구매',\n            handler: () => {\n              this.showLoading();\n              getData({\n                url: url,\n                param: this.setItemBuyForm(item, heartType),\n                then: (data) => {\n                  if (data.successYn === 'NE') {\n                    this.warningAlert(data.message);\n                  } else if (data.successYn === 'NH') {\n                    this.heartPageConfirmBtn(data);\n                  } else {\n                    this.warningAlert(data.message);\n                    if (data.lastPoint != undefined) {\n                      this.$store.state.userPoint = data.lastPoint;\n                    }\n\n                    // 투표권 구매 시\n                    if (data.buyCnt != undefined) {\n                      for (let i = 0; this.storeFilteredList.length > i; i++) {\n                        if (this.storeFilteredList[i].key == 'IT012') {\n                          this.storeFilteredList[i].values[0].buyCnt =\n                            data.buyCnt;\n                          break;\n                        }\n                      }\n                    }\n                  }\n\n                  this.loading.dismiss();\n                }\n              });\n            }\n          }\n        ]\n      });\n      return alert.present();\n    },\n\n    /** 하트페이지로 이동  **/\n    async heartPageConfirmBtn(data) {\n      const alert = await this.alertController.create({\n        //cssClass: 'my-custom-class',\n        header: '',\n        message: data.message,\n        buttons: [\n          {\n            text: '취소',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {}\n          },\n          {\n            text: '이동',\n            handler: () => {\n              this.categoryCd = this.categoryList[0].categoryCd;\n              this.getItemList();\n            }\n          }\n        ]\n      });\n      return alert.present();\n    },\n\n    async warningAlert(message) {\n      const alert = await this.alertController.create({\n        header: '',\n        subHeader: '',\n        message: message,\n        buttons: ['OK']\n      });\n      return alert.present();\n    },\n\n    /** 카테고리 선택 아이템 **/\n    categoryBtn(e) {\n      this.categoryCd = e.categoryCd;\n\n      // this.$nextTick(() => {\n      this.getItemList();\n      // });\n    },\n\n    terms(type) {\n      if (type === 'a') {\n        this.termsType = 'service';\n        this.termsTitle = '서비스 이용약관';\n      } else if (type === 'b') {\n        this.termsType = 'info';\n        this.termsTitle = '개인정보 보호정책';\n      } else if (type === 'c') {\n        this.termsType = 'marketing';\n        this.termsTitle = '홍보 및 마케팅 목적';\n      } else if (type === 'd') {\n        this.termsType = 'push';\n        this.termsTitle = '광고성 정보 수신';\n      }\n      this.termModalOpen = true;\n    },\n    purchaseRecovery() {\n      getData({\n        url: '/purchase/purchaseRecoveryOne',\n        param: {},\n        then: (data) => {\n          if (data != null) {\n            CdvPurchase.store.order(data.productId).then(() => {\n              alert('처리되었습니다.');\n            });\n          } else {\n            alert('처리되었습니다.');\n          }\n        }\n      });\n    },\n    /** 로딩창 **/\n    async showLoading() {\n      this.loading = await this.loadingController.create({\n        message: 'Loading...',\n        duration: 0\n      });\n      await this.loading.present();\n    },\n    /** 로딩창 공용 **/\n    async showLoadingStore() {\n      this.$store.state.loading = await this.loadingController.create({\n        message: 'Loading...',\n        duration: 0\n      });\n      await this.$store.state.loading.present();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\nion-list {\n  ion-list-header {\n    padding: 0;\n    margin: 0 0 16px;\n    font-size: 18px;\n    font-weight: bold;\n    min-height: 0;\n  }\n}\n.my-point {\n  position: relative;\n  ion-chip {\n    min-width: 80px;\n    overflow: visible;\n    contain: inherit;\n    margin-left: -20px;\n    padding-left: 12px;\n    text-align: center;\n    justify-content: center;\n  }\n  ion-icon {\n    width: 40px;\n    height: 38px;\n    margin-top: -4px;\n  }\n}\n</style>\n","<template>\n  <ion-list-header>\n    <ion-text color=\"light\" v-if=\"item.key != 'IT012'\">{{ title }}</ion-text>\n    <ion-text color=\"light\" v-else>{{ title }} ( {{ 3 -item.values[0].buyCnt }}/3 )</ion-text>\n    <ion-icon :icon=\"icon\" />\n  </ion-list-header>\n</template>\n<script>\nexport default {\n  name: 'StoreListHeader',\n  props: {\n    title: {\n      type: String\n    },\n    icon: {\n      type: String\n    },\n    item: {\n      type: Object\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\nion-list-header {\n  margin: 20px 0;\n  gap: 10px;\n  ion-text {\n    font-size: 16px;\n    font-weight: normal;\n  }\n  ion-icon {\n    width: 24px;\n    height: 24px;\n    vertical-align: middle;\n    margin-left: 4px;\n  }\n}\n</style>\n","import { render } from \"./StoreListHeader.vue?vue&type=template&id=8c2a81b0&scoped=true\"\nimport script from \"./StoreListHeader.vue?vue&type=script&lang=js\"\nexport * from \"./StoreListHeader.vue?vue&type=script&lang=js\"\n\nimport \"./StoreListHeader.vue?vue&type=style&index=0&id=8c2a81b0&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8c2a81b0\"]])\n\nexport default __exports__","<template>\n  <div class=\"store-list-item\">\n    <ion-img v-if=\"item.cdnNm !== null \" :src=\"'https://' + item.cdnNm\"  style=\"\"/>\n    <ion-img v-else :src=\"superLikeGift\"></ion-img>\n    <ion-label>\n      <ion-text color=\"light\" class=\"text-bold text-sm\">\n        {{ title }}\n      </ion-text>\n      <br />\n      <ion-text class=\"text-sm sub-text05\">\n        <template v-if=\"item.itemCd != 'IT012_03'\">\n          {{ title }} + <strong> {{ item.sumPayment }}</strong\n          >개\n        </template>\n        <template v-else>\n          {{ item.itemNm }}\n          <!-- {{ item.itemNm + (3 - item.buyCnt / 3) }} -->\n        </template>\n      </ion-text>\n      <br />\n      <ion-chip color=\"light\" class=\"shape-round text-xs\"\n        >구매\n        <ion-icon :icon=\"heartIcon\"></ion-icon>\n        {{ item.priceHeart }} 개\n      </ion-chip>\n    </ion-label>\n    <div class=\"bonus-label\">\n      <StoreBonusLabel :percent=\"item.bonusRate\" :index=\"3\" />\n    </div>\n  </div>\n</template>\n<script>\nimport StoreBonusLabel from '@/components/Store/StoreBonusLabel.vue';\n\nimport IconSuperlikeGift from '@/assets/img/store/superlike_gift.png';\nimport IconHeart from '@/assets/img/icon/icon_store_heart.svg';\n\nexport default {\n  name: 'StoreListItem',\n  props: {\n    icon: {\n      type: String\n    },\n    title: {\n      type: String\n    },\n    item: {\n      type: Object\n    }\n  },\n  components: {\n    StoreBonusLabel\n  },\n  data() {\n    return {\n      superLikeGift: IconSuperlikeGift,\n      heartIcon: IconHeart\n    };\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.store-list-item {\n  position: relative;\n  margin: 0;\n  padding: 10px;\n  border: 1px solid #706af7;\n  border-radius: var(--ion-border-radius-lg);\n  background: #3b3b67;\n  height: 100%;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n\n  ion-img {\n    margin-right: 10px;\n    width: 48px;\n    height: 42px;\n  }\n  ion-label {\n    width: calc(100% - 60px);\n    margin: 0;\n    overflow: visible;\n    contain: inherit;\n    text-align: right;\n    ion-text {\n      line-height: 1.2;\n    }\n    ion-chip {\n      font-size: 9px;\n      white-space: nowrap;\n      margin: 8px 0 0;\n      ion-icon {\n        margin: 0;\n      }\n    }\n  }\n\n  .bonus-label {\n    position: absolute;\n    left: 8px;\n    top: -4px;\n    min-width: 32px;\n    height: 20px;\n  }\n}\n</style>\n","<template>\n  <div class=\"bonus\" v-if=\"percent > 0\">\n    <div>\n      <span\n        v-if=\"index > 0\"\n        class=\"bg-opacity\"\n        :style=\"{ opacity: 1 - 0.5 * ((index + 4) / 5) }\"\n      ></span>\n      <ion-text color=\"light\" class=\"text-sm\"> {{ percent }}% </ion-text>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'StoreBonusLabel',\n  props: {\n    index: {\n      type: Number,\n      default: 0\n    },\n    percent: {\n      type: Number\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.bonus {\n  min-width: inherit;\n  height: inherit;\n  > div {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    padding: 0 4px;\n    height: 100%;\n    font-weight: bolder;\n    border-radius: 2px;\n    background: linear-gradient(135deg, #f5644d 0%, #e22744 100%);\n    text-align: center;\n    z-index: 1;\n    overflow: hidden;\n    ion-text {\n      position: relative;\n      z-index: 2;\n    }\n    .bg-opacity {\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      background-color: white;\n      z-index: 1;\n    }\n  }\n\n  &:before {\n    display: block;\n    content: '';\n    width: 20px;\n    height: 10px;\n    position: absolute;\n    left: -4px;\n    top: -4px;\n    border-color: #c14f65;\n    border-style: solid;\n    border-top-width: 2px;\n    border-left-width: 2px;\n    border-right-width: 0;\n    border-bottom-width: 0;\n    border-top-left-radius: 6px;\n  }\n  &::after {\n    position: absolute;\n    display: block;\n    content: '';\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(135deg, #f5644d 0%, #ef6f48 100%);\n    z-index: 0;\n    left: 2px;\n    top: 2px;\n    border-radius: 2px;\n  }\n}\n</style>\n","import { render } from \"./StoreBonusLabel.vue?vue&type=template&id=38c08d33&scoped=true\"\nimport script from \"./StoreBonusLabel.vue?vue&type=script&lang=js\"\nexport * from \"./StoreBonusLabel.vue?vue&type=script&lang=js\"\n\nimport \"./StoreBonusLabel.vue?vue&type=style&index=0&id=38c08d33&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-38c08d33\"]])\n\nexport default __exports__","import { render } from \"./StoreListItem.vue?vue&type=template&id=4c743860&scoped=true\"\nimport script from \"./StoreListItem.vue?vue&type=script&lang=js\"\nexport * from \"./StoreListItem.vue?vue&type=script&lang=js\"\n\nimport \"./StoreListItem.vue?vue&type=style&index=0&id=4c743860&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c743860\"]])\n\nexport default __exports__","<template>\n  <div\n    class=\"store-list-item\"\n    :class=\"{ 'is-hot': item.productId === 'navy_heart_item365' }\"\n  >\n    <div class=\"chip\">\n      <ion-chip v-if=\"item.productId === 'navy_heart_item365'\">HOT</ion-chip>\n    </div>\n    <div class=\"inner\">\n      <div class=\"content\">\n        <ion-icon v-if=\"icon\" :icon=\"icon\"></ion-icon>\n        <ion-text color=\"light\">\n          하트 {{ itemNameList[index] }} ( {{ item.payment + item.bonus }}개 )\n        </ion-text>\n      </div>\n      <div class=\"price\">\n        <ion-text color=\"light\"> {{ item.priceWon }}원 </ion-text>\n      </div>\n    </div>\n    <div class=\"bonus-label\">\n      <StoreBonusLabel\n        :percent=\"item.bonusRate\"\n        :index=\"index\"\n        v-if=\"percent > 0\"\n      />\n    </div>\n  </div>\n</template>\n<script>\nimport StoreBonusLabel from '@/components/Store/StoreBonusLabel.vue';\n\nexport default {\n  name: 'StorePurchaseListItem',\n  components: {\n    StoreBonusLabel\n  },\n  props: {\n    icon: {\n      type: String\n    },\n    item: {\n      type: Object\n    },\n    index: {\n      type: Number\n    }\n  },\n  computed: {\n    percent() {\n      return Math.floor((this.item.bonus / this.item.payment) * 100);\n    }\n  },\n  data() {\n    return {\n      itemNameList: ['한 쪽', '한 줄', '주머니', '바구니', '상자', '더미']\n    };\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.store-list-item {\n  position: relative;\n  margin: 0;\n  padding: 12px 30px 12px 20px;\n  border-radius: var(--ion-border-radius);\n  background: #272847;\n  margin-right: 4px;\n  &.is-hot {\n    border: 1px solid #ff89e4;\n    background: #3e3f5e;\n    .chip {\n      position: absolute;\n      top: -10px;\n      left: 50%;\n      transform: translateX(-50%);\n      &:before {\n        display: block;\n        content: '';\n        position: absolute;\n        height: 10px;\n        background-color: #3e3f5e;\n        left: -16px;\n        right: -16px;\n        top: 9px;\n      }\n      ion-chip {\n        background: linear-gradient(90deg, #e095c6 0%, #ca6fa9 100%);\n        color: white;\n        border-radius: 40px;\n        font-weight: bold;\n        margin: 0;\n      }\n    }\n  }\n  .inner {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  + .store-list-item {\n    margin-top: 24px;\n  }\n\n  .content {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    width: 100%;\n    line-height: 1;\n    font-weight: bold;\n    font-size: 12px;\n    ion-icon {\n      margin-right: 10px;\n      width: 36px;\n      height: 36px;\n      border-radius: var(--ion-border-radius);\n      background-color: #3f405f;\n    }\n  }\n  .price {\n    text-align: center;\n    width: 70px;\n    margin: 0 0 0 5px;\n    font-weight: bold;\n    font-size: 14px;\n  }\n\n  .bonus-label {\n    position: absolute;\n    right: -8px;\n    top: -8px;\n    min-width: 32px;\n    height: 32px;\n  }\n}\n</style>\n","import { render } from \"./StorePurchaseListItem.vue?vue&type=template&id=57399413&scoped=true\"\nimport script from \"./StorePurchaseListItem.vue?vue&type=script&lang=js\"\nexport * from \"./StorePurchaseListItem.vue?vue&type=script&lang=js\"\n\nimport \"./StorePurchaseListItem.vue?vue&type=style&index=0&id=57399413&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-57399413\"]])\n\nexport default __exports__","<template>\n  <div\n    class=\"subscription-item\"\n    :class=\"{\n      'is-selected': selected === item.itemCd\n    }\"\n    :id=\"item.itemCd\"\n  >\n<!--    :class=\"{-->\n<!--    'is-selected':-->\n<!--    selected === item.subscribeCd && subscribedPlan !== 'GOLD_PASS',-->\n<!--    'subscribed-navyplus': subscribedPlan === 'NAVY_PLUS',-->\n<!--    'subscribed-goldpass': subscribedPlan === 'GOLD_PASS',-->\n<!--    'is-disabled': subscribedPlan === item.subscribeCd-->\n<!--    }\"-->\n<!--    :id=\"item.subscribeCd\"-->\n<!--    >-->\n    <div class=\"row-box\">\n      <ion-card class=\"ticket\">\n        <div class=\"info-area\">\n          <div class=\"inner\">\n            <ion-text color=\"light\">\n              <h5>\n                <strong>{{ item.itemCd.replace('_', ' ') }}</strong>\n                <ion-chip\n                  color=\"warning\"\n                  :class=\"\n                    item.itemCd === 'GOLD_PASS' ? 'chip-hot' : 'chip-popular'\n                  \"\n                  >{{ item.itemCd === 'GOLD_PASS' ? 'HOT' : '가성비' }}\n                </ion-chip>\n              </h5>\n            </ion-text>\n          </div>\n        </div>\n        <div class=\"price-area\">\n          <div class=\"inner\">\n            <ion-text color=\"light\">\n<!--              <span class=\"text-xs\">7일 무료체험</span><br />-->\n              <strong class=\"text-md\">{{ item.priceWon }} 원 / 1개월</strong>\n            </ion-text>\n          </div>\n        </div>\n      </ion-card>\n    </div>\n    <div class=\"row-box\" v-if=\"descriptionList && descriptionList.length > 0\">\n      <CardBox :shadow=\"item.itemCd === 'GOLD_PASS' && 'gold'\">\n        <ion-list lines=\"none\">\n          <SubscriptionDescItem\n            v-for=\"(descItem, index) in descriptionList\"\n            :key=\"index\"\n            :index=\"index\"\n            :item=\"descItem\"\n            :subscribedItem=\"item.itemCd\"\n          />\n        </ion-list>\n      </CardBox>\n    </div>\n  </div>\n</template>\n<script>\nimport SubscriptionDescItem from '@/components/Subscription/SubscriptionDescItem.vue';\n\nexport default {\n  name: 'SubscriptionItem',\n  components: {\n    SubscriptionDescItem\n  },\n  props: {\n    selected: {\n      type: String\n    },\n    item: {\n      type: Object\n    }\n  },\n  computed: {\n    descriptionList() {\n      if (this.item.description) {\n        const descStr = this.item.description;\n        let descList = descStr.split(',');\n        return descList;\n      }\n      return [];\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.subscription-item {\n  width: 100%;\n  + .subscription-item {\n    margin-top: 40px;\n  }\n  &.is-selected {\n    .ticket {\n      .price-area {\n        transform: translateX(4px) rotate(5deg);\n      }\n    }\n  }\n  &.is-disabled {\n    user-select: none;\n  }\n  &.subscribed-navyplus {\n    &#NAVY_PLUS {\n      .ticket {\n        .info-area {\n          background: linear-gradient(90deg, #2a2a60 0%, #2a2a60 100%);\n        }\n        .price-area {\n          background: linear-gradient(90deg, #2a2a60 0%, #2a2a60 100%);\n          transform: none;\n        }\n      }\n    }\n  }\n  &.subscribed-goldpass {\n    &#NAVY_PLUS {\n      .ticket {\n        .info-area {\n          background: linear-gradient(90deg, #2a2a60 0%, #2a2a60 100%);\n        }\n        .price-area {\n          background: linear-gradient(90deg, #2a2a60 0%, #2a2a60 100%);\n        }\n      }\n    }\n    &#GOLD_PASS {\n      .ticket {\n        .info-area {\n          background: linear-gradient(90deg, #83732c 0%, #83732c 100%);\n        }\n        .price-area {\n          background: linear-gradient(90deg, #83732c 0%, #83732c 100%);\n        }\n      }\n    }\n  }\n\n  .ticket {\n    margin: 0;\n\n    cursor: pointer;\n    display: flex;\n    flex-wrap: wrap;\n    padding: 0;\n    overflow: visible;\n    contain: inherit;\n\n    .info-area {\n      position: relative;\n      background: linear-gradient(90deg, #706af7 0%, #706af7 100%);\n      text-align: left;\n      width: calc(100% - 110px);\n      padding: 10px;\n      z-index: 2;\n      overflow: hidden;\n      border-top-left-radius: var(--ion-border-radius);\n      border-bottom-left-radius: var(--ion-border-radius);\n      &::before,\n      &::after {\n        position: absolute;\n        right: -11px;\n        display: block;\n        content: '';\n        width: 20px;\n        height: 20px;\n        border-radius: 50%;\n        background-color: var(--background);\n      }\n      &::before {\n        top: -10px;\n      }\n      &::after {\n        bottom: -10px;\n      }\n      .inner {\n        padding-left: 10px;\n      }\n      h3 {\n        ion-text {\n          font-size: 22px;\n        }\n      }\n      p {\n        + p {\n          margin-top: 10px;\n        }\n      }\n      ion-badge {\n        padding: 4px 8px;\n        border-radius: 16px;\n      }\n    }\n\n    .price-area {\n      position: relative;\n      background: linear-gradient(90deg, #706af7 0%, #706af7 100%);\n      width: 110px;\n      padding: 5px 5px 5px 5px;\n      min-height: 80px;\n      border-left: 1px solid rgba($color: white, $alpha: 0.3);\n      text-align: center;\n      transition: all 0.2s cubic-bezier(0.17, 0.67, 0.83, 0.67);\n      border-top-right-radius: var(--ion-border-radius);\n      border-bottom-right-radius: var(--ion-border-radius);\n      user-select: transform;\n\n      &::before,\n      &::after {\n        position: absolute;\n        left: -11px;\n        display: block;\n        content: '';\n        width: 20px;\n        height: 20px;\n        border-radius: 50%;\n        background-color: var(--background);\n      }\n      &::before {\n        top: -10px;\n      }\n      &::after {\n        bottom: -10px;\n      }\n      .inner {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        text-align: center;\n        height: 100%;\n\n        p {\n          writing-mode: vertical-rl;\n          transform: rotate(180deg);\n        }\n      }\n    }\n\n    h5 {\n      * {\n        vertical-align: middle;\n        margin: 0 5px;\n      }\n    }\n  }\n\n  &#GOLD_PASS {\n    .info-area {\n      background: linear-gradient(90deg, #cfba56 0%, #cc9a41 100%);\n    }\n    .price-area {\n      background: linear-gradient(90deg, #cc9a41 0%, #cc9a41 100%);\n    }\n  }\n}\n</style>\n","import { render } from \"./StoreSubscribedListItem.vue?vue&type=template&id=31980ae2&scoped=true\"\nimport script from \"./StoreSubscribedListItem.vue?vue&type=script&lang=js\"\nexport * from \"./StoreSubscribedListItem.vue?vue&type=script&lang=js\"\n\nimport \"./StoreSubscribedListItem.vue?vue&type=style&index=0&id=31980ae2&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-31980ae2\"]])\n\nexport default __exports__","<template>\n  <swiper\n    :modules=\"modules\"\n    :free-mode=\"true\"\n    :space-between=\"16\"\n    slides-per-view=\"auto\"\n  >\n    <swiper-slide v-for=\"(item, index) in itemList\" :key=\"index\">\n      <StoreVoteListItem\n        :key=\"index\"\n        :item=\"item\"\n        :title=\"title\"\n        @itemConfirmBtn=\"itemConfirmBtn(item)\"\n      />\n    </swiper-slide>\n  </swiper>\n</template>\n<script>\nimport { Swiper, SwiperSlide } from 'swiper/vue';\nimport { FreeMode, Autoplay, Pagination, Navigation } from 'swiper/modules';\nimport StoreVoteListItem from '@/components/Store/StoreVoteListItem.vue';\nexport default {\n  name: 'StoreVoteList',\n  components: {\n    StoreVoteListItem,\n    Swiper,\n    SwiperSlide\n  },\n  props: {\n    itemList: {\n      type: Array\n    },\n    title: {\n      type: String\n    }\n  },\n  data() {\n    return {\n      modules: [FreeMode, Autoplay, Pagination, Navigation]\n    };\n  },\n  methods: {\n    itemConfirmBtn(item) {\n      this.$emit('itemConfirmBtn', item, 'USE');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.swiper-slide {\n  width: auto;\n}\n</style>\n","<template>\n  <div class=\"store-list-item\" @click=\"itemConfirmBtn(item)\">\n    <ion-chip class=\"chip-buy-count shape-round\">\n      {{ 3 - item.buyCnt }}/3\n    </ion-chip>\n    <div class=\"item\">\n      <ion-img\n        v-if=\"item.cdnNm !== null\"\n        :src=\"'https://' + item.cdnNm\"\n        style=\"\"\n      />\n      <ion-img v-else :src=\"superLikeGift\"></ion-img>\n      <div class=\"item-name\">\n        <ion-text color=\"light\" class=\"text-bold text-sm\">\n          컨테스트 {{ title }}\n        </ion-text>\n\n        <ion-chip color=\"light\" class=\"chip-vote-count\">\n          투표권 {{ item.sumPayment }}장\n        </ion-chip>\n      </div>\n    </div>\n    <div class=\"price\">\n      <ion-icon :icon=\"heartIcon\"></ion-icon>\n      <ion-text color=\"light\"\n        ><strong>{{ item.priceHeart }} 개</strong></ion-text\n      >\n    </div>\n  </div>\n</template>\n<script>\nimport { FreeMode, Autoplay, Pagination, Navigation } from 'swiper/modules';\n\nimport IconSuperlikeGift from '@/assets/img/store/superlike_gift.png';\nimport IconHeart from '@/assets/img/icon/icon_store_heart.svg';\n\nexport default {\n  name: 'StoreVoteListItem',\n  props: {\n    icon: {\n      type: String\n    },\n    title: {\n      type: String\n    },\n    item: {\n      type: Object\n    }\n  },\n  data() {\n    return {\n      modules: [FreeMode, Autoplay, Pagination, Navigation],\n      superLikeGift: IconSuperlikeGift,\n      heartIcon: IconHeart\n    };\n  },\n  methods: {\n    itemConfirmBtn(item) {\n      this.$emit('itemConfirmBtn', item);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.store-list-item {\n  position: relative;\n  padding-top: 8px;\n  padding-right: 8px;\n  .chip-buy-count {\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: #d56eb0;\n    color: white;\n    z-index: 2;\n    margin: 0;\n    height: 16px;\n    font-size: 10px;\n  }\n  .item {\n    position: relative;\n    margin: 0;\n    padding: 10px 14px;\n    border-radius: var(--ion-border-radius);\n    background: linear-gradient(135deg, #ab0baf 0%, #fa8539 100%);\n    height: 100%;\n    text-align: center;\n\n    ion-img {\n      margin: 0 auto;\n      width: 60px;\n      height: 60px;\n    }\n    .item-name {\n      text-align: center;\n      margin: 8px 0 0;\n      ion-text {\n        display: block;\n        line-height: 1.2;\n      }\n      ion-chip {\n        width: 100%;\n        justify-content: center;\n        background: rgba(59, 59, 103, 0.34);\n        filter: hue-rotate(135deg);\n        font-size: 12px;\n        white-space: nowrap;\n        margin: 8px 0 0;\n        ion-icon {\n          margin: 0;\n        }\n      }\n    }\n  }\n\n  .price {\n    text-align: center;\n    font-size: 14px;\n    margin: 8px 0;\n    ion-icon {\n      width: 30px;\n      height: 28px;\n      vertical-align: middle;\n    }\n    ion-text {\n      vertical-align: middle;\n    }\n  }\n}\n</style>\n","import { render } from \"./StoreVoteListItem.vue?vue&type=template&id=7fda8c20&scoped=true\"\nimport script from \"./StoreVoteListItem.vue?vue&type=script&lang=js\"\nexport * from \"./StoreVoteListItem.vue?vue&type=script&lang=js\"\n\nimport \"./StoreVoteListItem.vue?vue&type=style&index=0&id=7fda8c20&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7fda8c20\"]])\n\nexport default __exports__","import { render } from \"./StoreVoteList.vue?vue&type=template&id=1d4a3895&scoped=true\"\nimport script from \"./StoreVoteList.vue?vue&type=script&lang=js\"\nexport * from \"./StoreVoteList.vue?vue&type=script&lang=js\"\n\nimport \"./StoreVoteList.vue?vue&type=style&index=0&id=1d4a3895&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1d4a3895\"]])\n\nexport default __exports__","<template>\n  <swiper\n    @swiper=\"setSwiperRef\"\n    :modules=\"modules\"\n    :pagination=\"{ clickable: true }\"\n    :slides-per-view=\"1\"\n    :autoplay=\"{\n      delay: 3000,\n      disableOnInteraction: false\n    }\"\n    :loop=\"true\"\n    :observer=\"true\"\n  >\n    <swiper-slide v-for=\"(item, index) in bannerList\" :key=\"index\">\n      <ion-img\n        v-bind:src=\"\n          item.cdnNm !== '' && item.cdnNm !== null\n            ? 'https://' + item.cdnNm\n            : require('../../assets/img/Loading_icon.gif')\n        \"\n        @ionError=\"\n          $event.srcElement.src = require('../../assets/img/Loading_icon.gif')\n        \"\n        @click=\"routerPush(item.path)\"\n      />\n    </swiper-slide>\n  </swiper>\n</template>\n<script>\nimport { Autoplay, Pagination, Navigation } from 'swiper/modules';\nimport { Swiper, SwiperSlide } from 'swiper/vue';\n\nexport default {\n  name: 'StoreBanner',\n  props: {\n    bannerList: { type: Array }\n  },\n  components: {\n    Swiper,\n    SwiperSlide\n  },\n  data() {\n    return {\n      modules: [Autoplay, Pagination, Navigation],\n      swiperRef: null\n    };\n  },\n  mounted() {},\n  beforeMount() {},\n  beforeUpdate() {},\n  updated() {\n    // this.swiperRef.update();\n    console.log(this.swiperRef);\n    if (this.swiperRef != null) {\n      this.swiperRef.slideNext(2000);\n    }\n  },\n  beforeUnmount() {},\n  methods: {\n    routerPush(path) {\n      // this.swiperRef.autoplay.start();\n      // return;\n      if (path != '' && path != null) {\n        if(path == '/subscription'){\n          // storeMapFn({subscribeYn: 'Y'});\n          // this.$router.push('/store');\n          this.$emit('storeCategory');\n        } else {\n          this.$router.push(path);\n        }\n      }\n    },\n    setSwiperRef(swiper) {\n      this.swiperRef = swiper;\n    }\n  }\n};\n</script>\n<style scoped lang=\"scss\">\n.swiper {\n  padding: 0;\n  margin: 0;\n\n  ion-img {\n    border-radius: var(--ion-border-radius);\n  }\n}\n</style>\n","import { render } from \"./StoreBanner.vue?vue&type=template&id=7a2b223e&scoped=true\"\nimport script from \"./StoreBanner.vue?vue&type=script&lang=js\"\nexport * from \"./StoreBanner.vue?vue&type=script&lang=js\"\n\nimport \"./StoreBanner.vue?vue&type=style&index=0&id=7a2b223e&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7a2b223e\"]])\n\nexport default __exports__","import { render } from \"./Store.vue?vue&type=template&id=679977b4&scoped=true\"\nimport script from \"./Store.vue?vue&type=script&lang=js\"\nexport * from \"./Store.vue?vue&type=script&lang=js\"\n\nimport \"./Store.vue?vue&type=style&index=0&id=679977b4&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-679977b4\"]])\n\nexport default __exports__"],"names":["CdvPurchase","ERROR_CODES_BASE","ErrorCode","storeError","code","message","isError","Iaptic","constructor","config","store","this","url","log","child","braintreeClientTokenProvider","callback","info","Utils","ajax","appName","apiKey","method","data","applicationUsername","getApplicationUsername","customerId","Braintree","success","body","JSON","stringify","clientToken","error","err","appStoreDiscountEligibilityDeterminer","latestReceipt","debug","when","verified","receipt","platform","Platform","APPLE_APPSTORE","_appStoreReceipt","requests","analyzeReceipt","onVerified","off","ineligibleIntro","raw","ineligible_for_intro_price","map","request","_a","discountType","find","id","productId","matchingPurchase","collection","purchase","validator","LogLevel","Logger","prefix","o","verbosity","ERROR","Error","toString","e","stack","warn","WARNING","INFO","DEBUG","logCallbackException","context","errAny","fileName","lineNumber","console","window","LOG_LEVEL_STRING","level","maxLevel","fullPrefix","logStr","str","nonEnumerable","target","name","desc","enumerable","Object","defineProperty","set","value","writable","configurable","Product","p","decorator","className","title","description","type","group","offers","get","pricingPhases","canPurchase","owned","pricing","getOffer","addOffer","offer","push","Internal","ReceiptsToValidate","array","length","concat","add","has","clear","pop","el","Validator","controller","receiptsToValidate","verifiedReceipts","numRequests","numResponses","cache","incrRequestsCounter","incrResponsesCounter","addVerifiedReceipt","vr","newVR","VerifiedReceipt","receiptOrTransaction","Transaction","parentReceipt","run","receipts","onResponse","async","r","payload","adapter","adapters","handleReceiptValidationResponse","ok","verifiedCallbacks","trigger","unverifiedCallbacks","VERIFICATION_FAILED","forEach","runOnReceipt","TEST","Test","Adapter","verify","buildRequestBody","runValidatorFunction","timeout","runValidatorRequest","_b","_c","receiptValidationBody","additionalData","assign","device","getDeviceInfo","currency","priceMicros","intro","introPriceMicros","removeExpiredCache","now","Date","deleteList","hash","expires","bodyTransactionHash","md5","transaction","cached","customHeaders","headers","response","isValidatorResponsePayload","BAD_RESPONSE","latest_receipt","status","fullMessage","COMMUNICATION","Adapters","list","po","AppleAppStore","options","GOOGLE_PLAY","GooglePlay","BRAINTREE","platforms","newPlatforms","filter","products","registeredProducts","byPlatform","result","Promise","all","platformToInit","platformProducts","isSupported","initResult","initialize","ready","loadProductsResult","loadProducts","loadedProducts","listener","productsUpdated","loadReceiptsResult","loadReceipts","lr","a","findReady","Callbacks","logger","finalStateMode","callbacks","numTriggers","lastTriggerArgument","safeCall","remove","ReadyCallbacks","isReady","readyCallbacks","cb","setTimeout","undefined","PLUGIN_VERSION","Store","RegisteredProducts","_readyCallbacks","updatedCallbacks","updatedReceiptsCallbacks","approvedCallbacks","finishedCallbacks","pendingCallbacks","receiptsReadyCallbacks","receiptsVerifiedCallbacks","errorCallbacks","initializedHasBeenCalled","version","StoreAdapterListener","updatedReceiptCallbacks","transactionStateMonitors","TransactionStateMonitors","_validator","bind","localReceipts","validator_privacy_policy","finish","ReceiptsMonitor","hasLocalReceipts","hasValidator","numValidationRequests","numValidationResponses","receiptsVerified","launch","getAdapter","Function","register","product","defaultPlatform","ret","triggerError","apiDecorators","order","then","setSupportedPlatforms","refresh","registration","productUpdated","receiptUpdated","updated","approved","pending","finished","unverified","receiptsReady","monitor","onChange","start","safeCallback","localTransactions","transactions","verifiedPurchases","VerifiedReceipts","getVerifiedPurchases","findInVerifiedReceipts","findInLocalReceipts","LocalReceipts","Offer","checkSupport","PAYMENT_NOT_ALLOWED","requestPayment","paymentRequest","_d","_e","PaymentRequestPromise","failed","amountMicros","item","items","PAYMENT_INVALID","promise","onStateChange","state","TransactionState","FINISHED","stop","functionality","sourceReceipt","Receipt","restorePurchases","manageSubscriptions","SETUP","manageBilling","cordova","platformId","ProductType","RecurrenceMode","PaymentMode","RenewalIntent","PriceConsentStatus","CancelationReason","productType","APPLICATION","productGroup","failedCallbacks","PromiseLike","initiatedCallbacks","cancelledCallback","initiated","cancelled","argument","resolve","INITIATED","APPROVED","static","hasTransaction","t","lastTransaction","transactionId","UNKNOWN_STATE","delegate","supportedPlatforms","platformWithReceiptsReady","lastTransactionState","join","indexOf","receiptsUpdated","transactionToken","makeTransactionToken","lastState","PENDING","found","trProducts","purchaseDate","isConsumed","isPending","expirationDate","getTime","isOwned","resolved","resolvedArgument","hasCalledReceiptsVerified","callReceiptsVerified","check","intervalChecker","clearInterval","setInterval","rp","Array","isArray","newProducts","keys","Retry","minTimeout","maxTimeout","retryTimeout","retries","document","addEventListener","i","clearTimeout","tid","fn","call","retry","monitors","callOnChange","findMonitors","lastChange","monitorId","uuidv4","m","isExpired","expiryDate","indexed","key","existing","lastRenewalDate","ApplePay","ContactField","PaymentNetwork","MerchantCapability","virtualTransactionId","_canMakePayments","forceReceiptReload","_products","validProducts","_paymentMonitor","_appStoreReceiptLoading","_appStoreReceiptCallbacks","bridge","Bridge","discountEligibilityDeterminer","needAppReceipt","autoFinish","pseudoReceipt","debounce","_receiptsUpdated","getProduct","_receipt","addValidProducts","registerProducts","vp","upsertTransactionInProgress","tr","SKTransaction","removeTransactionInProgress","initializeAppReceipt","removeTransaction","setPaymentMonitor","callPaymentMonitor","bridgeLogger","init","msg","PAYMENT_CANCELLED","purchased","transactionIdentifier","originalTransactionIdentifier","transactionDate","discountId","upsertTransaction","purchaseEnqueued","quantity","purchaseFailed","purchasing","deferred","restored","receiptsRefreshed","restoreFailed","errorCode","restoreCompleted","canMakePayments","nativeData","loadAppStoreReceipt","callCallbacks","arg","appStoreReceipt","REFRESH","SKApplicationReceipt","prepareReceipt","catch","reason","DiscountEligibilities","eligibilityRequests","valid","discounts","discount","applicationReceipt","callDiscountEligibilityDeterminer","load","invalidProducts","eligibilities","loadEligibility","INVALID_PRODUCT_ID","v","SKProduct","callResolve","DEFAULT_OFFER_ID","appStore","MISSING_OFFER_PARAMS","INVALID_OFFER_IDENTIFIER","PURCHASE","APPLICATION_VIRTUAL_TRANSACTION_ID","includes","FINISH","refreshReceipt","refreshReceipts","skReceipt","slice","bundleIdentifier","values","isEligible","localReceiptUpdated","vTransaction","original_purchase_date_ms","parseInt","payment","UNKNOWN","supported","restore","obj","presentCodeRedemptionSheet","Bridge_1","noop","args","exec","methodName","protectCall","apply","transactionsForProduct","initialized","needRestoreNotification","pendingUpdates","onPurchased","onFailed","onRestored","storekit","setupOk","processPendingTransactions","setupFailed","finalizeTransactionUpdates","purchaseOk","errMsg","productIds","LOAD","loadOk","invalid","loadFailed","errMessage","transactionUpdated","errorText","transactionReceipt","lastTransactionUpdated","restoreCompletedTransactionsFinished","restoreCompletedTransactionsFailed","parseReceiptArgs","base64","bundleShortVersion","bundleNumericVersion","bundleSignature","successCb","errorCb","loaded","REFRESH_RECEIPTS","req","SKOffer","super","offerType","validProduct","removeIneligibleDiscounts","skOffer","countryCode","finalPhase","price","billingPeriod","formatBillingPeriod","billingPeriodUnit","paymentMode","PAID_SUBSCRIPTION","PAY_AS_YOU_GO","UP_FRONT","recurrenceMode","INFINITE_RECURRING","NON_RECURRING","hasIntroductoryOffer","numPeriods","period","numCycles","discountPhase","periodUnit","billingCycles","FINITE_RECURRING","needApplicationReceipt","offerId","originalTransactionId","VerifyReceipt","AppleExpirationIntent","BraintreeReceipt","dropInResult","paymentMethodNonce","nonce","paymentMethodType","paymentDescription","_receipts","IosBridge","AndroidBridge","iosBridge","tokenizationKey","clientTokenProvider","CLIENT_INVALID","applePay","androidBridge","auth","PRODUCT_NOT_AVAILABLE","dropInRequest","launchDropIn","_f","_g","_h","_j","braintree","ApplePayPlugin","applePayDisabled","googlePay","googlePayRequest","transactionInfo","currencyCode","totalPrice","totalPriceStatus","GooglePay","TotalPriceStatus","FINAL","threeDSecure","threeDSecureRequest","threeDS","amount","asDecimalString","billingAddress","givenName","surname","countryCodeAlpha2","postalCode","locality","streetAddress","streetAddress1","extendedAddress","streetAddress2","line3","streetAddress3","phoneNumber","region","email","dropInResponseIsOK","dropInResponseError","isBraintreeReceipt","CONSUMABLE","deviceData","lCustomerId","customer","amountCents","PLUGIN_ID","getClientToken","token","errCode","split","UNAUTHORIZED_REQUEST_DATA","CdvPurchaseBraintreeApplePay","installed","failure","applePayOptions","DropInRequest","preparePaymentRequest","merchantCapabilities","ThreeDS","paymentSummaryItems","index","label","Math","round","total","companyName","userCancelled","isDefault","applePayCardNonce","onSuccess","DropIn","PaymentMethod","APPLE_PAY","continueDropInForApplePay","onError","errorString","braintreePlugin","CdvPurchaseBraintree","CardFormFieldStatus","BillingAddressFormat","ThreeDSecure","AccountType","ShippingMethod","Version","nativePurchase","isAcknowledged","PurchaseState","PURCHASED","UNSPECIFIED_STATE","orderId","purchaseToken","purchaseId","purchaseTime","getPurchaseState","acknowledged","autoRenewing","renewalIntent","RENEW","LAPSE","toState","refreshPurchase","autoRefreshIntervalMillis","_instance","Products","initializationPromise","iabOptions","onSetPurchases","onPurchasesUpdated","onPurchaseConsumed","showLog","iabReady","getPurchases","iabError","getSkusOf","inAppSkus","subsSkus","iabLoaded","registeredProduct","addProduct","go","getAvailableProducts","onFailure","firstProduct","NON_RENEWING_SUBSCRIPTION","consumePurchase","acknowledgePurchase","purchases","existingReceipt","newReceipt","onPriceChangeConfirmationResult","buySuccess","buyFailed","idAndToken","oldPurchaseToken","findOldPurchaseToken","googlePlay","subscribe","buy","oldReceipt","signature","kind","ProrationMode","Bridge_2","fail","skus","extendAdditionalData","launchPriceChangeConfirmationFlow","tokens","test","ensureObject","ad","accountId","GProduct","InAppOffer","arguments","SubscriptionOffer","tags","existingProduct","product_format","product_type","onSubsV12Loaded","onInAppLoaded","productOffer","iabSubsOfferV12Loaded","existingOffer","pricing_phases","toPricingPhase","formatted_price","price_amount_micros","price_currency_code","newOffer","toPaymentMode","phase","FREE_TRIAL","recurrence_mode","toRecurrenceMode","mode","billing_period","billing_cycle_count","PublisherAPI","GoogleErrorReason","updateVerifiedPurchases","attributes","renewalIntentChangeDate","registerProduct","testProductsArray","testProducts","PAID_SUBSCRIPTION_ACTIVE","reportActiveSubscription","initTestProduct","prompt","toUpperCase","asyncDelay","alert","RENEWS_EVERY_MS","makeTransaction","n","extra","firstPurchase","transactionNumber","unhandledSwitchCase","CONSUMABLE_FAILING","NON_CONSUMABLE","WindowsStore","WINDOWS_STORE","Ajax","plugin","http","ajaxWithHttpPlugin","doneCb","xhr","XMLHttpRequest","ontimeout","callExternal","HTTP_REQUEST_TIMEOUT","open","onreadystatechange","readyState","parse","responseText","statusText","header","setRequestHeader","send","done","ajaxOptions","toLowerCase","serializer","ajaxDone","sendRequest","prototype","delay","milliseconds","later","debounced","formatBillingCycleEN","pricingPhase","fixedRecurrenceMode","formatDurationEN","omitOne","cycles","iso","l","u","HEX2STR","toHexString","hexStringFromArray","out","arrayLength","add32","complexShift","shiftFunction","shiftAdd32","op0","op1","v1","add32x4","i0","i1","j0","j1","step1Function","f","step2Function","step3Function","step4Function","hashStep","inOutVec4","strAsInts","v0","v2","v3","step1","step2","step3","step4","stringToIntArray","charCodeAt","computeMD5","lastCharIndex","strLength","vec4","substring","vec16","reminderLength","vec16Index","errorAsError","getCryptoExtension","crypto","msCrypto","replace","c","getRandomValues","Uint8Array","isObject","getPrivacyPolicy","privacyPolicy","allowed","policy","wdw","ionic","Ionic","model","manufacturer","serial","uuid","isVirtual","fingerprint","Request","nativeTransactions","warning","$","DESCRIPTORS","global","uncurryThis","hasOwn","isCallable","isPrototypeOf","defineBuiltInAccessor","copyConstructorProperties","NativeSymbol","Symbol","SymbolPrototype","EmptyStringDescriptionStore","SymbolWrapper","NATIVE_SYMBOL","String","thisSymbolValue","valueOf","symbolDescriptiveString","regexp","stringSlice","symbol","string","forced","_createBlock","_component_ion_modal","$props","isOpen","onIonModalDidDismiss","$options","dismissedModal","onIonModalWillPresent","ionModalWillPresent","breakpoints","class","_createVNode","_component_ion_content","_component_CustomModalLayout","hideFooter","_withCtx","_component_ion_toolbar","_component_ion_buttons","slot","_component_ion_text","onClick","content","_component_ion_list","lines","_createElementBlock","_Fragment","_renderList","$data","couponList","_component_StoreCouponListItem","icon","heartIcon","_component_ion_item","_component_ion_icon","_component_ion_label","color","couponNm","props","__exports__","components","StoreCouponListItem","Boolean","IconHeart","methods","$emit","getData","param","render","checkIcon","size","subscribedItem","Number","IconCheck","_createElementVNode","_component_ion_page","_component_ion_header","_component_BackButton","_component_ion_title","_hoisted_1","_component_ion_segment","categoryCd","$event","scrollable","categoryList","_component_ion_segment_button","categoryBtn","categoryNm","_hoisted_2","_hoisted_3","style","_component_ion_chip","_hoisted_4","_toDisplayString","userPoint","_cache","modalOpen","_hoisted_5","_component_ion_list_header","storeItemList","_component_StorePurchaseListItem","startInAppPurchase","storeVoteFilteredList","_component_StoreVoteList","onItemConfirmBtn","itemConfirmBtn","storeFilteredList","_component_StoreListHeader","storeIconList","_component_ion_grid","_component_ion_row","index2","_component_ion_col","_component_StoreListItem","_component_StoreSubscribedListItem","selected","itemNm","_hoisted_6","priceWon","_component_ion_footer","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_withModifiers","terms","purchaseRecovery","_component_StoreCouponModal","onDismissedModal","_component_TermsModal","termModalOpen","termsTitle","termsType","buyCnt","cdnNm","_component_ion_img","src","superLikeGift","itemCd","sumPayment","priceHeart","_component_StoreBonusLabel","percent","bonusRate","_normalizeStyle","opacity","default","StoreBonusLabel","IconSuperlikeGift","_normalizeClass","itemNameList","bonus","computed","floor","_component_ion_card","descriptionList","_component_CardBox","shadow","descItem","_component_SubscriptionDescItem","SubscriptionDescItem","descStr","descList","_component_swiper","modules","itemList","_component_swiper_slide","_component_StoreVoteListItem","FreeMode","Autoplay","Pagination","Navigation","StoreVoteListItem","Swiper","SwiperSlide","onSwiper","setSwiperRef","pagination","clickable","autoplay","loop","observer","bannerList","require","onIonError","srcElement","routerPush","path","swiperRef","mounted","beforeMount","beforeUpdate","slideNext","beforeUnmount","$router","swiper","inject","StoreCouponModal","StoreListHeader","StoreListItem","StorePurchaseListItem","StoreSubscribedListItem","StoreVoteList","TermsModal","StoreBanner","itemCdRegex","showYn","match","existingEntry","entry","contestYn","$store","IT001","IconSuperLike","segmentValue","heartCd","heartSum","subscribedPlan","ionViewWillEnter","getCategoryList","getUserLastPoint","getBannerList","ionViewDidLeave","storeMapFn","Capacitor","initStore","dataList","idx","iaptic","orderOffer","_store$get","setHartBuyToFinish","setItemBuyForm","successYn","lastPoint","loading","dismiss","getStoreItemListForm","resultObj","pointCd","subscribeCd","storeMap","$nextTick","getItemList","bannerType","storeCategory","heart","alertController","create","buttons","text","role","cssClass","handler","showLoading","warningAlert","present","finishSubscribe","heartType","heartPageConfirmBtn","subHeader","loadingController","duration"],"sourceRoot":""}