<template>
  <ion-list lines="none">
    <OpenChatMessageItem
      :thumbnail="data.cdnThumbNm"
      v-for="(data, index) in InviteOpenChatList"
      :key="index"
      @click="goOpenChatView(data)"
    >
      <template #content>
        <h3>
          <ion-text color="light" class="text-bold text-lg">{{
            data.title
          }}</ion-text>
        </h3>
        <p>
          <ion-text color="light">
            <template v-if="data.isAttend === null"
              >수락을 기다리는 중이에요</template
            >
            <template v-else>수락 완료! 오픈챗에 바로 참여해보세요 🥰</template>
          </ion-text>
        </p>
        <p>
          <ion-text color="light">
            {{ data.regDateStr }}
          </ion-text>
        </p>
      </template>
    </OpenChatMessageItem>
  </ion-list>
  <ion-infinite-scroll
    :disabled="isEndScroll"
    threshold="100px"
    @ionInfinite="ionInfinite"
  >
    <ion-infinite-scroll-content></ion-infinite-scroll-content>
  </ion-infinite-scroll>
</template>

<script>
import { IonInfiniteScroll, IonInfiniteScrollContent } from '@ionic/vue';
import { getData, openChatViewMapFn } from '@/assets/js/common';
import OpenChatMessageItem from '@/components/OpenChat/OpenChatMessageItem.vue';
export default {
  name: 'MyOpenChat_Attend',
  inject: ['alertController'],
  components: {
    IonInfiniteScroll,
    IonInfiniteScrollContent,
    OpenChatMessageItem
  },
  data() {
    return {
      InviteOpenChatList: [],
      pageNo: 1,
      pageSize: 9,
      currentPageNo: 1,
      totalCount: 0,
      isEndScroll: false
    };
  },
  mounted() {
    this.created();
  },

  methods: {
    created() {
      this.getOpenChatInviteList();
    },

    /** 해당 페이지로 이동 **/
    goOpenChatView(item) {
      if (item.delYn === 'N') {
        openChatViewMapFn({
          openChatKey: item.openChatKey,
          type: 'myOpenChat'
        });
        this.$router.push('/openChatView');
      } else {
        this.warningAlert('❌', '삭제된 게시글입니다.');
      }
    },

    /** 참여한 오픈쳇 리스트 **/
    getOpenChatInviteList() {
      // 초기화
      this.pageNo = 1;
      this.pageSize = 9;
      this.currentPageNo = 1;
      this.openChatList = [];
      this.totalCount = 0;
      this.isEndScroll = false;

      getData({
        url: '/getOpenChatInviteList',
        param: {
          pageNo: this.pageNo,
          pageSize: this.pageSize
        },
        target: this,
        then: (data) => {
          this.InviteOpenChatList = data.result;
          this.totalCount = data.totalCount;
        }
      });
    },

    ionInfinite(event) {
      let self = this;

      // 스크롤 로딩 셋타임아웃
      setTimeout(function () {
        self.pageNo = self.currentPageNo + 1;
        console.log('\n\nthis.pageNo ::: ' + self.pageNo + '\n\n');

        getData({
          url: '/getOpenChatInviteList',
          param: {
            pageNo: self.pageNo,
            pageSize: self.pageSize
          },
          then: (data) => {
            for (let i in data.result) {
              self.InviteOpenChatList.push(data.result[i]);
            }
            self.currentPageNo += 1;
            self.$nextTick(() => {
              if (self.InviteOpenChatList.length === self.totalCount)
                self.isEndScroll = true;
            });
          }
        });
        event.target.complete();
      }, 1000);
    },

    /** 경고 팝업창 **/
    async warningAlert(title, message) {
      const alert = await this.alertController.create({
        header: title,
        subHeader: '',
        message: message,
        buttons: ['OK']
      });
      return alert.present();
    }
  }
};
</script>

<style scoped></style>
