"use strict";(self["webpackChunknavy"]=self["webpackChunknavy"]||[]).push([[6642],{56642:(e,n,a)=>{a.r(n),a.d(n,{Geolocation:()=>i,GeolocationWeb:()=>o});var t=a(29895);class o extends t.Uw{async getCurrentPosition(e){return new Promise(((n,a)=>{navigator.geolocation.getCurrentPosition((e=>{n(e)}),(e=>{a(e)}),Object.assign({enableHighAccuracy:!1,timeout:1e4,maximumAge:0},e))}))}async watchPosition(e,n){const a=navigator.geolocation.watchPosition((e=>{n(e)}),(e=>{n(null,e)}),Object.assign({enableHighAccuracy:!1,timeout:1e4,maximumAge:0},e));return`${a}`}async clearWatch(e){window.navigator.geolocation.clearWatch(parseInt(e.id,10))}async checkPermissions(){if("undefined"===typeof navigator||!navigator.permissions)throw this.unavailable("Permissions API not available in this browser");const e=await window.navigator.permissions.query({name:"geolocation"});return{location:e.state,coarseLocation:e.state}}async requestPermissions(){throw this.unimplemented("Not implemented on web.")}}const i=new o}}]);
//# sourceMappingURL=6642-legacy.49408a33.js.map