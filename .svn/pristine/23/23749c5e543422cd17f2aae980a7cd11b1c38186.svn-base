{"version":3,"file":"js/6790.d28e7a3a.js","mappings":"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","sources":["webpack://navy/./src/components/Home/MainBanner.vue","webpack://navy/./src/components/Home/MainBanner.vue?2914","webpack://navy/./src/views/page/MessageMap.vue","webpack://navy/./src/components/MessageTalk/MessageTalkMaps.vue","webpack://navy/./src/components/MessageTalk/MessageTalkMaps.vue?f260","webpack://navy/./src/views/page/MessageMap.vue?2d5c"],"sourcesContent":["<template>\n  <!-- 홈 메인 배너 : 배너 이미지는 동일한 사이즈로 올리는 것이 정석 -->\n  <swiper\n    @swiper=\"setSwiperRef\"\n    :modules=\"modules\"\n    :pagination=\"{ clickable: true }\"\n    :slides-per-view=\"1\"\n    :autoplay=\"{\n      delay: 3000,\n      disableOnInteraction: false\n    }\"\n    :loop=\"true\"\n    :observer=\"true\"\n  >\n    <swiper-slide v-for=\"(item, index) in bannerList\" :key=\"index\">\n      <ion-img\n        v-bind:src=\"\n          item.cdnNm !== '' && item.cdnNm !== null\n            ? 'https://' + item.cdnNm\n            : require('../../assets/img/Loading_icon.gif')\n        \"\n        @ionError=\"\n          $event.srcElement.src = require('../../assets/img/Loading_icon.gif')\n        \"\n        @click=\"routerPush(item.path)\"\n      />\n    </swiper-slide>\n  </swiper>\n</template>\n<script>\nimport { Autoplay, Pagination, Navigation } from \"swiper/modules\";\nimport { Swiper, SwiperSlide } from \"swiper/vue\";\n\nimport { storeMapFn } from '@/assets/js/common';\n\nexport default {\n  name: \"MainBanner\",\n  props: {\n    bannerList: { type: Array }\n  },\n  components: {\n    Swiper,\n    SwiperSlide\n  },\n  data() {\n    return {\n      modules: [Autoplay, Pagination, Navigation],\n      swiperRef: null\n    };\n  },\n  mounted() {\n  },\n  beforeMount() {\n  },\n  beforeUpdate() {\n  },\n  updated() {\n    // this.swiperRef.update();\n    console.log(this.swiperRef);\n    if (this.swiperRef != null) {\n      this.swiperRef.slideNext(2000);\n    }\n  },\n  beforeUnmount() {\n  },\n  methods: {\n    routerPush(path) {\n      // this.swiperRef.autoplay.start();\n      // return;\n      if (path != \"\" && path != null) {\n        if(path == '/subscription'){\n          storeMapFn({subscribeYn: 'Y'});\n          this.$router.push('/store');\n        } else {\n          this.$router.push(path);\n        }\n      }\n    },\n    setSwiperRef(swiper) {\n      this.swiperRef = swiper;\n    }\n  }\n};\n</script>\n<style scoped lang=\"scss\">\n.swiper {\n  padding: 0;\n  margin: 0;\n\n  ion-img {\n    border-radius: 0;\n  }\n}\n</style>\n","import { render } from \"./MainBanner.vue?vue&type=template&id=ada4e3f6&scoped=true\"\nimport script from \"./MainBanner.vue?vue&type=script&lang=js\"\nexport * from \"./MainBanner.vue?vue&type=script&lang=js\"\n\nimport \"./MainBanner.vue?vue&type=style&index=0&id=ada4e3f6&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ada4e3f6\"]])\n\nexport default __exports__","<template>\r\n  <ion-page>\r\n    <ion-header>\r\n      <ion-toolbar style=\"--background: #1c1d48;\">\r\n        <ion-buttons slot=\"start\">\r\n          <BackButton />\r\n        </ion-buttons>\r\n        <ion-title>{{ title }}</ion-title>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n    <ion-content>\r\n      <ion-header>\r\n        <!-- 상단 배너 -->\r\n        <MainBanner :bannerList=\"bannerList\" v-if=\"bannerList.length > 0\" />\r\n      </ion-header>\r\n      <!--      <div id=\"map\" style=\"width: 100%; height: 100%;\"></div>-->\r\n      <MessageTalkMaps v-if=\"chatroomId != ''\"\r\n                       :chatroomId=\"chatroomId\"\r\n                       @modalInfo=\"modalInfo($event)\"\r\n      />\r\n      <ion-modal\r\n        :is-open=\"mapInfoModal\"\r\n        handle-behavior=\"cycle\"\r\n        @ionModalDidDismiss=\"mapInfoModal = false\"\r\n        :initial-breakpoint=\"0.95\"\r\n        :breakpoints=\"[0, 0.95]\"\r\n        class=\"custom-modal bottom-modal\"\r\n      >\r\n        <ion-content>\r\n          <CustomModalLayout>\r\n            <template #header>\r\n              <MessageTalkMapUserInfo\r\n                :item=\"profileItem\"\r\n                @click=\"modalBtn('profile', modalItem)\"\r\n              />\r\n            </template>\r\n            <template #content>\r\n              <ion-text color=\"light\" class=\"text-lg text-bold\" style=\"font-size: 20px; \">\r\n                {{ profileItem.shortWord }}\r\n              </ion-text>\r\n            </template>\r\n            <template #footer>\r\n              <div class=\"row-box\">\r\n                <ion-button\r\n                  @click=\"modalBtn('profile', modalItem)\"\r\n                  color=\"primary\"\r\n                  shape=\"round\"\r\n                  expand=\"block\"\r\n                  size=\"large\"\r\n                >\r\n                  프로필 보기\r\n                </ion-button>\r\n              </div>\r\n            </template>\r\n          </CustomModalLayout>\r\n        </ion-content>\r\n      </ion-modal>\r\n    </ion-content>\r\n  </ion-page>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {\r\n  IonPage, IonHeader, IonIcon, IonButtons, IonButton,\r\n  IonToolbar, IonContent, loadingController\r\n} from \"@ionic/vue\";\r\n\r\nimport { chevronBack, closeOutline, search, locationOutline } from \"ionicons/icons\";\r\nimport { getData, openChatViewMap, openChatViewMapFn, dailyCardInfoMapFn, messageTalkMap } from \"@/assets/js/common\";\r\nimport MessageTalkMaps from \"@/components/MessageTalk/MessageTalkMaps.vue\";\r\nimport MessageTalkMapUserInfo from \"@/components/MessageTalk/MessageTalkMapUserInfo\";\r\nimport BackButton from \"@/components/BackButton.vue\";\r\nimport MainBanner from \"@/components/Home/MainBanner.vue\";\r\n\r\nexport default {\r\n  name: \"MessageMap\",\r\n  components: {\r\n    BackButton,\r\n    IonPage, IonHeader, IonToolbar, IonIcon, IonButtons, IonButton, IonContent, MessageTalkMaps,\r\n    MessageTalkMapUserInfo, MainBanner\r\n  },\r\n  data() {\r\n    return {\r\n      locationOutline,\r\n      search,\r\n      closeOutline,\r\n      chevronBack,\r\n\r\n      itemList: [],\r\n      map: null,\r\n\r\n      addrItem: \"\",\r\n      currLat: \"\",\r\n      currLon: \"\",\r\n      mapInfoModal: false,\r\n      modalItem: \"\",\r\n      loading: null,\r\n\r\n      mainFileId: \"\",\r\n      regUserKey: \"\",\r\n      userPhotoId: \"\",\r\n      isEndScroll: false,\r\n\r\n      ssUserYn: \"\",\r\n      attendYn: \"\",\r\n      attendChk: \"\",\r\n      inviteYn: \"\",\r\n      attendRegTime: \"\",\r\n      modalHeight: \"500px\",\r\n      intervalId: null,\r\n\r\n      selectedLat: null,  // 클릭한 위치의 위도\r\n      selectedLng: null,  // 클릭한 위치의 경도\r\n\r\n      cdnThumbNmProfile: \"\",\r\n\r\n      htmlMarker1: null,\r\n      htmlMarker2: null,\r\n      htmlMarker3: null,\r\n      htmlMarker4: null,\r\n      htmlMarker5: null,\r\n      chatroomId: null,\r\n      profileItem: [],\r\n\r\n      title: \"\",\r\n      bannerList: []\r\n\r\n    };\r\n  },\r\n  ionViewWillEnter() {\r\n    // 진입할 때 호출\r\n    this.chatroomId = messageTalkMap.chatroomId;\r\n    this.title = messageTalkMap.title;\r\n    this.addrItem = \"\";\r\n    this.currLat = \"\";\r\n    this.currLon = \"\";\r\n    // this.getLoginUser();\r\n    // this.useGetClusterIcon();\r\n    this.getBannerList();\r\n\r\n    if (openChatViewMap.modal === \"open\") {\r\n      this.modalInfo(openChatViewMap.item);\r\n    }\r\n\r\n  },\r\n  ionViewDidLeave() {\r\n    // 떠날 때 호출\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n\r\n    getBannerList() {\r\n      getData({\r\n        url: \"/getBannerList\",\r\n        param: { bannerType: \"MESSAGE_MAP\" },\r\n        then: (data) => {\r\n          this.$nextTick(() => {\r\n            this.bannerList = data;\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    getLoginUser() {\r\n      // this.showLoading();\r\n\r\n      getData({\r\n        url: \"/messageMain/getMessageUserAddr\",\r\n        param: {},\r\n        then: (data) => {\r\n          this.addrItem = data[0];\r\n\r\n          /** 위치업데이트값 null 인경우 기본주소로 **/\r\n          if (this.addrItem.currLat !== null || this.addrItem.currLon !== null) {\r\n            this.currLat = this.addrItem.currLat;\r\n            this.currLon = this.addrItem.currLon;\r\n          } else {\r\n            this.currLat = this.addrItem.lat;\r\n            this.currLon = this.addrItem.lon;\r\n          }\r\n\r\n          this.getMessageLatLon();\r\n        }\r\n      });\r\n    },\r\n\r\n    getMessageLatLon() {\r\n\r\n      getData({\r\n        url: \"/messageMain/getRoomUserLocation\",\r\n        param: { \"chatroomId\": messageTalkMap.chatroomId },\r\n        then: (data) => {\r\n          this.itemList = data;\r\n\r\n          this.$nextTick(() => {\r\n            this.naverMap(this.currLat, this.currLon);\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    modalBtn(type, item) {\r\n      if (type === \"profile\") {\r\n        dailyCardInfoMapFn({ userKey: item.regUserKey, type: \"messageMap\" });\r\n        this.$router.push(\"/dailyCardInfo\");\r\n        this.mapInfoModal = false;\r\n      }\r\n\r\n    },\r\n\r\n    joinIn(item) {\r\n      if (this.attendYn === \"Y\" || this.ssUserYn === \"Y\") {\r\n        this.$router.push({ name: \"MessageTalk\", query: { \"chatroomId\": this.chatroomId } });\r\n        return;\r\n      } else {\r\n        this.showLoading();\r\n\r\n        getData({\r\n          url: \"/setOpenChatInvite\",\r\n          param: {\r\n            \"openChatKey\": item.openChatKey\r\n          },\r\n          then: (data) => {\r\n            this.inviteYn = data.inviteYn;\r\n            this.loading.dismiss();\r\n\r\n            this.mapInfoModal = false;\r\n          }\r\n        });\r\n      }\r\n    },\r\n    modalInfo(item) {\r\n      this.modalItem = item;\r\n      this.regUserKey = this.modalItem.regUserKey;\r\n      this.mainFileId = this.modalItem.fileId;\r\n      this.mapInfoModal = true;\r\n\r\n      this.$nextTick(() => {\r\n        this.getUserInfo();\r\n      });\r\n    },\r\n\r\n    getUserInfo() {\r\n      getData({\r\n        url: \"/getUserInfo\",\r\n        param: {\r\n          \"regUserKey\": this.regUserKey\r\n        },\r\n        then: (data) => {\r\n          this.profileItem = data;\r\n        }\r\n      });\r\n    },\r\n\r\n    /** naver map **/\r\n    naverMap(lat, lng) {\r\n      const navermaps = window.naver.maps;\r\n\r\n      let mapOptions = {\r\n        center: new navermaps.LatLng(lat, lng),\r\n        zoom: 15,\r\n        /** 줌 컨트롤러 **/\r\n        zoomControl: true,\r\n        zoomControlOptions: {\r\n          style: navermaps.ZoomControlStyle.LARGE,\r\n          position: navermaps.Position.TOP_RIGHT\r\n        }\r\n      };\r\n\r\n      /** 맵 생성 **/\r\n      this.map = new navermaps.Map(\"map\", mapOptions);\r\n\r\n      /** 마커 클릭시 생성 (start) **/\r\n      /** 마커 객체를 생성대기 **/\r\n      // const markerIcon = new navermaps.Marker({\r\n      //   // selectedLat, selectedLng가 있으면 지도에 추가\r\n      //   map: this.map,\r\n      //   // selectedLat, selectedLng가 있으면 해당 위치로\r\n      //   position: new navermaps.LatLng( lat, lng ),\r\n      //   icon: {\r\n      //     url: 'https://navermaps.github.io/maps.js.ncp/docs/img/example/pin_default.png', // 마커의 이미지 URL\r\n      //     size: new navermaps.Size(30, 47), // 이미지의 원래 크기\r\n      //     scaledSize: new navermaps.Size(30, 47), // 화면에 표시될 이미지 크기\r\n      //     origin: new navermaps.Point(0, 0),  // 이미지의 시작점\r\n      //     anchor: new navermaps.Point(12, 37) // 마커를 지도에 고정시킬 위치\r\n      //   }\r\n      // });\r\n      /** 마커 객체를 생성 **/\r\n      // navermaps.Event.addListener(this.map, 'click', (e) => {\r\n      //   /** 마커 위치변경 **/\r\n      //   markerIcon.setMap(null);\r\n      //   markerIcon.setPosition(e.coord);\r\n      //   markerIcon.setMap(this.map);\r\n      //\r\n      //   // 클릭한 위치의 좌표 저장\r\n      //   this.selectedLat = e.coord.lat();\r\n      //   this.selectedLng = e.coord.lng();\r\n      //   console.log(\"this.selectedLat : : :\",this.selectedLat)\r\n      //   console.log(\"this.selectedLng : : :\",this.selectedLng)\r\n      //\r\n      // });\r\n      /** 마커 클릭시 생성 (end) **/\r\n\r\n      // 지도 초기화 후 커스텀 컨트롤 생성\r\n      navermaps.Event.once(this.map, \"init\", () => {\r\n\r\n        /** 현재위치로 이동 버튼 **/\r\n        let locationBtnHtml =\r\n          `<a style=\"\r\n                z-index: 100;\r\n                overflow: hidden;\r\n                display: inline-block;\r\n                position: absolute;\r\n                top: 7px;\r\n                left: 5px;\r\n                width: 34px;\r\n                height: 34px;\r\n                border: 1px solid rgba(58,70,88,.45);\r\n                border-radius: 2px;\r\n                background: #fcfcfd;\r\n                  background-clip: border-box;\r\n                text-align: center;\r\n                -webkit-background-clip: padding;\r\n                background-clip: padding-box;\r\n              \"\r\n            >\r\n            <span style=\"\r\n                overflow: hidden;\r\n                display: inline-block;\r\n                color: transparent !important;\r\n                vertical-align: top;\r\n                background: url(https://ssl.pstatic.net/static/maps/m/spr_trff_v6.png) 0 0;\r\n                background-position-x: 0px;\r\n                background-position-y: 0px;\r\n                background-size: auto;\r\n                background-size: 200px 200px;\r\n                -webkit-background-size: 200px 200px;\r\n                width: 20px;\r\n                height: 20px;\r\n                margin: 7px 0 0 0;\r\n                background-position: -153px -31px;\r\n              \">중심위치</span>\r\n           </a>`;\r\n        let customControl = new navermaps.CustomControl(locationBtnHtml, {\r\n          position: window.naver.maps.Position.TOP_LEFT // 버튼의 위치 설정\r\n        });\r\n\r\n        customControl.setMap(this.map); // 버튼을 지도에 추가\r\n        /** 현재위치로 이동 버튼 **/\r\n\r\n        window.naver.maps.Event.addDOMListener(customControl.getElement(), \"click\", () => {\r\n          this.map.setCenter(new navermaps.LatLng(lat, lng)); // 버튼 클릭 시 지도 중심 변경\r\n        });\r\n      });\r\n      /** 마커 생성 **/\r\n      this.itemList.forEach(markerInfo => {\r\n        const markerLatLng = new navermaps.LatLng(markerInfo.currLat, markerInfo.currLon);\r\n\r\n        const marker = new navermaps.Marker({\r\n          position: markerLatLng,\r\n          map: this.map,\r\n          icon: {\r\n            // TODO: class marker 추가 => 추후 cluster 작업시 아래와 같은 구조로 작업해주시면 됩니다\r\n            content: `<div class=\"marker\"><img src=\"https://${markerInfo.cdnThumbNm}\" /></div>`,\r\n            // url: 'https://' + markerInfo.cdnThumbNm, // 마커의 이미지 URL\r\n            size: new navermaps.Size(60, 60), // 이미지의 원래 크기\r\n            scaledSize: new navermaps.Size(60, 60), // 화면에 표시될 이미지 크기\r\n            origin: new navermaps.Point(0, 0), // 이미지의 시작점\r\n            anchor: new navermaps.Point(12, 37) // 마커를 지도에 고정시킬 위치\r\n          },\r\n          title: markerInfo.title\r\n        });\r\n\r\n        /** 마커 이벤트 **/\r\n        window.naver.maps.Event.addListener(marker, \"click\", () => {\r\n          this.modalInfo(markerInfo);\r\n        });\r\n      });\r\n    },\r\n\r\n    useGetClusterIcon() {\r\n      if (this.htmlMarker1 == null) {\r\n        this.htmlMarker1 = {\r\n          content: \"<div style=\\\"cursor:pointer;width:40px;height:40px;line-height:42px;font-size:10px;color:white;text-align:center;font-weight:bold;background:url(https://navermaps.github.io/maps.js.ncp/docs/img/cluster-marker-1.png);background-size:contain;\\\"></div>\",\r\n          size: window.naver.maps.Size(40, 40),\r\n          anchor: window.naver.maps.Point(20, 20)\r\n        };\r\n      }\r\n      if (this.htmlMarker2 == null) {\r\n        this.htmlMarker2 = {\r\n          content: \"<div style=\\\"cursor:pointer;width:40px;height:40px;line-height:42px;font-size:10px;color:white;text-align:center;font-weight:bold;background:url(https://navermaps.github.io/maps.js.ncp/docs/img/cluster-marker-2.png);background-size:contain;\\\"></div>\",\r\n          size: window.naver.maps.Size(40, 40),\r\n          anchor: window.naver.maps.Point(20, 20)\r\n        };\r\n      }\r\n      if (this.htmlMarker3 == null) {\r\n        this.htmlMarker3 = {\r\n          content: \"<div style=\\\"cursor:pointer;width:40px;height:40px;line-height:42px;font-size:10px;color:white;text-align:center;font-weight:bold;background:url(https://navermaps.github.io/maps.js.ncp/docs/img/cluster-marker-3.png);background-size:contain;\\\"></div>\",\r\n          size: window.naver.maps.Size(40, 40),\r\n          anchor: window.naver.maps.Point(20, 20)\r\n        };\r\n      }\r\n      if (this.htmlMarker4 == null) {\r\n        this.htmlMarker4 = {\r\n          content: \"<div style=\\\"cursor:pointer;width:40px;height:40px;line-height:42px;font-size:10px;color:white;text-align:center;font-weight:bold;background:url(https://navermaps.github.io/maps.js.ncp/docs/img/cluster-marker-4.png);background-size:contain;\\\"></div>\",\r\n          size: window.naver.maps.Size(40, 40),\r\n          anchor: window.naver.maps.Point(20, 20)\r\n        };\r\n      }\r\n      if (this.htmlMarker5 == null) {\r\n        this.htmlMarker5 = {\r\n          content: \"<div style=\\\"cursor:pointer;width:40px;height:40px;line-height:42px;font-size:10px;color:white;text-align:center;font-weight:bold;background:url(https://navermaps.github.io/maps.js.ncp/docs/img/cluster-marker-5.png);background-size:contain;\\\"></div>\",\r\n          size: window.naver.maps.Size(40, 40),\r\n          anchor: window.naver.maps.Point(20, 20)\r\n        };\r\n      }\r\n    },\r\n\r\n    /** 로딩 **/\r\n    async showLoading() {\r\n      this.loading = await loadingController.create({\r\n        message: \"Loading...\",\r\n        duration: 0\r\n      });\r\n\r\n      await this.loading.present();\r\n    }\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nion-icon {\r\n  color: black;\r\n}\r\n\r\nion-toolbar {\r\n  --background: #fff;\r\n}\r\n\r\n/** 모달 css **/\r\nion-modal {\r\n  --height: 220px;\r\n  --width: 100%;\r\n  --border-radius: 7px;\r\n  --box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\r\n}\r\n\r\n.modal-btn {\r\n  text-align: center;\r\n  font-weight: bolder;\r\n  font-size: 22px;\r\n  color: black;\r\n  margin: 5px;\r\n}\r\n\r\n/** 모달 css **/\r\n\r\nion-button.footerBtn {\r\n  --background: #FF8383;\r\n  --color: #ffffff;\r\n  /*--border-color: rgb(136, 136, 136);*/\r\n  /*--border-style: solid;*/\r\n  /*--border-width: 1px;*/\r\n  font-size: 19px;\r\n  font-family: ‘appfontB’;\r\n  width: 95%;\r\n  margin-left: 10px;\r\n  height: 56px;\r\n}\r\n\r\nion-button.footerBtn1 {\r\n  --background: #A3A3A3;\r\n  --color: #ffffff;\r\n  font-size: 19px;\r\n  font-family: ‘appfontB’;\r\n  width: 95%;\r\n  margin-left: 10px;\r\n  height: 56px;\r\n}\r\n</style>\r\n","<template>\n  <div id=\"map\" style=\"width: 100%; height: 100%;\"></div>\n</template>\n<script>\n\nimport { getData } from \"@/assets/js/common\";\n// import MarkerClustering from \"../../assets/js/MarkerClustering\";\nimport { MarkerClustering } from \"@/assets/js/MarkerClustering\";\n\nexport default {\n  name: \"MessageTalkMaps\",\n  props: {\n    chatroomId: { type: Number }\n  },\n  components: {},\n  data() {\n    return {\n      map: null,\n\n      itemList: [],\n      addrItem: {},\n      currLat: \"\",\n      currLon: \"\",\n\n      markers: [],\n      cluster: [],\n      markerClustering: [],\n\n      htmlMarker1: {\n        content: \"<div class='marker' style='display: flex; align-items: center; justify-content: center; background-color: #191A37; color: #fff; font-size: 20px; font-weight: 700; box-shadow: 6px 6px 10px rgba(color: #000000, alpha: 0.16);'></div>\",\n        size: window.naver.maps.Size(40, 40),\n        anchor: window.naver.maps.Point(20, 20)\n      },\n      htmlMarker2: {\n        content: \"<div class='marker' style='display: flex; align-items: center; justify-content: center; background-color: #191A37; color: #fff; font-size: 20px; font-weight: 700; box-shadow: 6px 6px 10px rgba(color: #000000, alpha: 0.16);'></div>\",\n        size: window.naver.maps.Size(40, 40),\n        anchor: window.naver.maps.Point(20, 20)\n      },\n      htmlMarker3: {\n        content: \"<div class='marker' style='display: flex; align-items: center; justify-content: center; background-color: #191A37; color: #fff; font-size: 20px; font-weight: 700; box-shadow: 6px 6px 10px rgba(color: #000000, alpha: 0.16);'></div>\",\n        size: window.naver.maps.Size(40, 40),\n        anchor: window.naver.maps.Point(20, 20)\n      },\n      htmlMarker4: {\n        content: \"<div class='marker' style='display: flex; align-items: center; justify-content: center; background-color: #191A37; color: #fff; font-size: 20px; font-weight: 700; box-shadow: 6px 6px 10px rgba(color: #000000, alpha: 0.16);'></div>\",\n        size: window.naver.maps.Size(40, 40),\n        anchor: window.naver.maps.Point(20, 20)\n      },\n      htmlMarker5: {\n        content: \"<div class='marker' style='display: flex; align-items: center; justify-content: center; background-color: #191A37; color: #fff; font-size: 20px; font-weight: 700; box-shadow: 6px 6px 10px rgba(color: #000000, alpha: 0.16);'></div>\",\n        size: window.naver.maps.Size(40, 40),\n        anchor: window.naver.maps.Point(20, 20)\n      }\n    };\n  },\n  mounted() {\n    this.getLoginUser();\n  },\n  updated() {\n    this.createMarker();\n  },\n  methods: {\n\n    getLoginUser() {\n      // this.showLoading();\n\n      getData({\n        url: \"/messageMain/getMessageUserAddr\",\n        param: {},\n        then: (data) => {\n          this.addrItem = data[0];\n\n          /** 위치업데이트값 null 인경우 기본주소로 **/\n          if (this.addrItem.currLat !== null || this.addrItem.currLon !== null) {\n            this.currLat = this.addrItem.currLat;\n            this.currLon = this.addrItem.currLon;\n          } else {\n            this.currLat = this.addrItem.lat;\n            this.currLon = this.addrItem.lon;\n          }\n\n          this.getMessageLatLon();\n        }\n      });\n    },\n\n    getMessageLatLon() {\n\n      getData({\n        url: \"/messageMain/getRoomUserLocation\",\n        param: { \"chatroomId\": this.chatroomId },\n        then: (data) => {\n          this.itemList = data;\n\n          this.$nextTick(() => {\n            this.naverMap(this.currLat, this.currLon);\n          });\n        }\n      });\n    },\n\n    /** naver map **/\n    async naverMap(lat, lng) {\n      let self = this;\n      const navermaps = window.naver.maps;\n\n      let mapOptions = {\n        center: new navermaps.LatLng(lat, lng),\n        zoom: 15,\n        /** 줌 컨트롤러 **/\n        zoomControl: true,\n        zoomControlOptions: {\n          style: navermaps.ZoomControlStyle.SMALL,\n          position: navermaps.Position.TOP_RIGHT\n        }\n      };\n\n      /** 맵 생성 **/\n      this.map = new navermaps.Map(\"map\", mapOptions);\n\n      // 지도 초기화 후 커스텀 컨트롤 생성\n      navermaps.Event.once(this.map, \"init\", () => {\n\n        /** 현재위치로 이동 버튼 **/\n        let locationBtnHtml =\n          `<a style=\"\n                z-index: 100;\n                overflow: hidden;\n                display: inline-block;\n                position: absolute;\n                top: 7px;\n                left: 5px;\n                width: 34px;\n                height: 34px;\n                border: 1px solid rgba(58,70,88,.45);\n                border-radius: 2px;\n                background: #fcfcfd;\n                  background-clip: border-box;\n                text-align: center;\n                -webkit-background-clip: padding;\n                background-clip: padding-box;\n              \"\n            >\n            <span style=\"\n                overflow: hidden;\n                display: inline-block;\n                color: transparent !important;\n                vertical-align: top;\n                background: url(https://ssl.pstatic.net/static/maps/m/spr_trff_v6.png) 0 0;\n                background-position-x: 0px;\n                background-position-y: 0px;\n                background-size: auto;\n                background-size: 200px 200px;\n                -webkit-background-size: 200px 200px;\n                width: 20px;\n                height: 20px;\n                margin: 7px 0 0 0;\n                background-position: -153px -31px;\n              \">중심위치</span>\n           </a>`;\n        let customControl = new navermaps.CustomControl(locationBtnHtml, {\n          position: window.naver.maps.Position.TOP_LEFT // 버튼의 위치 설정\n        });\n\n        customControl.setMap(this.map); // 버튼을 지도에 추가\n        /** 현재위치로 이동 버튼 **/\n\n        window.naver.maps.Event.addDOMListener(customControl.getElement(), \"click\", () => {\n          this.map.setCenter(new navermaps.LatLng(lat, lng)); // 버튼 클릭 시 지도 중심 변경\n        });\n      });\n\n      navermaps.Event.addListener(self.map, \"zoom_changed\", function() {\n        self.updateMarkers(self.markers);\n      });\n\n      navermaps.Event.addListener(self.map, \"dragend\", function() {\n        self.updateMarkers(self.markers);\n      });\n\n      await this.createMarker();\n      // await this.useGetClusterIcon();\n      // await this.asdf();\n\n    },\n\n    createMarker() {\n      const navermaps = window.naver.maps;\n      this.markers = [];\n\n      /** 마커 생성 **/\n      this.itemList.forEach(markerInfo => {\n        const markerLatLng = new navermaps.LatLng(markerInfo.currLat, markerInfo.currLon);\n\n        const marker = new navermaps.Marker({\n          position: markerLatLng,\n          map: this.map,\n          icon: {\n            // TODO: class marker 추가 => 추후 cluster 작업시 아래와 같은 구조로 작업해주시면 됩니다\n            content: `<div class=\"marker\"><img src=\"https://${markerInfo.cdnThumbNm}\" /></div>`,\n            // url: \"https://\" + markerInfo.cdnThumbNm, // 마커의 이미지 URL\n            size: new navermaps.Size(60, 60), // 이미지의 원래 크기\n            scaledSize: new navermaps.Size(60, 60), // 화면에 표시될 이미지 크기\n            origin: new navermaps.Point(0, 0),  // 이미지의 시작점\n            anchor: new navermaps.Point(12, 37), // 마커를 지도에 고정시킬 위치\n            draggable: true\n          },\n          title: markerInfo.title\n        });\n\n        /** 마커 이벤트 **/\n        window.naver.maps.Event.addListener(marker, \"click\", () => {\n          // this.modalInfo(markerInfo);\n          this.$emit(\"modalInfo\", markerInfo);\n        });\n\n        this.markers.push(marker);\n      });\n\n      let markerClustering = new MarkerClustering({\n        minClusterSize: 2,\n        maxZoom: 16,\n        map: self.map,\n        markers: self.markers,\n        disableClickZoom: false,\n        gridSize: 30,\n        icons: [self.htmlMarker1, self.htmlMarker2, self.htmlMarker3, self.htmlMarker4, self.htmlMarker5],\n        stylingFunction: function(clusterMarker, count) {\n          const el = clusterMarker.getElement().children[0];\n          el.innerHTML = count;\n\n        }\n      });\n    },\n\n    // clusteringMarker() {\n    //   let self = this;\n    //   self.cluster = new MarkerClustering({\n    //     minClusterSize: 2,\n    //     maxZoom: 15, // 조절하면 클러스터링이 되는 기준이 달라짐 (map zoom level)\n    //     map: self.map,\n    //     markers: self.markers, // 클러스터화 할 마커들\n    //     disableClickZoom: false,\n    //     gridSize: 120,\n    //     icons: [  // 클러스터 아이콘 세팅\n    //       self.htmlMarker1,\n    //       self.htmlMarker2,\n    //       self.htmlMarker3,\n    //       self.htmlMarker4,\n    //       self.htmlMarker5\n    //     ],\n    //     indexGenerator: [10, 100, 200, 500, 1000], // 클러스터링 기준 세팅\n    //     stylingFunction: function(clusterMarker, count) {\n    //       clusterMarker\n    //         .getElement()\n    //         .querySelector(\"div:first-child\").innerText = count;\n    //     }\n    //   });\n    // },\n    // asdf() {\n    //   let self = this;\n    //\n    //   self.markerClustering = new MarkerClustering({\n    //     minClusterSize: 2,\n    //     maxZoom: 8,\n    //     map: self.map,\n    //     markers: self.markers,\n    //     disableClickZoom: false,\n    //     gridSize: 120,\n    //     icons: [self.htmlMarker1, self.htmlMarker2, self.htmlMarker3, self.htmlMarker4, self.htmlMarker5],\n    //     indexGenerator: [10, 100, 200, 500, 1000],\n    //     stylingFunction: function(clusterMarker, count) {\n    //       (clusterMarker.getElement()).find(\"div:first-child\").text(count);\n    //     }\n    //   });\n    // },\n\n    // useGetClusterIcon() {\n    //   const navermaps = window.naver.maps;\n    //   this.htmlMarker1 = {\n    //     content: \"<div style=\\\"cursor:pointer;width:40px;height:40px;line-height:42px;font-size:10px;color:white;text-align:center;font-weight:bold;background:url(https://navermaps.github.io/maps.js.ncp/docs/img/cluster-marker-1.png);background-size:contain;\\\"></div>\",\n    //     size: navermaps.Size(40, 40),\n    //     anchor: navermaps.Point(20, 20)\n    //   };\n    //   this.htmlMarker2 = {\n    //     content: \"<div style=\\\"cursor:pointer;width:40px;height:40px;line-height:42px;font-size:10px;color:white;text-align:center;font-weight:bold;background:url(https://navermaps.github.io/maps.js.ncp/docs/img/cluster-marker-2.png);background-size:contain;\\\"></div>\",\n    //     size: navermaps.Size(40, 40),\n    //     anchor: navermaps.Point(20, 20)\n    //   };\n    //   this.htmlMarker3 = {\n    //     content: \"<div style=\\\"cursor:pointer;width:40px;height:40px;line-height:42px;font-size:10px;color:white;text-align:center;font-weight:bold;background:url(https://navermaps.github.io/maps.js.ncp/docs/img/cluster-marker-3.png);background-size:contain;\\\"></div>\",\n    //     size: navermaps.Size(40, 40),\n    //     anchor: navermaps.Point(20, 20)\n    //   };\n    //   this.htmlMarker4 = {\n    //     content: \"<div style=\\\"cursor:pointer;width:40px;height:40px;line-height:42px;font-size:10px;color:white;text-align:center;font-weight:bold;background:url(https://navermaps.github.io/maps.js.ncp/docs/img/cluster-marker-4.png);background-size:contain;\\\"></div>\",\n    //     size: navermaps.Size(40, 40),\n    //     anchor: navermaps.Point(20, 20)\n    //   };\n    //   this.htmlMarker5 = {\n    //     content: \"<div style=\\\"cursor:pointer;width:40px;height:40px;line-height:42px;font-size:10px;color:white;text-align:center;font-weight:bold;background:url(https://navermaps.github.io/maps.js.ncp/docs/img/cluster-marker-5.png);background-size:contain;\\\"></div>\",\n    //     size: navermaps.Size(40, 40),\n    //     anchor: navermaps.Point(20, 20)\n    //   };\n    // },\n\n    updateMarkers() {\n      let mapBounds = this.map.getBounds();\n      let marker, position;\n\n      for (let i = 0; i < this.markers.length; i++) {\n        marker = this.markers[i];\n        position = marker.getPosition();\n\n        if (mapBounds.hasLatLng(position)) {\n          this.showMarker(marker);\n        } else {\n          this.hideMarker(marker);\n        }\n      }\n    },\n\n    showMarker(marker) {\n      if (marker.setMap()) return;\n      marker.setMap(this.map);\n    },\n\n    hideMarker(marker) {\n      if (!marker.setMap()) return;\n      marker.setMap(null);\n    }\n\n\n  }\n};\n</script>\n<style scoped lang=\"scss\">\n.swiper {\n  padding: 0;\n  margin: 0;\n\n  ion-img {\n    border-radius: 0;\n  }\n}\n</style>\n","import { render } from \"./MessageTalkMaps.vue?vue&type=template&id=3b191130&scoped=true\"\nimport script from \"./MessageTalkMaps.vue?vue&type=script&lang=js\"\nexport * from \"./MessageTalkMaps.vue?vue&type=script&lang=js\"\n\nimport \"./MessageTalkMaps.vue?vue&type=style&index=0&id=3b191130&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3b191130\"]])\n\nexport default __exports__","import { render } from \"./MessageMap.vue?vue&type=template&id=93a649fa&scoped=true\"\nimport script from \"./MessageMap.vue?vue&type=script&lang=js\"\nexport * from \"./MessageMap.vue?vue&type=script&lang=js\"\n\nimport \"./MessageMap.vue?vue&type=style&index=0&id=93a649fa&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-93a649fa\"]])\n\nexport default __exports__"],"names":["_createBlock","_component_swiper","onSwiper","$options","setSwiperRef","modules","$data","pagination","clickable","autoplay","loop","observer","_createElementBlock","_Fragment","_renderList","$props","bannerList","item","index","_component_swiper_slide","key","_createVNode","_component_ion_img","src","cdnNm","require","onIonError","_cache","$event","srcElement","onClick","routerPush","path","name","props","type","Array","components","Swiper","SwiperSlide","data","Autoplay","Pagination","Navigation","swiperRef","mounted","beforeMount","beforeUpdate","updated","console","log","this","slideNext","beforeUnmount","methods","storeMapFn","subscribeYn","$router","push","swiper","__exports__","render","class","_component_ion_page","_component_ion_header","_component_ion_toolbar","style","_component_ion_buttons","slot","_component_BackButton","_component_ion_title","title","_component_ion_content","length","_component_MainBanner","chatroomId","_component_MessageTalkMaps","onModalInfo","modalInfo","_component_ion_modal","mapInfoModal","onIonModalDidDismiss","breakpoints","_component_CustomModalLayout","header","_withCtx","_component_MessageTalkMapUserInfo","profileItem","modalBtn","modalItem","content","_component_ion_text","color","shortWord","footer","_createElementVNode","_hoisted_1","_component_ion_button","shape","expand","size","id","Number","map","itemList","addrItem","currLat","currLon","markers","cluster","markerClustering","htmlMarker1","window","naver","maps","Size","anchor","Point","htmlMarker2","htmlMarker3","htmlMarker4","htmlMarker5","getLoginUser","createMarker","getData","url","param","then","lat","lon","getMessageLatLon","$nextTick","naverMap","async","lng","self","navermaps","mapOptions","center","LatLng","zoom","zoomControl","zoomControlOptions","ZoomControlStyle","SMALL","position","Position","TOP_RIGHT","Map","Event","once","locationBtnHtml","customControl","CustomControl","TOP_LEFT","setMap","addDOMListener","getElement","setCenter","addListener","updateMarkers","forEach","markerInfo","markerLatLng","marker","Marker","icon","cdnThumbNm","scaledSize","origin","draggable","$emit","MarkerClustering","minClusterSize","maxZoom","disableClickZoom","gridSize","icons","stylingFunction","clusterMarker","count","el","children","innerHTML","mapBounds","getBounds","i","getPosition","hasLatLng","showMarker","hideMarker","BackButton","IonPage","IonHeader","IonToolbar","IonIcon","IonButtons","IonButton","IonContent","MessageTalkMaps","MessageTalkMapUserInfo","MainBanner","locationOutline","search","closeOutline","chevronBack","loading","mainFileId","regUserKey","userPhotoId","isEndScroll","ssUserYn","attendYn","attendChk","inviteYn","attendRegTime","modalHeight","intervalId","selectedLat","selectedLng","cdnThumbNmProfile","ionViewWillEnter","messageTalkMap","getBannerList","openChatViewMap","ionViewDidLeave","bannerType","dailyCardInfoMapFn","userKey","joinIn","showLoading","openChatKey","dismiss","query","fileId","getUserInfo","LARGE","useGetClusterIcon","loadingController","message","duration","present"],"sourceRoot":""}