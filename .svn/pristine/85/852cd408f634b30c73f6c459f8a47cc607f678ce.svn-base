<template>
  <ion-page>
    <custom-header page-name="ImsiTap" class="main-header"></custom-header>
    <ion-content :fullscreen="true">
      <!--  메인   -->
      <ion-list lines="none">
        <ion-refresher slot="fixed" @ionRefresh="doRefresh($event)">
          <ion-refresher-content
            refreshing-spinner="circles"
            :pulling-icon="chevronDownCircleOutline"
          ></ion-refresher-content>
        </ion-refresher>
        <ion-row>
          <ion-col size="4" v-for="(item, index) in albumList" :key="index">
            <ImsiTapAlbumItem
              :item="item"
              @event="goRouter(item)"
            />
          </ion-col>
        </ion-row>
        <ion-infinite-scroll
          :disabled="isEndScroll"
          threshold="100px"
          @ionInfinite="ionInfinite"
        >
          <ion-infinite-scroll-content></ion-infinite-scroll-content>
        </ion-infinite-scroll>
      </ion-list>

    </ion-content>
  </ion-page>
</template>

<script>

import ImsiTapAlbumItem from "@/components/Choice/ImsiTapAlbumItem";
import { dailyCardInfoMapFn, getData } from "@/assets/js/common";

export default {
  name: "ImsiTap",
  inject: ["alertController", "loadingController"],
  components: {
    ImsiTapAlbumItem
  },
  data() {
    return {
      albumList: [],
      pageNo: 1,
      pageSize: 30,
      currentPageNo: 1,
      totalCount: 0,
      isEndScroll: false
    };
  },
  ionViewWillEnter() {
    // this.getChoice();
  },
  ionViewDidLeave() {
    // 초기화
  },
  mounted() {
    this.getChoice();
  },
  methods: {
    getResult() {
      let resultObj = {};

      resultObj.pageNo = this.pageNo;
      resultObj.pageSize = this.pageSize;

      return resultObj;
    },
    getChoice() {
      this.pageNo = 1;
      this.pageSize = 30;
      this.currentPageNo = 1;
      this.albumList = [];
      this.totalCount = 0;
      this.isEndScroll = false;

      getData({
        url: "/getChiceImsiTap",
        param: this.getResult(),
        then: (data) => {
          console.log(data);
          console.log(data);
          console.log(data.result);
          console.log(data.result);

          this.albumList = data.result;
          this.totalCount = data.totalCount;
        }
      });
    },
    goRouter(item) {
      console.log(item);
      dailyCardInfoMapFn({ userKey: item.userKey, pageType: "myLike", likeSeq: item.likeSeq, nick: item.nick });
      this.$router.push("/imsiTapCardDetail");
    },

    ionInfinite(event) {
      let self = this;

      // 스크롤 로딩 셋타임아웃
      setTimeout(function() {
        self.pageNo = self.currentPageNo + 1;

        let url = "/getChiceImsiTap";

        getData({
          url: url,
          param: self.getResult(),
          then: (data) => {
            for (let i in data.result) {
              self.albumList.push(data.result[i]);
            }
            self.currentPageNo += 1;
            self.$nextTick(() => {
              if (self.albumList.length === self.totalCount)
                self.isEndScroll = true;
            });
          }
        });
        event.target.complete();
      }, 1000);
    },
    doRefresh(e) {

      this.getChoice();

      setTimeout(() => {
        e.target.complete();
      }, 500);
    },

    /** 경고 팝업창 **/
    async warningAlert(message) {
      const alert = await this.alertController.create({
        header: "",
        subHeader: "",
        message: message,
        buttons: ["OK"]
      });
      return alert.present();
    }


  }
};
</script>

<style scoped lang="scss">

</style>
