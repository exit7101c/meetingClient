<template>
  <ion-header class="custom-header">
    <ion-toolbar mode="md">
      <ion-title class="main-header">{{ this.pageName }}</ion-title>
      <ion-buttons slot="secondary">
        <!--     Choice - MY     -->
        <ion-button
          class="my-button"
          v-if="this.pageName === 'Choice'"
          @click="$router.push({ name: 'MyLike' })"
        >
          <ion-icon slot="icon-only" :icon="myOutline" />
        </ion-button>
        <!--     OpenChat - MY     -->
        <ion-button
          class="my-button"
          v-if="this.pageName === '소모임'"
          @click="$router.push({ name: 'MyOpenChat' })"
        >
          <ion-icon slot="icon-only" :icon="myOutline" />
        </ion-button>
        <!--     Community - MY     -->
        <ion-button
          class="my-button"
          v-if="this.pageName === 'Community'"
          @click="$router.push({ name: 'MyCommunity' })"
        >
          <ion-icon slot="icon-only" :icon="myOutline" />
        </ion-button>
        <!--    상점 임시 주석      -->
        <ion-button
          v-if="
            this.pageName === 'Lounge' ||
            this.pageName === 'Choice' ||
            this.pageName === '소모임' ||
            this.pageName === 'Community' ||
            this.pageName === 'Message' ||
            this.pageName === 'Setting'
          "
          @click="$router.push('/store')"
        >
          <ion-icon slot="icon-only" :icon="storefrontOutline" />
        </ion-button>
        <ion-button @click="checkedAlarm" class="has-chip">
          <ion-icon
            slot="icon-only"
            size="large"
            :icon="notificationsOutline"
          ></ion-icon>
          <ion-chip v-if="alarmCount > 99" class="chip-alarm"
            >{{ alarmCount }}+</ion-chip
          >
          <ion-chip v-if="alarmCount > 0" class="chip-alarm">{{
            alarmCount
          }}</ion-chip>
        </ion-button>
      </ion-buttons>
    </ion-toolbar>
  </ion-header>
</template>

<script>
import { personOutline, chatboxOutline } from 'ionicons/icons';
import IconNotification from '@/assets/img/icon/icon_notification.svg';
import IconStoreFront from '@/assets/img/icon/icon_store_front.svg';
import IconMy from '@/assets/img/icon/icon_my.svg';

export default {
  name: 'CustomHeader',
  props: ['pageName'],
  data() {
    return {
      personOutline,
      storefrontOutline: IconStoreFront,
      notificationsOutline: IconNotification,
      myOutline: IconMy,
      chatboxOutline,
      chkAlarm: false
    };
  },
  computed: {
    alarmCount() {
      //storex 감시
      return this.$store.state.alarmCount;
    }
  },
  mounted() {},
  methods: {
    /** 신규알람 확인하면 신규알람 아이콘 제거 **/
    checkedAlarm() {
      // chkAlarm을 true로 변경하고
      this.chkAlarm = true;
      // alarm으로 라우팅

      this.$router.push('/alarm');

      /** 새알람이 들어오면 다시 chkAlarm을 false로 **/
    }
  }
};
</script>
<style scoped lang="scss">
ion-header.custom-header {
  ion-toolbar {
    --background: var(--ion-color-dark);

    ion-title {
      --color: white;
      font-size: 24px;
      font-weight: bold;
    }
  }

  ion-button {
    &::part(native) {
      padding: 0;
    }

    ion-chip {
      top: 4px;
    }
  }

  .button-has-icon-only {
    width: 40px;
    height: 40px;
  }
}

/* 상단 MY 버튼 (현재는 사람 아이콘으로 변경 후, 주석처리) */
ion-button.my-button {
  font-weight: bold;
  --padding-start: 6px;
  --padding-end: 5px;
  --border-radius: 6px;
  margin-right: 8px;
}

.has-chip ion-chip {
  left: 23%;
}
</style>
